<Controls:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:BonderSystem"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:resources="clr-namespace:BonderSystem.Properties"
                      xmlns:conv="clr-namespace:ValueConverters;assembly=ValueConverters"                      
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:prvm="clr-namespace:ProberViewModel;assembly=ProberViewModel"
                      x:Class="BonderSystem.MainWindow"
                      mc:Ignorable="d"
                      SizeToContent="Manual" WindowStartupLocation="Manual" Left="0" Top="10" Width="2000" Height="1024" WindowStyle="None" ResizeMode="NoResize"
                      Closing="Window_Closing" Loaded="MetroWindow_Loaded"
                      Activated="MetroWindow_Activated"
                      Deactivated="MetroWindow_Deactivated" 
                      Topmost="False" ShowTitleBar="False" ShowCloseButton="False" KeyUp="MetroWindow_KeyUp"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      Visibility="Hidden"  Background="#0F0F0F" GlowBrush="Black" OverlayOpacity="0.8"
                      >

    <Controls:MetroWindow.Resources>
        <conv:StateToColorConverter x:Key="BtoVConv" />
        <conv:LotStateToStringConverter3 x:Key="BtoVConv2"/>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <!--<SolidColorBrush x:Key="BlackBackground" Color="#00000000" />-->
        <SolidColorBrush x:Key="BlackColorBrush" Color="#00000000" />

        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border Name="UpButtonBorderStyle" Background="Gray" BorderThickness="5" >
                            <!--<Border.BitmapEffect>
                                    <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="10"
                                    Softness="0.5"
                                    />
                                </Border.BitmapEffect>-->
                            <Border Name="UpButtonBorderStyle2" Background="Black" BorderThickness="5" >
                                <Viewbox Margin="4">
                                    <Path Data="M1,21H23L12,2" Fill="Gray" Name="TryAngleIcon">
                                        <Path.LayoutTransform>
                                            <RotateTransform Angle="270"></RotateTransform>
                                        </Path.LayoutTransform>
                                    </Path>
                                </Viewbox>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle2" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="UpButtonBorderStyle2" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="UpButtonBorderStyle2" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle2" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Controls:MetroWindow.Resources>
    <!--<Controls:MetroWindow.Style>
        <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource {x:Type Window}}"/>
    </Controls:MetroWindow.Style>-->
    <Controls:MetroWindow.Flyouts>

        <Controls:FlyoutsControl>

            <Controls:Flyout Header="{x:Static resources:Resources.LotSetup}"   Position="Right" Width="555" MaxHeight="1024"                            
                             IsOpen="{Binding FlyoutIsOpen, Mode=TwoWay}">
                <!--HeaderTemplate="{StaticResource CustomHeaderTemplate}"-->
                <!--<Flyout:FoLotRun/>-->
                <ContentControl DataContext="{Binding ''}" Content="{Binding OperatorView}" />
            </Controls:Flyout>

            <Controls:Flyout Position="Left" Width="715" MaxHeight="1024" 
                             CloseButtonVisibility="Hidden"
                             IsOpen="{Binding FlyoutLotInfoIsOpen, Mode=TwoWay}" Background="Black">

                <Controls:Flyout.HeaderTemplate>
                    <DataTemplate>
                        <Button Width="80" Height="70" Margin="5,5,5,5"
                                Command="{Binding Path = DataContext.LotInfoViewFlyOutCloseCommand, RelativeSource={RelativeSource AncestorType={x:Type Controls:Flyout}}}"
                                HorizontalAlignment="Right" 
                                Style="{StaticResource CloseButtonStyle}"
                                ></Button>
                    </DataTemplate>
                </Controls:Flyout.HeaderTemplate>

                <ContentControl DataContext="{Binding ''}" Content="{Binding LotInfoView}" />

            </Controls:Flyout>

        </Controls:FlyoutsControl>

    </Controls:MetroWindow.Flyouts>

    <materialDesign:DialogHost x:Name="m_dialogHost" Identifier="dialogHost" DialogTheme="Dark">
        <local:DrawerHostEx x:Name="Drawer">
            <local:DrawerHostEx.TopDrawerContent>
                <Grid Height="1000">
                    <Grid Grid.Row="0">
                        <!--<logserv:LogViewer Grid.Row="0" x:Name="DockLogView" VerticalAlignment="Stretch" Margin="8,4" />-->

                        <prvm:LogIntegratedView Grid.Row="0" x:Name="DockLogView" VerticalAlignment="Stretch" Margin="8,4"/>



                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}" 
                            VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="48" Height="32"
                            Margin="8,8,32,8" Visibility="Hidden">
                            CLOSE
                        </Button>
                    </Grid>
                </Grid>
            </local:DrawerHostEx.TopDrawerContent>
            <!--<Grid x:Name="PART_ContentCover" Background="{x:Null}" Opacity="1" IsHitTestVisible="True" Focusable="False">-->
            <Grid Name="mainPane">
                <Grid.RowDefinitions>
                    <RowDefinition Height="96"/>
                    <RowDefinition Height="496"/>
                    <RowDefinition Height="216"/>
                    <RowDefinition Height="216"/>
                    <!--<RowDefinition Height="48"/>-->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="496"/>
                    <ColumnDefinition Width="744"/>
                    <ColumnDefinition Width="744"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="PopUpGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="3" Grid.RowSpan="4" Visibility="Hidden">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="256"/>
                        <RowDefinition Height="512"/>
                        <RowDefinition Height="256"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1">
                        <RichTextBox x:Name="DetailTextBox"/>
                    </Grid>
                </Grid>

                <!-- Top Bar -->
                <!--<Border Grid.ColumnSpan="3" Margin="8,4,8,0">-->
                <Border Grid.ColumnSpan="3">
                    <Grid>
                        <ContentControl DataContext="{Binding ''}" Content="{Binding MainTopBarView}" />
                    </Grid>
                </Border>

                <!-- Screen -->
                <Border Grid.Row="{Binding MainViewRow}" 
                    Grid.RowSpan ="{Binding MainViewRowSpan}"
                    Grid.ColumnSpan="3" 
                    Margin="8" 
                    BorderBrush="#FFd6d9f4" 
                    BorderThickness="0.5" 
                    CornerRadius="2" >
                    <Grid>
                        <ContentControl DataContext="{Binding ''}" Content="{Binding MainScreenView}" />
                    </Grid>
                </Border>

                <prvm:FilterPanel x:Name="FilterPanelControl" DataContext="{Binding VMFilterPanel}"
                Grid.RowSpan="4" Grid.ColumnSpan="3" Panel.ZIndex="1"/>

                <!-- Screen -->
                <!--
            <Border Grid.RowSpan="4" Grid.ColumnSpan="3" Margin="8" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ContentControl Grid.Row="0" Grid.RowSpan="3" DataContext="{Binding ''}" Content="{Binding LoginScreenView}" />
                    -->
                <!--<logserv:LogSimpleListViewer x:Name="SimpleLogView"  Grid.Row="3"
                                                         PreviewMouseDoubleClick="SimpleLogView_PreviewMouseDoubleClick"
                                                         VerticalAlignment="Top" Margin="8,4" Visibility="Hidden"/>-->
                <!--
                </Grid>
            </Border>-->

            </Grid>
        </local:DrawerHostEx>
    </materialDesign:DialogHost>

</Controls:MetroWindow>
