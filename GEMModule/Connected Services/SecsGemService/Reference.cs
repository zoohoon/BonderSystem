//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GEMModule.SecsGemService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarrierActReqData", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GEMModule.SecsGemService.PROCEEDWITHCARRIER_ReqData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GEMModule.SecsGemService.PROCEEDWITHSLOT_ReqData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GEMModule.SecsGemService.CANCELCARRIER_ReqData))]
    public partial class CarrierActReqData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GEMModule.SecsGemService.EnumCarrierAction ActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysbyteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GEMModule.SecsGemService.EnumCarrierAction ActionType {
            get {
                return this.ActionTypeField;
            }
            set {
                if ((this.ActionTypeField.Equals(value) != true)) {
                    this.ActionTypeField = value;
                    this.RaisePropertyChanged("ActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long COUNT {
            get {
                return this.COUNTField;
            }
            set {
                if ((this.COUNTField.Equals(value) != true)) {
                    this.COUNTField = value;
                    this.RaisePropertyChanged("COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Function {
            get {
                return this.FunctionField;
            }
            set {
                if ((this.FunctionField.Equals(value) != true)) {
                    this.FunctionField = value;
                    this.RaisePropertyChanged("Function");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Stream {
            get {
                return this.StreamField;
            }
            set {
                if ((this.StreamField.Equals(value) != true)) {
                    this.StreamField = value;
                    this.RaisePropertyChanged("Stream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Sysbyte {
            get {
                return this.SysbyteField;
            }
            set {
                if ((this.SysbyteField.Equals(value) != true)) {
                    this.SysbyteField = value;
                    this.RaisePropertyChanged("Sysbyte");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PROCEEDWITHCARRIER_ReqData", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    [System.SerializableAttribute()]
    public partial class PROCEEDWITHCARRIER_ReqData : GEMModule.SecsGemService.CarrierActReqData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CARRIERACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CARRIERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CATTRDATAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CATTRIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint DATAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PTNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SLOTMAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SYSTEMBYTEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CARRIERACTION {
            get {
                return this.CARRIERACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.CARRIERACTIONField, value) != true)) {
                    this.CARRIERACTIONField = value;
                    this.RaisePropertyChanged("CARRIERACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CARRIERID {
            get {
                return this.CARRIERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CARRIERIDField, value) != true)) {
                    this.CARRIERIDField = value;
                    this.RaisePropertyChanged("CARRIERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CATTRDATA {
            get {
                return this.CATTRDATAField;
            }
            set {
                if ((object.ReferenceEquals(this.CATTRDATAField, value) != true)) {
                    this.CATTRDATAField = value;
                    this.RaisePropertyChanged("CATTRDATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CATTRID {
            get {
                return this.CATTRIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CATTRIDField, value) != true)) {
                    this.CATTRIDField = value;
                    this.RaisePropertyChanged("CATTRID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint DATAID {
            get {
                return this.DATAIDField;
            }
            set {
                if ((this.DATAIDField.Equals(value) != true)) {
                    this.DATAIDField = value;
                    this.RaisePropertyChanged("DATAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PTN {
            get {
                return this.PTNField;
            }
            set {
                if ((this.PTNField.Equals(value) != true)) {
                    this.PTNField = value;
                    this.RaisePropertyChanged("PTN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SLOTMAP {
            get {
                return this.SLOTMAPField;
            }
            set {
                if ((object.ReferenceEquals(this.SLOTMAPField, value) != true)) {
                    this.SLOTMAPField = value;
                    this.RaisePropertyChanged("SLOTMAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SYSTEMBYTE {
            get {
                return this.SYSTEMBYTEField;
            }
            set {
                if ((this.SYSTEMBYTEField.Equals(value) != true)) {
                    this.SYSTEMBYTEField = value;
                    this.RaisePropertyChanged("SYSTEMBYTE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PROCEEDWITHSLOT_ReqData", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    [System.SerializableAttribute()]
    public partial class PROCEEDWITHSLOT_ReqData : GEMModule.SecsGemService.CarrierActReqData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CARRIERACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CARRIERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DATAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OCRMAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PTNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SLOTMAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SYSTEMBYTEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USAGEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CARRIERACTION {
            get {
                return this.CARRIERACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.CARRIERACTIONField, value) != true)) {
                    this.CARRIERACTIONField = value;
                    this.RaisePropertyChanged("CARRIERACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CARRIERID {
            get {
                return this.CARRIERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CARRIERIDField, value) != true)) {
                    this.CARRIERIDField = value;
                    this.RaisePropertyChanged("CARRIERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DATAID {
            get {
                return this.DATAIDField;
            }
            set {
                if ((this.DATAIDField.Equals(value) != true)) {
                    this.DATAIDField = value;
                    this.RaisePropertyChanged("DATAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] OCRMAP {
            get {
                return this.OCRMAPField;
            }
            set {
                if ((object.ReferenceEquals(this.OCRMAPField, value) != true)) {
                    this.OCRMAPField = value;
                    this.RaisePropertyChanged("OCRMAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PTN {
            get {
                return this.PTNField;
            }
            set {
                if ((this.PTNField.Equals(value) != true)) {
                    this.PTNField = value;
                    this.RaisePropertyChanged("PTN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SLOTMAP {
            get {
                return this.SLOTMAPField;
            }
            set {
                if ((object.ReferenceEquals(this.SLOTMAPField, value) != true)) {
                    this.SLOTMAPField = value;
                    this.RaisePropertyChanged("SLOTMAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SYSTEMBYTE {
            get {
                return this.SYSTEMBYTEField;
            }
            set {
                if ((this.SYSTEMBYTEField.Equals(value) != true)) {
                    this.SYSTEMBYTEField = value;
                    this.RaisePropertyChanged("SYSTEMBYTE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USAGE {
            get {
                return this.USAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.USAGEField, value) != true)) {
                    this.USAGEField = value;
                    this.RaisePropertyChanged("USAGE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CANCELCARRIER_ReqData", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    [System.SerializableAttribute()]
    public partial class CANCELCARRIER_ReqData : GEMModule.SecsGemService.CarrierActReqData {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumCarrierAction", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    public enum EnumCarrierAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROCEEDWITHCARRIER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROCEEDWITHSLOT = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CANCELCARRIER = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecsControlStateEnum", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    public enum SecsControlStateEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EQ_OFFLINE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ATTEMPT_ONLINE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HOST_OFFLINE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE_LOCAL = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE_REMOTE = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecsGemStateEnum", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    public enum SecsGemStateEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INIT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDLE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SETUP = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        READY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXECUTE = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecsCommStateEnum", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    public enum SecsCommStateEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COMM_DISABLED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAIT_CR_FROM_HOST = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAIT_DELAY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAIT_CRA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COMMUNICATING = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumRemoteCommand", Namespace="http://schemas.datacontract.org/2004/07/WcfSecs_XGemService")]
    public enum EnumRemoteCommand : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNDEFINE = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABORT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CC_START = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DLRECIPE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JOB_CANCEL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JOB_CREATE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE_LOCAL = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE_REMOTE = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINEPP_SELECT = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAUSE = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PP_SELECT = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PSTART = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PW_REQUEST = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RESTART = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RESUME = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCAN_CASSETTE = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNAL_TOWER = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        START = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STOP = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNDOCK = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WFCLN = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WFIDCONFPROC = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZIF_REQUEST = 21,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecsGemService.ISecsGemService", CallbackContract=typeof(GEMModule.SecsGemService.ISecsGemServiceCallback))]
    public interface ISecsGemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetPPFmtChanged", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetPPFmtChangedResponse")]
        long GEMSetPPFmtChanged(long nMode, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetPPFmtChanged", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetPPFmtChangedResponse")]
        System.Threading.Tasks.Task<long> GEMSetPPFmtChangedAsync(long nMode, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPLoadInquire", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPLoadInquireResponse")]
        long GEMReqPPLoadInquire(string sPpid, long nLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPLoadInquire", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPLoadInquireResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPLoadInquireAsync(string sPpid, long nLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPLoadInquire", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPLoadInquireResponse")]
        long GEMRspPPLoadInquire(long nMsgId, string sPpid, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPLoadInquire", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPLoadInquireResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPLoadInquireAsync(long nMsgId, string sPpid, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPSendResponse")]
        long GEMReqPPSend(string sPpid, string pbBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPSendResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPSendAsync(string sPpid, string pbBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPSendResponse")]
        long GEMRspPPSend(long nMsgId, string sPpid, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPSendResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPSendAsync(long nMsgId, string sPpid, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPP", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPResponse")]
        long GEMReqPP(string sPpid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPP", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPAsync(string sPpid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPP", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPResponse")]
        long GEMRspPP(long nMsgId, string sPpid, string pbBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPP", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPAsync(long nMsgId, string sPpid, string pbBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPDelete", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPDeleteResponse")]
        long GEMRspPPDelete(long nMsgId, long nCount, string[] psPpids, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPDelete", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPDeleteResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPDeleteAsync(long nMsgId, long nCount, string[] psPpids, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPList", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPListResponse")]
        long GEMRspPPList(long nMsgId, long nCount, string[] psPpids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPList", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPListResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPListAsync(long nMsgId, long nCount, string[] psPpids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmtSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtSendResponse")]
        long GEMReqPPFmtSend(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmtSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtSendResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPFmtSendAsync(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmtSend2", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtSend2Response")]
        long GEMReqPPFmtSend2(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmtSend2", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtSend2Response")]
        System.Threading.Tasks.Task<long> GEMReqPPFmtSend2Async(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPFmtSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPFmtSendResponse")]
        long GEMRspPPFmtSend(long nMsgId, string sPpid, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPFmtSend", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPFmtSendResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPFmtSendAsync(long nMsgId, string sPpid, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmt", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtResponse")]
        long GEMReqPPFmt(string sPpid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmt", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPFmtAsync(string sPpid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPFmt", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPFmtResponse")]
        long GEMRspPPFmt(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPFmt", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPFmtResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPFmtAsync(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPFmt2", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPFmt2Response")]
        long GEMRspPPFmt2(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPFmt2", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPFmt2Response")]
        System.Threading.Tasks.Task<long> GEMRspPPFmt2Async(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmtVerification", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtVerificationResponse")]
        long GEMReqPPFmtVerification(string sPpid, long nCount, long[] pnAck, string[] psSeqNumber, string[] psError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPFmtVerification", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPFmtVerificationResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPFmtVerificationAsync(string sPpid, long nCount, long[] pnAck, string[] psSeqNumber, string[] psError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetTerminalMessage", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetTerminalMessageResponse")]
        long GEMSetTerminalMessage(long nTid, string sMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetTerminalMessage", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetTerminalMessageResponse")]
        System.Threading.Tasks.Task<long> GEMSetTerminalMessageAsync(long nTid, string sMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVariable", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVariableResponse")]
        long GEMSetVariable(long nCount, long[] pnVid, string[] psValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVariable", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVariableResponse")]
        System.Threading.Tasks.Task<long> GEMSetVariableAsync(long nCount, long[] pnVid, string[] psValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetVariable", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetVariableResponse")]
        GEMModule.SecsGemService.GEMGetVariableResponse GEMGetVariable(GEMModule.SecsGemService.GEMGetVariableRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetVariable", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetVariableResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetVariableResponse> GEMGetVariableAsync(GEMModule.SecsGemService.GEMGetVariableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVariables", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVariablesResponse")]
        long GEMSetVariables(long nObjectID, long nVid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVariables", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVariablesResponse")]
        System.Threading.Tasks.Task<long> GEMSetVariablesAsync(long nObjectID, long nVid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVarName", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVarNameResponse")]
        long GEMSetVarName(long nCount, string[] psVidName, string[] psValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVarName", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVarNameResponse")]
        System.Threading.Tasks.Task<long> GEMSetVarNameAsync(long nCount, string[] psVidName, string[] psValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetVarName", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetVarNameResponse")]
        long GEMGetVarName(long nCount, string[] psVidName, string[] psValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetVarName", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetVarNameResponse")]
        System.Threading.Tasks.Task<long> GEMGetVarNameAsync(long nCount, string[] psVidName, string[] psValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetEvent", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetEventResponse")]
        long GEMSetEvent(long nEventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetEvent", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetEventResponse")]
        System.Threading.Tasks.Task<long> GEMSetEventAsync(long nEventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetSpecificMessage", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetSpecificMessageResponse")]
        long GEMSetSpecificMessage(long nObjectID, string sMsgName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetSpecificMessage", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetSpecificMessageResponse")]
        System.Threading.Tasks.Task<long> GEMSetSpecificMessageAsync(long nObjectID, string sMsgName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetSpecificMessage", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetSpecificMessageResponse")]
        GEMModule.SecsGemService.GEMGetSpecificMessageResponse GEMGetSpecificMessage(GEMModule.SecsGemService.GEMGetSpecificMessageRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetSpecificMessage", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetSpecificMessageResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetSpecificMessageResponse> GEMGetSpecificMessageAsync(GEMModule.SecsGemService.GEMGetSpecificMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetAllStringItem", ReplyAction="http://tempuri.org/ISecsGemService/GetAllStringItemResponse")]
        GEMModule.SecsGemService.GetAllStringItemResponse GetAllStringItem(GEMModule.SecsGemService.GetAllStringItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetAllStringItem", ReplyAction="http://tempuri.org/ISecsGemService/GetAllStringItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetAllStringItemResponse> GetAllStringItemAsync(GEMModule.SecsGemService.GetAllStringItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetAllStringItem", ReplyAction="http://tempuri.org/ISecsGemService/SetAllStringItemResponse")]
        long SetAllStringItem(long nObjectID, string sValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetAllStringItem", ReplyAction="http://tempuri.org/ISecsGemService/SetAllStringItemResponse")]
        System.Threading.Tasks.Task<long> SetAllStringItemAsync(long nObjectID, string sValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPSendEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPSendExResponse")]
        long GEMReqPPSendEx(string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPSendEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPSendExResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPSendExAsync(string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPSendEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPSendExResponse")]
        long GEMRspPPSendEx(long nMsgId, string sPpid, string sRecipePath, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPSendEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPSendExResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPSendExAsync(long nMsgId, string sPpid, string sRecipePath, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPExResponse")]
        long GEMReqPPEx(string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqPPEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqPPExResponse")]
        System.Threading.Tasks.Task<long> GEMReqPPExAsync(string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPExResponse")]
        long GEMRspPPEx(long nMsgId, string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspPPEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspPPExResponse")]
        System.Threading.Tasks.Task<long> GEMRspPPExAsync(long nMsgId, string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVariableEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVariableExResponse")]
        long GEMSetVariableEx(long nObjectID, long nVid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetVariableEx", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetVariableExResponse")]
        System.Threading.Tasks.Task<long> GEMSetVariableExAsync(long nObjectID, long nVid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqLoopback", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqLoopbackResponse")]
        long GEMReqLoopback(long nCount, long[] pnAbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqLoopback", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqLoopbackResponse")]
        System.Threading.Tasks.Task<long> GEMReqLoopbackAsync(long nCount, long[] pnAbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetEventEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetEventEnableResponse")]
        long GEMSetEventEnable(long nCount, long[] pnCEIDs, long nEnable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetEventEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetEventEnableResponse")]
        System.Threading.Tasks.Task<long> GEMSetEventEnableAsync(long nCount, long[] pnCEIDs, long nEnable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetAlarmEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetAlarmEnableResponse")]
        long GEMSetAlarmEnable(long nCount, long[] pnALIDs, long nEnable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetAlarmEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetAlarmEnableResponse")]
        System.Threading.Tasks.Task<long> GEMSetAlarmEnableAsync(long nCount, long[] pnALIDs, long nEnable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetEventEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetEventEnableResponse")]
        GEMModule.SecsGemService.GEMGetEventEnableResponse GEMGetEventEnable(GEMModule.SecsGemService.GEMGetEventEnableRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetEventEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetEventEnableResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetEventEnableResponse> GEMGetEventEnableAsync(GEMModule.SecsGemService.GEMGetEventEnableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetAlarmEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetAlarmEnableResponse")]
        GEMModule.SecsGemService.GEMGetAlarmEnableResponse GEMGetAlarmEnable(GEMModule.SecsGemService.GEMGetAlarmEnableRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetAlarmEnable", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetAlarmEnableResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetAlarmEnableResponse> GEMGetAlarmEnableAsync(GEMModule.SecsGemService.GEMGetAlarmEnableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetAlarmInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetAlarmInfoResponse")]
        GEMModule.SecsGemService.GEMGetAlarmInfoResponse GEMGetAlarmInfo(GEMModule.SecsGemService.GEMGetAlarmInfoRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetAlarmInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetAlarmInfoResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetAlarmInfoResponse> GEMGetAlarmInfoAsync(GEMModule.SecsGemService.GEMGetAlarmInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetSVInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetSVInfoResponse")]
        GEMModule.SecsGemService.GEMGetSVInfoResponse GEMGetSVInfo(GEMModule.SecsGemService.GEMGetSVInfoRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetSVInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetSVInfoResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetSVInfoResponse> GEMGetSVInfoAsync(GEMModule.SecsGemService.GEMGetSVInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetECVInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetECVInfoResponse")]
        GEMModule.SecsGemService.GEMGetECVInfoResponse GEMGetECVInfo(GEMModule.SecsGemService.GEMGetECVInfoRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetECVInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetECVInfoResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetECVInfoResponse> GEMGetECVInfoAsync(GEMModule.SecsGemService.GEMGetECVInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspOffline", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspOfflineResponse")]
        long GEMRspOffline(long nMsgId, long nAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspOffline", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspOfflineResponse")]
        System.Threading.Tasks.Task<long> GEMRspOfflineAsync(long nMsgId, long nAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspOnline", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspOnlineResponse")]
        long GEMRspOnline(long nMsgId, long nAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspOnline", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspOnlineResponse")]
        System.Threading.Tasks.Task<long> GEMRspOnlineAsync(long nMsgId, long nAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqHostOffline", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqHostOfflineResponse")]
        long GEMReqHostOffline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqHostOffline", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqHostOfflineResponse")]
        System.Threading.Tasks.Task<long> GEMReqHostOfflineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqStartPolling", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqStartPollingResponse")]
        long GEMReqStartPolling(string sName, long nScanTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqStartPolling", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqStartPollingResponse")]
        System.Threading.Tasks.Task<long> GEMReqStartPollingAsync(string sName, long nScanTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqStopPolling", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqStopPollingResponse")]
        long GEMReqStopPolling(string sName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqStopPolling", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqStopPollingResponse")]
        System.Threading.Tasks.Task<long> GEMReqStopPollingAsync(string sName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMEnableLog", ReplyAction="http://tempuri.org/ISecsGemService/GEMEnableLogResponse")]
        long GEMEnableLog(long bEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMEnableLog", ReplyAction="http://tempuri.org/ISecsGemService/GEMEnableLogResponse")]
        System.Threading.Tasks.Task<long> GEMEnableLogAsync(long bEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetLogOption", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetLogOptionResponse")]
        long GEMSetLogOption(string sDriectory, string sPrefix, string sExtension, long nKeepDay, long bMakeDailyLog, long bMakeSubDirectory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetLogOption", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetLogOptionResponse")]
        System.Threading.Tasks.Task<long> GEMSetLogOptionAsync(string sDriectory, string sPrefix, string sExtension, long nKeepDay, long bMakeDailyLog, long bMakeSubDirectory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Init_SECSGEM", ReplyAction="http://tempuri.org/ISecsGemService/Init_SECSGEMResponse")]
        long Init_SECSGEM(string Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Init_SECSGEM", ReplyAction="http://tempuri.org/ISecsGemService/Init_SECSGEMResponse")]
        System.Threading.Tasks.Task<long> Init_SECSGEMAsync(string Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Close_SECSGEM", ReplyAction="http://tempuri.org/ISecsGemService/Close_SECSGEMResponse")]
        long Close_SECSGEM();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Close_SECSGEM", ReplyAction="http://tempuri.org/ISecsGemService/Close_SECSGEMResponse")]
        System.Threading.Tasks.Task<long> Close_SECSGEMAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Start", ReplyAction="http://tempuri.org/ISecsGemService/StartResponse")]
        long Start();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Start", ReplyAction="http://tempuri.org/ISecsGemService/StartResponse")]
        System.Threading.Tasks.Task<long> StartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Stop", ReplyAction="http://tempuri.org/ISecsGemService/StopResponse")]
        long Stop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Stop", ReplyAction="http://tempuri.org/ISecsGemService/StopResponse")]
        System.Threading.Tasks.Task<long> StopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/ServerConnect", ReplyAction="http://tempuri.org/ISecsGemService/ServerConnectResponse")]
        void ServerConnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/ServerConnect", ReplyAction="http://tempuri.org/ISecsGemService/ServerConnectResponse")]
        System.Threading.Tasks.Task ServerConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/MakeObject", ReplyAction="http://tempuri.org/ISecsGemService/MakeObjectResponse")]
        GEMModule.SecsGemService.MakeObjectResponse MakeObject(GEMModule.SecsGemService.MakeObjectRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/MakeObject", ReplyAction="http://tempuri.org/ISecsGemService/MakeObjectResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.MakeObjectResponse> MakeObjectAsync(GEMModule.SecsGemService.MakeObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetListItem", ReplyAction="http://tempuri.org/ISecsGemService/SetListItemResponse")]
        long SetListItem(long nObjectID, long nItemCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetListItem", ReplyAction="http://tempuri.org/ISecsGemService/SetListItemResponse")]
        System.Threading.Tasks.Task<long> SetListItemAsync(long nObjectID, long nItemCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetBinaryItem", ReplyAction="http://tempuri.org/ISecsGemService/SetBinaryItemResponse")]
        long SetBinaryItem(long nObjectID, byte nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetBinaryItem", ReplyAction="http://tempuri.org/ISecsGemService/SetBinaryItemResponse")]
        System.Threading.Tasks.Task<long> SetBinaryItemAsync(long nObjectID, byte nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetBoolItem", ReplyAction="http://tempuri.org/ISecsGemService/SetBoolItemResponse")]
        long SetBoolItem(long nObjectID, bool nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetBoolItem", ReplyAction="http://tempuri.org/ISecsGemService/SetBoolItemResponse")]
        System.Threading.Tasks.Task<long> SetBoolItemAsync(long nObjectID, bool nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetBoolItems", ReplyAction="http://tempuri.org/ISecsGemService/SetBoolItemsResponse")]
        long SetBoolItems(long nObjectID, bool[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetBoolItems", ReplyAction="http://tempuri.org/ISecsGemService/SetBoolItemsResponse")]
        System.Threading.Tasks.Task<long> SetBoolItemsAsync(long nObjectID, bool[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint1Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint1ItemResponse")]
        long SetUint1Item(long nObjectID, byte nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint1Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint1ItemResponse")]
        System.Threading.Tasks.Task<long> SetUint1ItemAsync(long nObjectID, byte nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint1Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint1ItemsResponse")]
        long SetUint1Items(long nObjectID, byte[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint1Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint1ItemsResponse")]
        System.Threading.Tasks.Task<long> SetUint1ItemsAsync(long nObjectID, byte[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint2Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint2ItemResponse")]
        long SetUint2Item(long nObjectID, ushort nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint2Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint2ItemResponse")]
        System.Threading.Tasks.Task<long> SetUint2ItemAsync(long nObjectID, ushort nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint2Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint2ItemsResponse")]
        long SetUint2Items(long nObjectID, ushort[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint2Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint2ItemsResponse")]
        System.Threading.Tasks.Task<long> SetUint2ItemsAsync(long nObjectID, ushort[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint4Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint4ItemResponse")]
        long SetUint4Item(long nObjectID, uint nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint4Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint4ItemResponse")]
        System.Threading.Tasks.Task<long> SetUint4ItemAsync(long nObjectID, uint nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint4Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint4ItemsResponse")]
        long SetUint4Items(long nObjectID, uint[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint4Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint4ItemsResponse")]
        System.Threading.Tasks.Task<long> SetUint4ItemsAsync(long nObjectID, uint[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint8Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint8ItemResponse")]
        long SetUint8Item(long nObjectID, uint nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint8Item", ReplyAction="http://tempuri.org/ISecsGemService/SetUint8ItemResponse")]
        System.Threading.Tasks.Task<long> SetUint8ItemAsync(long nObjectID, uint nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint8Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint8ItemsResponse")]
        long SetUint8Items(long nObjectID, uint[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetUint8Items", ReplyAction="http://tempuri.org/ISecsGemService/SetUint8ItemsResponse")]
        System.Threading.Tasks.Task<long> SetUint8ItemsAsync(long nObjectID, uint[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt1Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt1ItemResponse")]
        long SetInt1Item(long nObjectID, sbyte nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt1Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt1ItemResponse")]
        System.Threading.Tasks.Task<long> SetInt1ItemAsync(long nObjectID, sbyte nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt1Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt1ItemsResponse")]
        long SetInt1Items(long nObjectID, sbyte[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt1Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt1ItemsResponse")]
        System.Threading.Tasks.Task<long> SetInt1ItemsAsync(long nObjectID, sbyte[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt2Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt2ItemResponse")]
        long SetInt2Item(long nObjectID, short nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt2Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt2ItemResponse")]
        System.Threading.Tasks.Task<long> SetInt2ItemAsync(long nObjectID, short nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt2Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt2ItemsResponse")]
        long SetInt2Items(long nObjectID, short[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt2Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt2ItemsResponse")]
        System.Threading.Tasks.Task<long> SetInt2ItemsAsync(long nObjectID, short[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt4Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt4ItemResponse")]
        long SetInt4Item(long nObjectID, int nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt4Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt4ItemResponse")]
        System.Threading.Tasks.Task<long> SetInt4ItemAsync(long nObjectID, int nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt4Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt4ItemsResponse")]
        long SetInt4Items(long nObjectID, int[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt4Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt4ItemsResponse")]
        System.Threading.Tasks.Task<long> SetInt4ItemsAsync(long nObjectID, int[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt8Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt8ItemResponse")]
        long SetInt8Item(long nObjectID, int nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt8Item", ReplyAction="http://tempuri.org/ISecsGemService/SetInt8ItemResponse")]
        System.Threading.Tasks.Task<long> SetInt8ItemAsync(long nObjectID, int nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt8Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt8ItemsResponse")]
        long SetInt8Items(long nObjectID, int[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetInt8Items", ReplyAction="http://tempuri.org/ISecsGemService/SetInt8ItemsResponse")]
        System.Threading.Tasks.Task<long> SetInt8ItemsAsync(long nObjectID, int[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat4Item", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat4ItemResponse")]
        long SetFloat4Item(long nObjectID, float nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat4Item", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat4ItemResponse")]
        System.Threading.Tasks.Task<long> SetFloat4ItemAsync(long nObjectID, float nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat4Items", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat4ItemsResponse")]
        long SetFloat4Items(long nObjectID, float[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat4Items", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat4ItemsResponse")]
        System.Threading.Tasks.Task<long> SetFloat4ItemsAsync(long nObjectID, float[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat8Item", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat8ItemResponse")]
        long SetFloat8Item(long nObjectID, double nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat8Item", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat8ItemResponse")]
        System.Threading.Tasks.Task<long> SetFloat8ItemAsync(long nObjectID, double nValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat8Items", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat8ItemsResponse")]
        long SetFloat8Items(long nObjectID, double[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetFloat8Items", ReplyAction="http://tempuri.org/ISecsGemService/SetFloat8ItemsResponse")]
        System.Threading.Tasks.Task<long> SetFloat8ItemsAsync(long nObjectID, double[] pnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetStringItem", ReplyAction="http://tempuri.org/ISecsGemService/SetStringItemResponse")]
        long SetStringItem(long nObjectID, string pszValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SetStringItem", ReplyAction="http://tempuri.org/ISecsGemService/SetStringItemResponse")]
        System.Threading.Tasks.Task<long> SetStringItemAsync(long nObjectID, string pszValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetListItem", ReplyAction="http://tempuri.org/ISecsGemService/GetListItemResponse")]
        GEMModule.SecsGemService.GetListItemResponse GetListItem(GEMModule.SecsGemService.GetListItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetListItem", ReplyAction="http://tempuri.org/ISecsGemService/GetListItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetListItemResponse> GetListItemAsync(GEMModule.SecsGemService.GetListItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetBinaryItem", ReplyAction="http://tempuri.org/ISecsGemService/GetBinaryItemResponse")]
        GEMModule.SecsGemService.GetBinaryItemResponse GetBinaryItem(GEMModule.SecsGemService.GetBinaryItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetBinaryItem", ReplyAction="http://tempuri.org/ISecsGemService/GetBinaryItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetBinaryItemResponse> GetBinaryItemAsync(GEMModule.SecsGemService.GetBinaryItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetBoolItem", ReplyAction="http://tempuri.org/ISecsGemService/GetBoolItemResponse")]
        GEMModule.SecsGemService.GetBoolItemResponse GetBoolItem(GEMModule.SecsGemService.GetBoolItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetBoolItem", ReplyAction="http://tempuri.org/ISecsGemService/GetBoolItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetBoolItemResponse> GetBoolItemAsync(GEMModule.SecsGemService.GetBoolItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint1Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint1ItemResponse")]
        GEMModule.SecsGemService.GetUint1ItemResponse GetUint1Item(GEMModule.SecsGemService.GetUint1ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint1Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint1ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint1ItemResponse> GetUint1ItemAsync(GEMModule.SecsGemService.GetUint1ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint2Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint2ItemResponse")]
        GEMModule.SecsGemService.GetUint2ItemResponse GetUint2Item(GEMModule.SecsGemService.GetUint2ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint2Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint2ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint2ItemResponse> GetUint2ItemAsync(GEMModule.SecsGemService.GetUint2ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint4Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint4ItemResponse")]
        GEMModule.SecsGemService.GetUint4ItemResponse GetUint4Item(GEMModule.SecsGemService.GetUint4ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint4Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint4ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint4ItemResponse> GetUint4ItemAsync(GEMModule.SecsGemService.GetUint4ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint8Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint8ItemResponse")]
        GEMModule.SecsGemService.GetUint8ItemResponse GetUint8Item(GEMModule.SecsGemService.GetUint8ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetUint8Item", ReplyAction="http://tempuri.org/ISecsGemService/GetUint8ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint8ItemResponse> GetUint8ItemAsync(GEMModule.SecsGemService.GetUint8ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt1Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt1ItemResponse")]
        GEMModule.SecsGemService.GetInt1ItemResponse GetInt1Item(GEMModule.SecsGemService.GetInt1ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt1Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt1ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt1ItemResponse> GetInt1ItemAsync(GEMModule.SecsGemService.GetInt1ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt2Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt2ItemResponse")]
        GEMModule.SecsGemService.GetInt2ItemResponse GetInt2Item(GEMModule.SecsGemService.GetInt2ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt2Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt2ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt2ItemResponse> GetInt2ItemAsync(GEMModule.SecsGemService.GetInt2ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt4Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt4ItemResponse")]
        GEMModule.SecsGemService.GetInt4ItemResponse GetInt4Item(GEMModule.SecsGemService.GetInt4ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt4Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt4ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt4ItemResponse> GetInt4ItemAsync(GEMModule.SecsGemService.GetInt4ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt8Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt8ItemResponse")]
        GEMModule.SecsGemService.GetInt8ItemResponse GetInt8Item(GEMModule.SecsGemService.GetInt8ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetInt8Item", ReplyAction="http://tempuri.org/ISecsGemService/GetInt8ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt8ItemResponse> GetInt8ItemAsync(GEMModule.SecsGemService.GetInt8ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetFloat4Item", ReplyAction="http://tempuri.org/ISecsGemService/GetFloat4ItemResponse")]
        GEMModule.SecsGemService.GetFloat4ItemResponse GetFloat4Item(GEMModule.SecsGemService.GetFloat4ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetFloat4Item", ReplyAction="http://tempuri.org/ISecsGemService/GetFloat4ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetFloat4ItemResponse> GetFloat4ItemAsync(GEMModule.SecsGemService.GetFloat4ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetFloat8Item", ReplyAction="http://tempuri.org/ISecsGemService/GetFloat8ItemResponse")]
        GEMModule.SecsGemService.GetFloat8ItemResponse GetFloat8Item(GEMModule.SecsGemService.GetFloat8ItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetFloat8Item", ReplyAction="http://tempuri.org/ISecsGemService/GetFloat8ItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetFloat8ItemResponse> GetFloat8ItemAsync(GEMModule.SecsGemService.GetFloat8ItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetStringItem", ReplyAction="http://tempuri.org/ISecsGemService/GetStringItemResponse")]
        GEMModule.SecsGemService.GetStringItemResponse GetStringItem(GEMModule.SecsGemService.GetStringItemRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GetStringItem", ReplyAction="http://tempuri.org/ISecsGemService/GetStringItemResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GetStringItemResponse> GetStringItemAsync(GEMModule.SecsGemService.GetStringItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/CloseObject", ReplyAction="http://tempuri.org/ISecsGemService/CloseObjectResponse")]
        long CloseObject(long nObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/CloseObject", ReplyAction="http://tempuri.org/ISecsGemService/CloseObjectResponse")]
        System.Threading.Tasks.Task<long> CloseObjectAsync(long nObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SendSECSMessage", ReplyAction="http://tempuri.org/ISecsGemService/SendSECSMessageResponse")]
        long SendSECSMessage(long nObjectID, long nStream, long nFunction, long nSysbyte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/SendSECSMessage", ReplyAction="http://tempuri.org/ISecsGemService/SendSECSMessageResponse")]
        System.Threading.Tasks.Task<long> SendSECSMessageAsync(long nObjectID, long nStream, long nFunction, long nSysbyte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqOffline", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqOfflineResponse")]
        long GEMReqOffline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqOffline", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqOfflineResponse")]
        System.Threading.Tasks.Task<long> GEMReqOfflineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqLocal", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqLocalResponse")]
        long GEMReqLocal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqLocal", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqLocalResponse")]
        System.Threading.Tasks.Task<long> GEMReqLocalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqRemote", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqRemoteResponse")]
        long GEMReqRemote();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqRemote", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqRemoteResponse")]
        System.Threading.Tasks.Task<long> GEMReqRemoteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetEstablish", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetEstablishResponse")]
        long GEMSetEstablish(long bState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetEstablish", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetEstablishResponse")]
        System.Threading.Tasks.Task<long> GEMSetEstablishAsync(long bState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetParam", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetParamResponse")]
        long GEMSetParam(string sParamName, string sParamValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetParam", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetParamResponse")]
        System.Threading.Tasks.Task<long> GEMSetParamAsync(string sParamName, string sParamValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetParam", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetParamResponse")]
        GEMModule.SecsGemService.GEMGetParamResponse GEMGetParam(GEMModule.SecsGemService.GEMGetParamRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMGetParam", ReplyAction="http://tempuri.org/ISecsGemService/GEMGetParamResponse")]
        System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetParamResponse> GEMGetParamAsync(GEMModule.SecsGemService.GEMGetParamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMEQInitialized", ReplyAction="http://tempuri.org/ISecsGemService/GEMEQInitializedResponse")]
        long GEMEQInitialized(long nInitType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMEQInitialized", ReplyAction="http://tempuri.org/ISecsGemService/GEMEQInitializedResponse")]
        System.Threading.Tasks.Task<long> GEMEQInitializedAsync(long nInitType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqGetDateTime", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqGetDateTimeResponse")]
        long GEMReqGetDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqGetDateTime", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqGetDateTimeResponse")]
        System.Threading.Tasks.Task<long> GEMReqGetDateTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspGetDateTime", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspGetDateTimeResponse")]
        long GEMRspGetDateTime(long nMsgId, string sSystemTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspGetDateTime", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspGetDateTimeResponse")]
        System.Threading.Tasks.Task<long> GEMRspGetDateTimeAsync(long nMsgId, string sSystemTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspDateTime", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspDateTimeResponse")]
        long GEMRspDateTime(long nMsgId, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspDateTime", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspDateTimeResponse")]
        System.Threading.Tasks.Task<long> GEMRspDateTimeAsync(long nMsgId, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetAlarm", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetAlarmResponse")]
        long GEMSetAlarm(long nID, long nState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetAlarm", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetAlarmResponse")]
        System.Threading.Tasks.Task<long> GEMSetAlarmAsync(long nID, long nState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspRemoteCommand", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspRemoteCommandResponse")]
        long GEMRspRemoteCommand(long nMsgId, string sCmd, long nHCAck, long nCount, long[] pnResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspRemoteCommand", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspRemoteCommandResponse")]
        System.Threading.Tasks.Task<long> GEMRspRemoteCommandAsync(long nMsgId, string sCmd, long nHCAck, long nCount, long[] pnResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspRemoteCommand2", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspRemoteCommand2Response")]
        long GEMRspRemoteCommand2(long nMsgId, string sCmd, long nHCAck, long nCount, string[] psCpName, long[] pnCpAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspRemoteCommand2", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspRemoteCommand2Response")]
        System.Threading.Tasks.Task<long> GEMRspRemoteCommand2Async(long nMsgId, string sCmd, long nHCAck, long nCount, string[] psCpName, long[] pnCpAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspChangeECV", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspChangeECVResponse")]
        long GEMRspChangeECV(long nMsgId, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMRspChangeECV", ReplyAction="http://tempuri.org/ISecsGemService/GEMRspChangeECVResponse")]
        System.Threading.Tasks.Task<long> GEMRspChangeECVAsync(long nMsgId, long nResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetECVChanged", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetECVChangedResponse")]
        long GEMSetECVChanged(long nCount, long[] pnEcIds, string[] psEcVals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetECVChanged", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetECVChangedResponse")]
        System.Threading.Tasks.Task<long> GEMSetECVChangedAsync(long nCount, long[] pnEcIds, string[] psEcVals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqAllECInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqAllECInfoResponse")]
        long GEMReqAllECInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMReqAllECInfo", ReplyAction="http://tempuri.org/ISecsGemService/GEMReqAllECInfoResponse")]
        System.Threading.Tasks.Task<long> GEMReqAllECInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetPPChanged", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetPPChangedResponse")]
        long GEMSetPPChanged(long nMode, string sPpid, long nLength, string pbBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/GEMSetPPChanged", ReplyAction="http://tempuri.org/ISecsGemService/GEMSetPPChangedResponse")]
        System.Threading.Tasks.Task<long> GEMSetPPChangedAsync(long nMode, string sPpid, long nLength, string pbBody);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecsGemServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/CallBack_ConnectSuccess", ReplyAction="http://tempuri.org/ISecsGemService/CallBack_ConnectSuccessResponse")]
        bool CallBack_ConnectSuccess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecsGemService/Are_You_There", ReplyAction="http://tempuri.org/ISecsGemService/Are_You_ThereResponse")]
        bool Are_You_There();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/CallBack_Close")]
        void CallBack_Close();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnSECSMessageReceive")]
        void OnSECSMessageReceive(long nObjectID, long nStream, long nFunction, long nSysbyte);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnCarrierActMsgRecive")]
        void OnCarrierActMsgRecive(GEMModule.SecsGemService.CarrierActReqData msgData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMControlStateChange")]
        void OnGEMControlStateChange(GEMModule.SecsGemService.SecsControlStateEnum ControlState);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMStateEvent")]
        void OnGEMStateEvent(GEMModule.SecsGemService.SecsGemStateEnum GemState);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMCommStateChange")]
        void OnGEMCommStateChange(GEMModule.SecsGemService.SecsCommStateEnum CommState);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMRspGetDateTime")]
        void OnGEMRspGetDateTime(string sSystemTime);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMTerminalMultiMessage")]
        void OnGEMTerminalMultiMessage(long nTid, long nCount, string[] psMsg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMTerminalMessage")]
        void OnGEMTerminalMessage(long nTid, string sMsg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqDateTime")]
        void OnGEMReqDateTime(long nMsgId, string sSystemTime);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqRemoteCommand")]
        void OnGEMReqRemoteCommand(long nMsgId, GEMModule.SecsGemService.EnumRemoteCommand Rcmd, long nCount, string[] psNames, string[] psVals);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqPPList")]
        void OnGEMReqPPList(long nMsgId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMECVChanged")]
        void OnGEMECVChanged(long nCount, long[] pnEcids, string[] psVals);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqChangeECV")]
        void OnGEMReqChangeECV(long nMsgId, long nCount, long[] pnEcids, string[] psVals);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMErrorEvent")]
        void OnGEMErrorEvent(string sErrorName, long nErrorCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqPPDelete")]
        void OnGEMReqPPDelete(long nMsgId, long nCount, string[] psPpid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMRspAllECInfo")]
        void OnGEMRspAllECInfo(long lCount, long[] plVid, string[] psName, string[] psValue, string[] psDefault, string[] psMin, string[] psMax, string[] psUnit);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqPPSendEx")]
        void OnGEMReqPPSendEx(long nMsgId, string sPpid, string sRecipePath);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecsGemService/OnGEMReqPPEx")]
        void OnGEMReqPPEx(long nMsgId, string sPpid, string sRecipePath);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetVariable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetVariableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnVid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psValue;
        
        public GEMGetVariableRequest() {
        }
        
        public GEMGetVariableRequest(long nCount, long[] pnVid, string[] psValue) {
            this.nCount = nCount;
            this.pnVid = pnVid;
            this.psValue = psValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetVariableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetVariableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetVariableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnVid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psValue;
        
        public GEMGetVariableResponse() {
        }
        
        public GEMGetVariableResponse(long GEMGetVariableResult, long[] pnVid, string[] psValue) {
            this.GEMGetVariableResult = GEMGetVariableResult;
            this.pnVid = pnVid;
            this.psValue = psValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetSpecificMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetSpecificMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nSObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long pnRObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sMsgName;
        
        public GEMGetSpecificMessageRequest() {
        }
        
        public GEMGetSpecificMessageRequest(long nSObjectID, long pnRObjectID, string sMsgName) {
            this.nSObjectID = nSObjectID;
            this.pnRObjectID = pnRObjectID;
            this.sMsgName = sMsgName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetSpecificMessageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetSpecificMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetSpecificMessageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long pnRObjectID;
        
        public GEMGetSpecificMessageResponse() {
        }
        
        public GEMGetSpecificMessageResponse(long GEMGetSpecificMessageResult, long pnRObjectID) {
            this.GEMGetSpecificMessageResult = GEMGetSpecificMessageResult;
            this.pnRObjectID = pnRObjectID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllStringItem", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllStringItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string psValue;
        
        public GetAllStringItemRequest() {
        }
        
        public GetAllStringItemRequest(long nObjectID, string psValue) {
            this.nObjectID = nObjectID;
            this.psValue = psValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllStringItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllStringItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetAllStringItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string psValue;
        
        public GetAllStringItemResponse() {
        }
        
        public GetAllStringItemResponse(long GetAllStringItemResult, string psValue) {
            this.GetAllStringItemResult = GetAllStringItemResult;
            this.psValue = psValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetEventEnable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetEventEnableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnCEIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] pnEnable;
        
        public GEMGetEventEnableRequest() {
        }
        
        public GEMGetEventEnableRequest(long nCount, long[] pnCEIDs, long[] pnEnable) {
            this.nCount = nCount;
            this.pnCEIDs = pnCEIDs;
            this.pnEnable = pnEnable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetEventEnableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetEventEnableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetEventEnableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnEnable;
        
        public GEMGetEventEnableResponse() {
        }
        
        public GEMGetEventEnableResponse(long GEMGetEventEnableResult, long[] pnEnable) {
            this.GEMGetEventEnableResult = GEMGetEventEnableResult;
            this.pnEnable = pnEnable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetAlarmEnable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetAlarmEnableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnALIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] pnEnable;
        
        public GEMGetAlarmEnableRequest() {
        }
        
        public GEMGetAlarmEnableRequest(long nCount, long[] pnALIDs, long[] pnEnable) {
            this.nCount = nCount;
            this.pnALIDs = pnALIDs;
            this.pnEnable = pnEnable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetAlarmEnableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetAlarmEnableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetAlarmEnableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnEnable;
        
        public GEMGetAlarmEnableResponse() {
        }
        
        public GEMGetAlarmEnableResponse(long GEMGetAlarmEnableResult, long[] pnEnable) {
            this.GEMGetAlarmEnableResult = GEMGetAlarmEnableResult;
            this.pnEnable = pnEnable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetAlarmInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetAlarmInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnALIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] pnALCDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] psALTXs;
        
        public GEMGetAlarmInfoRequest() {
        }
        
        public GEMGetAlarmInfoRequest(long nCount, long[] pnALIDs, long[] pnALCDs, string[] psALTXs) {
            this.nCount = nCount;
            this.pnALIDs = pnALIDs;
            this.pnALCDs = pnALCDs;
            this.psALTXs = psALTXs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetAlarmInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetAlarmInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetAlarmInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnALCDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psALTXs;
        
        public GEMGetAlarmInfoResponse() {
        }
        
        public GEMGetAlarmInfoResponse(long GEMGetAlarmInfoResult, long[] pnALCDs, string[] psALTXs) {
            this.GEMGetAlarmInfoResult = GEMGetAlarmInfoResult;
            this.pnALCDs = pnALCDs;
            this.psALTXs = psALTXs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetSVInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetSVInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnSVIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psMins;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] psMaxs;
        
        public GEMGetSVInfoRequest() {
        }
        
        public GEMGetSVInfoRequest(long nCount, long[] pnSVIDs, string[] psMins, string[] psMaxs) {
            this.nCount = nCount;
            this.pnSVIDs = pnSVIDs;
            this.psMins = psMins;
            this.psMaxs = psMaxs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetSVInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetSVInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetSVInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] psMins;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psMaxs;
        
        public GEMGetSVInfoResponse() {
        }
        
        public GEMGetSVInfoResponse(long GEMGetSVInfoResult, string[] psMins, string[] psMaxs) {
            this.GEMGetSVInfoResult = GEMGetSVInfoResult;
            this.psMins = psMins;
            this.psMaxs = psMaxs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetECVInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetECVInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] pnECIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psNames;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] psDefs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string[] psMins;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string[] psMaxs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string[] psUnits;
        
        public GEMGetECVInfoRequest() {
        }
        
        public GEMGetECVInfoRequest(long nCount, long[] pnECIDs, string[] psNames, string[] psDefs, string[] psMins, string[] psMaxs, string[] psUnits) {
            this.nCount = nCount;
            this.pnECIDs = pnECIDs;
            this.psNames = psNames;
            this.psDefs = psDefs;
            this.psMins = psMins;
            this.psMaxs = psMaxs;
            this.psUnits = psUnits;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetECVInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetECVInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetECVInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] psNames;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] psDefs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] psMins;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string[] psMaxs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string[] psUnits;
        
        public GEMGetECVInfoResponse() {
        }
        
        public GEMGetECVInfoResponse(long GEMGetECVInfoResult, string[] psNames, string[] psDefs, string[] psMins, string[] psMaxs, string[] psUnits) {
            this.GEMGetECVInfoResult = GEMGetECVInfoResult;
            this.psNames = psNames;
            this.psDefs = psDefs;
            this.psMins = psMins;
            this.psMaxs = psMaxs;
            this.psUnits = psUnits;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MakeObject", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MakeObjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long pnObjectID;
        
        public MakeObjectRequest() {
        }
        
        public MakeObjectRequest(long pnObjectID) {
            this.pnObjectID = pnObjectID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MakeObjectResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MakeObjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long MakeObjectResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long pnObjectID;
        
        public MakeObjectResponse() {
        }
        
        public MakeObjectResponse(long MakeObjectResult, long pnObjectID) {
            this.MakeObjectResult = MakeObjectResult;
            this.pnObjectID = pnObjectID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListItem", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetListItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long pnItemCount;
        
        public GetListItemRequest() {
        }
        
        public GetListItemRequest(long nObjectID, long pnItemCount) {
            this.nObjectID = nObjectID;
            this.pnItemCount = pnItemCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetListItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetListItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long pnItemCount;
        
        public GetListItemResponse() {
        }
        
        public GetListItemResponse(long GetListItemResult, long pnItemCount) {
            this.GetListItemResult = GetListItemResult;
            this.pnItemCount = pnItemCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBinaryItem", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBinaryItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] pnValue;
        
        public GetBinaryItemRequest() {
        }
        
        public GetBinaryItemRequest(long nObjectID, byte[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBinaryItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBinaryItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetBinaryItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] pnValue;
        
        public GetBinaryItemResponse() {
        }
        
        public GetBinaryItemResponse(long GetBinaryItemResult, byte[] pnValue) {
            this.GetBinaryItemResult = GetBinaryItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBoolItem", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBoolItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool[] pnValue;
        
        public GetBoolItemRequest() {
        }
        
        public GetBoolItemRequest(long nObjectID, bool[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBoolItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBoolItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetBoolItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool[] pnValue;
        
        public GetBoolItemResponse() {
        }
        
        public GetBoolItemResponse(long GetBoolItemResult, bool[] pnValue) {
            this.GetBoolItemResult = GetBoolItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint1Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint1ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] pnValue;
        
        public GetUint1ItemRequest() {
        }
        
        public GetUint1ItemRequest(long nObjectID, byte[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint1ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint1ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetUint1ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] pnValue;
        
        public GetUint1ItemResponse() {
        }
        
        public GetUint1ItemResponse(long GetUint1ItemResult, byte[] pnValue) {
            this.GetUint1ItemResult = GetUint1ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint2Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint2ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ushort[] pnValue;
        
        public GetUint2ItemRequest() {
        }
        
        public GetUint2ItemRequest(long nObjectID, ushort[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint2ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint2ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetUint2ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ushort[] pnValue;
        
        public GetUint2ItemResponse() {
        }
        
        public GetUint2ItemResponse(long GetUint2ItemResult, ushort[] pnValue) {
            this.GetUint2ItemResult = GetUint2ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint4Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint4ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public uint[] pnValue;
        
        public GetUint4ItemRequest() {
        }
        
        public GetUint4ItemRequest(long nObjectID, uint[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint4ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint4ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetUint4ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public uint[] pnValue;
        
        public GetUint4ItemResponse() {
        }
        
        public GetUint4ItemResponse(long GetUint4ItemResult, uint[] pnValue) {
            this.GetUint4ItemResult = GetUint4ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint8Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint8ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public uint[] pnValue;
        
        public GetUint8ItemRequest() {
        }
        
        public GetUint8ItemRequest(long nObjectID, uint[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUint8ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUint8ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetUint8ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public uint[] pnValue;
        
        public GetUint8ItemResponse() {
        }
        
        public GetUint8ItemResponse(long GetUint8ItemResult, uint[] pnValue) {
            this.GetUint8ItemResult = GetUint8ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt1Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt1ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public sbyte[] pnValue;
        
        public GetInt1ItemRequest() {
        }
        
        public GetInt1ItemRequest(long nObjectID, sbyte[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt1ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt1ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetInt1ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public sbyte[] pnValue;
        
        public GetInt1ItemResponse() {
        }
        
        public GetInt1ItemResponse(long GetInt1ItemResult, sbyte[] pnValue) {
            this.GetInt1ItemResult = GetInt1ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt2Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt2ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public short[] pnValue;
        
        public GetInt2ItemRequest() {
        }
        
        public GetInt2ItemRequest(long nObjectID, short[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt2ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt2ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetInt2ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public short[] pnValue;
        
        public GetInt2ItemResponse() {
        }
        
        public GetInt2ItemResponse(long GetInt2ItemResult, short[] pnValue) {
            this.GetInt2ItemResult = GetInt2ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt4Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt4ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int[] pnValue;
        
        public GetInt4ItemRequest() {
        }
        
        public GetInt4ItemRequest(long nObjectID, int[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt4ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt4ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetInt4ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int[] pnValue;
        
        public GetInt4ItemResponse() {
        }
        
        public GetInt4ItemResponse(long GetInt4ItemResult, int[] pnValue) {
            this.GetInt4ItemResult = GetInt4ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt8Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt8ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int[] pnValue;
        
        public GetInt8ItemRequest() {
        }
        
        public GetInt8ItemRequest(long nObjectID, int[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInt8ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInt8ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetInt8ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int[] pnValue;
        
        public GetInt8ItemResponse() {
        }
        
        public GetInt8ItemResponse(long GetInt8ItemResult, int[] pnValue) {
            this.GetInt8ItemResult = GetInt8ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFloat4Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFloat4ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public float[] pnValue;
        
        public GetFloat4ItemRequest() {
        }
        
        public GetFloat4ItemRequest(long nObjectID, float[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFloat4ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFloat4ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetFloat4ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public float[] pnValue;
        
        public GetFloat4ItemResponse() {
        }
        
        public GetFloat4ItemResponse(long GetFloat4ItemResult, float[] pnValue) {
            this.GetFloat4ItemResult = GetFloat4ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFloat8Item", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFloat8ItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double[] pnValue;
        
        public GetFloat8ItemRequest() {
        }
        
        public GetFloat8ItemRequest(long nObjectID, double[] pnValue) {
            this.nObjectID = nObjectID;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFloat8ItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFloat8ItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetFloat8ItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double[] pnValue;
        
        public GetFloat8ItemResponse() {
        }
        
        public GetFloat8ItemResponse(long GetFloat8ItemResult, double[] pnValue) {
            this.GetFloat8ItemResult = GetFloat8ItemResult;
            this.pnValue = pnValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStringItem", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStringItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long nObjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string psValue;
        
        public GetStringItemRequest() {
        }
        
        public GetStringItemRequest(long nObjectID, string psValue) {
            this.nObjectID = nObjectID;
            this.psValue = psValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStringItemResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStringItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GetStringItemResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string psValue;
        
        public GetStringItemResponse() {
        }
        
        public GetStringItemResponse(long GetStringItemResult, string psValue) {
            this.GetStringItemResult = GetStringItemResult;
            this.psValue = psValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetParam", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetParamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sParamName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string psParamValue;
        
        public GEMGetParamRequest() {
        }
        
        public GEMGetParamRequest(string sParamName, string psParamValue) {
            this.sParamName = sParamName;
            this.psParamValue = psParamValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GEMGetParamResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GEMGetParamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long GEMGetParamResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string psParamValue;
        
        public GEMGetParamResponse() {
        }
        
        public GEMGetParamResponse(long GEMGetParamResult, string psParamValue) {
            this.GEMGetParamResult = GEMGetParamResult;
            this.psParamValue = psParamValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecsGemServiceChannel : GEMModule.SecsGemService.ISecsGemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecsGemServiceClient : System.ServiceModel.DuplexClientBase<GEMModule.SecsGemService.ISecsGemService>, GEMModule.SecsGemService.ISecsGemService {
        
        public SecsGemServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SecsGemServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SecsGemServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SecsGemServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SecsGemServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public long GEMSetPPFmtChanged(long nMode, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames) {
            return base.Channel.GEMSetPPFmtChanged(nMode, sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetPPFmtChangedAsync(long nMode, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames) {
            return base.Channel.GEMSetPPFmtChangedAsync(nMode, sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames);
        }
        
        public long GEMReqPPLoadInquire(string sPpid, long nLength) {
            return base.Channel.GEMReqPPLoadInquire(sPpid, nLength);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPLoadInquireAsync(string sPpid, long nLength) {
            return base.Channel.GEMReqPPLoadInquireAsync(sPpid, nLength);
        }
        
        public long GEMRspPPLoadInquire(long nMsgId, string sPpid, long nResult) {
            return base.Channel.GEMRspPPLoadInquire(nMsgId, sPpid, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPLoadInquireAsync(long nMsgId, string sPpid, long nResult) {
            return base.Channel.GEMRspPPLoadInquireAsync(nMsgId, sPpid, nResult);
        }
        
        public long GEMReqPPSend(string sPpid, string pbBody) {
            return base.Channel.GEMReqPPSend(sPpid, pbBody);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPSendAsync(string sPpid, string pbBody) {
            return base.Channel.GEMReqPPSendAsync(sPpid, pbBody);
        }
        
        public long GEMRspPPSend(long nMsgId, string sPpid, long nResult) {
            return base.Channel.GEMRspPPSend(nMsgId, sPpid, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPSendAsync(long nMsgId, string sPpid, long nResult) {
            return base.Channel.GEMRspPPSendAsync(nMsgId, sPpid, nResult);
        }
        
        public long GEMReqPP(string sPpid) {
            return base.Channel.GEMReqPP(sPpid);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPAsync(string sPpid) {
            return base.Channel.GEMReqPPAsync(sPpid);
        }
        
        public long GEMRspPP(long nMsgId, string sPpid, string pbBody) {
            return base.Channel.GEMRspPP(nMsgId, sPpid, pbBody);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPAsync(long nMsgId, string sPpid, string pbBody) {
            return base.Channel.GEMRspPPAsync(nMsgId, sPpid, pbBody);
        }
        
        public long GEMRspPPDelete(long nMsgId, long nCount, string[] psPpids, long nResult) {
            return base.Channel.GEMRspPPDelete(nMsgId, nCount, psPpids, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPDeleteAsync(long nMsgId, long nCount, string[] psPpids, long nResult) {
            return base.Channel.GEMRspPPDeleteAsync(nMsgId, nCount, psPpids, nResult);
        }
        
        public long GEMRspPPList(long nMsgId, long nCount, string[] psPpids) {
            return base.Channel.GEMRspPPList(nMsgId, nCount, psPpids);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPListAsync(long nMsgId, long nCount, string[] psPpids) {
            return base.Channel.GEMRspPPListAsync(nMsgId, nCount, psPpids);
        }
        
        public long GEMReqPPFmtSend(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames) {
            return base.Channel.GEMReqPPFmtSend(sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPFmtSendAsync(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames) {
            return base.Channel.GEMReqPPFmtSendAsync(sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames);
        }
        
        public long GEMReqPPFmtSend2(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues) {
            return base.Channel.GEMReqPPFmtSend2(sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames, psParamValues);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPFmtSend2Async(string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues) {
            return base.Channel.GEMReqPPFmtSend2Async(sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames, psParamValues);
        }
        
        public long GEMRspPPFmtSend(long nMsgId, string sPpid, long nResult) {
            return base.Channel.GEMRspPPFmtSend(nMsgId, sPpid, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPFmtSendAsync(long nMsgId, string sPpid, long nResult) {
            return base.Channel.GEMRspPPFmtSendAsync(nMsgId, sPpid, nResult);
        }
        
        public long GEMReqPPFmt(string sPpid) {
            return base.Channel.GEMReqPPFmt(sPpid);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPFmtAsync(string sPpid) {
            return base.Channel.GEMReqPPFmtAsync(sPpid);
        }
        
        public long GEMRspPPFmt(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames) {
            return base.Channel.GEMRspPPFmt(nMsgId, sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPFmtAsync(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames) {
            return base.Channel.GEMRspPPFmtAsync(nMsgId, sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames);
        }
        
        public long GEMRspPPFmt2(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues) {
            return base.Channel.GEMRspPPFmt2(nMsgId, sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames, psParamValues);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPFmt2Async(long nMsgId, string sPpid, string sMdln, string sSoftRev, long nCount, string[] psCCode, long[] pnParamCount, string[] psParamNames, string[] psParamValues) {
            return base.Channel.GEMRspPPFmt2Async(nMsgId, sPpid, sMdln, sSoftRev, nCount, psCCode, pnParamCount, psParamNames, psParamValues);
        }
        
        public long GEMReqPPFmtVerification(string sPpid, long nCount, long[] pnAck, string[] psSeqNumber, string[] psError) {
            return base.Channel.GEMReqPPFmtVerification(sPpid, nCount, pnAck, psSeqNumber, psError);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPFmtVerificationAsync(string sPpid, long nCount, long[] pnAck, string[] psSeqNumber, string[] psError) {
            return base.Channel.GEMReqPPFmtVerificationAsync(sPpid, nCount, pnAck, psSeqNumber, psError);
        }
        
        public long GEMSetTerminalMessage(long nTid, string sMsg) {
            return base.Channel.GEMSetTerminalMessage(nTid, sMsg);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetTerminalMessageAsync(long nTid, string sMsg) {
            return base.Channel.GEMSetTerminalMessageAsync(nTid, sMsg);
        }
        
        public long GEMSetVariable(long nCount, long[] pnVid, string[] psValue) {
            return base.Channel.GEMSetVariable(nCount, pnVid, psValue);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetVariableAsync(long nCount, long[] pnVid, string[] psValue) {
            return base.Channel.GEMSetVariableAsync(nCount, pnVid, psValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetVariableResponse GEMModule.SecsGemService.ISecsGemService.GEMGetVariable(GEMModule.SecsGemService.GEMGetVariableRequest request) {
            return base.Channel.GEMGetVariable(request);
        }
        
        public long GEMGetVariable(long nCount, ref long[] pnVid, ref string[] psValue) {
            GEMModule.SecsGemService.GEMGetVariableRequest inValue = new GEMModule.SecsGemService.GEMGetVariableRequest();
            inValue.nCount = nCount;
            inValue.pnVid = pnVid;
            inValue.psValue = psValue;
            GEMModule.SecsGemService.GEMGetVariableResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetVariable(inValue);
            pnVid = retVal.pnVid;
            psValue = retVal.psValue;
            return retVal.GEMGetVariableResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetVariableResponse> GEMGetVariableAsync(GEMModule.SecsGemService.GEMGetVariableRequest request) {
            return base.Channel.GEMGetVariableAsync(request);
        }
        
        public long GEMSetVariables(long nObjectID, long nVid) {
            return base.Channel.GEMSetVariables(nObjectID, nVid);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetVariablesAsync(long nObjectID, long nVid) {
            return base.Channel.GEMSetVariablesAsync(nObjectID, nVid);
        }
        
        public long GEMSetVarName(long nCount, string[] psVidName, string[] psValue) {
            return base.Channel.GEMSetVarName(nCount, psVidName, psValue);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetVarNameAsync(long nCount, string[] psVidName, string[] psValue) {
            return base.Channel.GEMSetVarNameAsync(nCount, psVidName, psValue);
        }
        
        public long GEMGetVarName(long nCount, string[] psVidName, string[] psValue) {
            return base.Channel.GEMGetVarName(nCount, psVidName, psValue);
        }
        
        public System.Threading.Tasks.Task<long> GEMGetVarNameAsync(long nCount, string[] psVidName, string[] psValue) {
            return base.Channel.GEMGetVarNameAsync(nCount, psVidName, psValue);
        }
        
        public long GEMSetEvent(long nEventID) {
            return base.Channel.GEMSetEvent(nEventID);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetEventAsync(long nEventID) {
            return base.Channel.GEMSetEventAsync(nEventID);
        }
        
        public long GEMSetSpecificMessage(long nObjectID, string sMsgName) {
            return base.Channel.GEMSetSpecificMessage(nObjectID, sMsgName);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetSpecificMessageAsync(long nObjectID, string sMsgName) {
            return base.Channel.GEMSetSpecificMessageAsync(nObjectID, sMsgName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetSpecificMessageResponse GEMModule.SecsGemService.ISecsGemService.GEMGetSpecificMessage(GEMModule.SecsGemService.GEMGetSpecificMessageRequest request) {
            return base.Channel.GEMGetSpecificMessage(request);
        }
        
        public long GEMGetSpecificMessage(long nSObjectID, ref long pnRObjectID, string sMsgName) {
            GEMModule.SecsGemService.GEMGetSpecificMessageRequest inValue = new GEMModule.SecsGemService.GEMGetSpecificMessageRequest();
            inValue.nSObjectID = nSObjectID;
            inValue.pnRObjectID = pnRObjectID;
            inValue.sMsgName = sMsgName;
            GEMModule.SecsGemService.GEMGetSpecificMessageResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetSpecificMessage(inValue);
            pnRObjectID = retVal.pnRObjectID;
            return retVal.GEMGetSpecificMessageResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetSpecificMessageResponse> GEMGetSpecificMessageAsync(GEMModule.SecsGemService.GEMGetSpecificMessageRequest request) {
            return base.Channel.GEMGetSpecificMessageAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetAllStringItemResponse GEMModule.SecsGemService.ISecsGemService.GetAllStringItem(GEMModule.SecsGemService.GetAllStringItemRequest request) {
            return base.Channel.GetAllStringItem(request);
        }
        
        public long GetAllStringItem(long nObjectID, ref string psValue) {
            GEMModule.SecsGemService.GetAllStringItemRequest inValue = new GEMModule.SecsGemService.GetAllStringItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.psValue = psValue;
            GEMModule.SecsGemService.GetAllStringItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetAllStringItem(inValue);
            psValue = retVal.psValue;
            return retVal.GetAllStringItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetAllStringItemResponse> GetAllStringItemAsync(GEMModule.SecsGemService.GetAllStringItemRequest request) {
            return base.Channel.GetAllStringItemAsync(request);
        }
        
        public long SetAllStringItem(long nObjectID, string sValue) {
            return base.Channel.SetAllStringItem(nObjectID, sValue);
        }
        
        public System.Threading.Tasks.Task<long> SetAllStringItemAsync(long nObjectID, string sValue) {
            return base.Channel.SetAllStringItemAsync(nObjectID, sValue);
        }
        
        public long GEMReqPPSendEx(string sPpid, string sRecipePath) {
            return base.Channel.GEMReqPPSendEx(sPpid, sRecipePath);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPSendExAsync(string sPpid, string sRecipePath) {
            return base.Channel.GEMReqPPSendExAsync(sPpid, sRecipePath);
        }
        
        public long GEMRspPPSendEx(long nMsgId, string sPpid, string sRecipePath, long nResult) {
            return base.Channel.GEMRspPPSendEx(nMsgId, sPpid, sRecipePath, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPSendExAsync(long nMsgId, string sPpid, string sRecipePath, long nResult) {
            return base.Channel.GEMRspPPSendExAsync(nMsgId, sPpid, sRecipePath, nResult);
        }
        
        public long GEMReqPPEx(string sPpid, string sRecipePath) {
            return base.Channel.GEMReqPPEx(sPpid, sRecipePath);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqPPExAsync(string sPpid, string sRecipePath) {
            return base.Channel.GEMReqPPExAsync(sPpid, sRecipePath);
        }
        
        public long GEMRspPPEx(long nMsgId, string sPpid, string sRecipePath) {
            return base.Channel.GEMRspPPEx(nMsgId, sPpid, sRecipePath);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspPPExAsync(long nMsgId, string sPpid, string sRecipePath) {
            return base.Channel.GEMRspPPExAsync(nMsgId, sPpid, sRecipePath);
        }
        
        public long GEMSetVariableEx(long nObjectID, long nVid) {
            return base.Channel.GEMSetVariableEx(nObjectID, nVid);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetVariableExAsync(long nObjectID, long nVid) {
            return base.Channel.GEMSetVariableExAsync(nObjectID, nVid);
        }
        
        public long GEMReqLoopback(long nCount, long[] pnAbs) {
            return base.Channel.GEMReqLoopback(nCount, pnAbs);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqLoopbackAsync(long nCount, long[] pnAbs) {
            return base.Channel.GEMReqLoopbackAsync(nCount, pnAbs);
        }
        
        public long GEMSetEventEnable(long nCount, long[] pnCEIDs, long nEnable) {
            return base.Channel.GEMSetEventEnable(nCount, pnCEIDs, nEnable);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetEventEnableAsync(long nCount, long[] pnCEIDs, long nEnable) {
            return base.Channel.GEMSetEventEnableAsync(nCount, pnCEIDs, nEnable);
        }
        
        public long GEMSetAlarmEnable(long nCount, long[] pnALIDs, long nEnable) {
            return base.Channel.GEMSetAlarmEnable(nCount, pnALIDs, nEnable);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetAlarmEnableAsync(long nCount, long[] pnALIDs, long nEnable) {
            return base.Channel.GEMSetAlarmEnableAsync(nCount, pnALIDs, nEnable);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetEventEnableResponse GEMModule.SecsGemService.ISecsGemService.GEMGetEventEnable(GEMModule.SecsGemService.GEMGetEventEnableRequest request) {
            return base.Channel.GEMGetEventEnable(request);
        }
        
        public long GEMGetEventEnable(long nCount, long[] pnCEIDs, ref long[] pnEnable) {
            GEMModule.SecsGemService.GEMGetEventEnableRequest inValue = new GEMModule.SecsGemService.GEMGetEventEnableRequest();
            inValue.nCount = nCount;
            inValue.pnCEIDs = pnCEIDs;
            inValue.pnEnable = pnEnable;
            GEMModule.SecsGemService.GEMGetEventEnableResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetEventEnable(inValue);
            pnEnable = retVal.pnEnable;
            return retVal.GEMGetEventEnableResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetEventEnableResponse> GEMGetEventEnableAsync(GEMModule.SecsGemService.GEMGetEventEnableRequest request) {
            return base.Channel.GEMGetEventEnableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetAlarmEnableResponse GEMModule.SecsGemService.ISecsGemService.GEMGetAlarmEnable(GEMModule.SecsGemService.GEMGetAlarmEnableRequest request) {
            return base.Channel.GEMGetAlarmEnable(request);
        }
        
        public long GEMGetAlarmEnable(long nCount, long[] pnALIDs, ref long[] pnEnable) {
            GEMModule.SecsGemService.GEMGetAlarmEnableRequest inValue = new GEMModule.SecsGemService.GEMGetAlarmEnableRequest();
            inValue.nCount = nCount;
            inValue.pnALIDs = pnALIDs;
            inValue.pnEnable = pnEnable;
            GEMModule.SecsGemService.GEMGetAlarmEnableResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetAlarmEnable(inValue);
            pnEnable = retVal.pnEnable;
            return retVal.GEMGetAlarmEnableResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetAlarmEnableResponse> GEMGetAlarmEnableAsync(GEMModule.SecsGemService.GEMGetAlarmEnableRequest request) {
            return base.Channel.GEMGetAlarmEnableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetAlarmInfoResponse GEMModule.SecsGemService.ISecsGemService.GEMGetAlarmInfo(GEMModule.SecsGemService.GEMGetAlarmInfoRequest request) {
            return base.Channel.GEMGetAlarmInfo(request);
        }
        
        public long GEMGetAlarmInfo(long nCount, long[] pnALIDs, ref long[] pnALCDs, ref string[] psALTXs) {
            GEMModule.SecsGemService.GEMGetAlarmInfoRequest inValue = new GEMModule.SecsGemService.GEMGetAlarmInfoRequest();
            inValue.nCount = nCount;
            inValue.pnALIDs = pnALIDs;
            inValue.pnALCDs = pnALCDs;
            inValue.psALTXs = psALTXs;
            GEMModule.SecsGemService.GEMGetAlarmInfoResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetAlarmInfo(inValue);
            pnALCDs = retVal.pnALCDs;
            psALTXs = retVal.psALTXs;
            return retVal.GEMGetAlarmInfoResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetAlarmInfoResponse> GEMGetAlarmInfoAsync(GEMModule.SecsGemService.GEMGetAlarmInfoRequest request) {
            return base.Channel.GEMGetAlarmInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetSVInfoResponse GEMModule.SecsGemService.ISecsGemService.GEMGetSVInfo(GEMModule.SecsGemService.GEMGetSVInfoRequest request) {
            return base.Channel.GEMGetSVInfo(request);
        }
        
        public long GEMGetSVInfo(long nCount, long[] pnSVIDs, ref string[] psMins, ref string[] psMaxs) {
            GEMModule.SecsGemService.GEMGetSVInfoRequest inValue = new GEMModule.SecsGemService.GEMGetSVInfoRequest();
            inValue.nCount = nCount;
            inValue.pnSVIDs = pnSVIDs;
            inValue.psMins = psMins;
            inValue.psMaxs = psMaxs;
            GEMModule.SecsGemService.GEMGetSVInfoResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetSVInfo(inValue);
            psMins = retVal.psMins;
            psMaxs = retVal.psMaxs;
            return retVal.GEMGetSVInfoResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetSVInfoResponse> GEMGetSVInfoAsync(GEMModule.SecsGemService.GEMGetSVInfoRequest request) {
            return base.Channel.GEMGetSVInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetECVInfoResponse GEMModule.SecsGemService.ISecsGemService.GEMGetECVInfo(GEMModule.SecsGemService.GEMGetECVInfoRequest request) {
            return base.Channel.GEMGetECVInfo(request);
        }
        
        public long GEMGetECVInfo(long nCount, long[] pnECIDs, ref string[] psNames, ref string[] psDefs, ref string[] psMins, ref string[] psMaxs, ref string[] psUnits) {
            GEMModule.SecsGemService.GEMGetECVInfoRequest inValue = new GEMModule.SecsGemService.GEMGetECVInfoRequest();
            inValue.nCount = nCount;
            inValue.pnECIDs = pnECIDs;
            inValue.psNames = psNames;
            inValue.psDefs = psDefs;
            inValue.psMins = psMins;
            inValue.psMaxs = psMaxs;
            inValue.psUnits = psUnits;
            GEMModule.SecsGemService.GEMGetECVInfoResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetECVInfo(inValue);
            psNames = retVal.psNames;
            psDefs = retVal.psDefs;
            psMins = retVal.psMins;
            psMaxs = retVal.psMaxs;
            psUnits = retVal.psUnits;
            return retVal.GEMGetECVInfoResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetECVInfoResponse> GEMGetECVInfoAsync(GEMModule.SecsGemService.GEMGetECVInfoRequest request) {
            return base.Channel.GEMGetECVInfoAsync(request);
        }
        
        public long GEMRspOffline(long nMsgId, long nAck) {
            return base.Channel.GEMRspOffline(nMsgId, nAck);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspOfflineAsync(long nMsgId, long nAck) {
            return base.Channel.GEMRspOfflineAsync(nMsgId, nAck);
        }
        
        public long GEMRspOnline(long nMsgId, long nAck) {
            return base.Channel.GEMRspOnline(nMsgId, nAck);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspOnlineAsync(long nMsgId, long nAck) {
            return base.Channel.GEMRspOnlineAsync(nMsgId, nAck);
        }
        
        public long GEMReqHostOffline() {
            return base.Channel.GEMReqHostOffline();
        }
        
        public System.Threading.Tasks.Task<long> GEMReqHostOfflineAsync() {
            return base.Channel.GEMReqHostOfflineAsync();
        }
        
        public long GEMReqStartPolling(string sName, long nScanTime) {
            return base.Channel.GEMReqStartPolling(sName, nScanTime);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqStartPollingAsync(string sName, long nScanTime) {
            return base.Channel.GEMReqStartPollingAsync(sName, nScanTime);
        }
        
        public long GEMReqStopPolling(string sName) {
            return base.Channel.GEMReqStopPolling(sName);
        }
        
        public System.Threading.Tasks.Task<long> GEMReqStopPollingAsync(string sName) {
            return base.Channel.GEMReqStopPollingAsync(sName);
        }
        
        public long GEMEnableLog(long bEnabled) {
            return base.Channel.GEMEnableLog(bEnabled);
        }
        
        public System.Threading.Tasks.Task<long> GEMEnableLogAsync(long bEnabled) {
            return base.Channel.GEMEnableLogAsync(bEnabled);
        }
        
        public long GEMSetLogOption(string sDriectory, string sPrefix, string sExtension, long nKeepDay, long bMakeDailyLog, long bMakeSubDirectory) {
            return base.Channel.GEMSetLogOption(sDriectory, sPrefix, sExtension, nKeepDay, bMakeDailyLog, bMakeSubDirectory);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetLogOptionAsync(string sDriectory, string sPrefix, string sExtension, long nKeepDay, long bMakeDailyLog, long bMakeSubDirectory) {
            return base.Channel.GEMSetLogOptionAsync(sDriectory, sPrefix, sExtension, nKeepDay, bMakeDailyLog, bMakeSubDirectory);
        }
        
        public long Init_SECSGEM(string Config) {
            return base.Channel.Init_SECSGEM(Config);
        }
        
        public System.Threading.Tasks.Task<long> Init_SECSGEMAsync(string Config) {
            return base.Channel.Init_SECSGEMAsync(Config);
        }
        
        public long Close_SECSGEM() {
            return base.Channel.Close_SECSGEM();
        }
        
        public System.Threading.Tasks.Task<long> Close_SECSGEMAsync() {
            return base.Channel.Close_SECSGEMAsync();
        }
        
        public long Start() {
            return base.Channel.Start();
        }
        
        public System.Threading.Tasks.Task<long> StartAsync() {
            return base.Channel.StartAsync();
        }
        
        public long Stop() {
            return base.Channel.Stop();
        }
        
        public System.Threading.Tasks.Task<long> StopAsync() {
            return base.Channel.StopAsync();
        }
        
        public void ServerConnect() {
            base.Channel.ServerConnect();
        }
        
        public System.Threading.Tasks.Task ServerConnectAsync() {
            return base.Channel.ServerConnectAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.MakeObjectResponse GEMModule.SecsGemService.ISecsGemService.MakeObject(GEMModule.SecsGemService.MakeObjectRequest request) {
            return base.Channel.MakeObject(request);
        }
        
        public long MakeObject(ref long pnObjectID) {
            GEMModule.SecsGemService.MakeObjectRequest inValue = new GEMModule.SecsGemService.MakeObjectRequest();
            inValue.pnObjectID = pnObjectID;
            GEMModule.SecsGemService.MakeObjectResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).MakeObject(inValue);
            pnObjectID = retVal.pnObjectID;
            return retVal.MakeObjectResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.MakeObjectResponse> MakeObjectAsync(GEMModule.SecsGemService.MakeObjectRequest request) {
            return base.Channel.MakeObjectAsync(request);
        }
        
        public long SetListItem(long nObjectID, long nItemCount) {
            return base.Channel.SetListItem(nObjectID, nItemCount);
        }
        
        public System.Threading.Tasks.Task<long> SetListItemAsync(long nObjectID, long nItemCount) {
            return base.Channel.SetListItemAsync(nObjectID, nItemCount);
        }
        
        public long SetBinaryItem(long nObjectID, byte nValue) {
            return base.Channel.SetBinaryItem(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetBinaryItemAsync(long nObjectID, byte nValue) {
            return base.Channel.SetBinaryItemAsync(nObjectID, nValue);
        }
        
        public long SetBoolItem(long nObjectID, bool nValue) {
            return base.Channel.SetBoolItem(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetBoolItemAsync(long nObjectID, bool nValue) {
            return base.Channel.SetBoolItemAsync(nObjectID, nValue);
        }
        
        public long SetBoolItems(long nObjectID, bool[] pnValue) {
            return base.Channel.SetBoolItems(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetBoolItemsAsync(long nObjectID, bool[] pnValue) {
            return base.Channel.SetBoolItemsAsync(nObjectID, pnValue);
        }
        
        public long SetUint1Item(long nObjectID, byte nValue) {
            return base.Channel.SetUint1Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint1ItemAsync(long nObjectID, byte nValue) {
            return base.Channel.SetUint1ItemAsync(nObjectID, nValue);
        }
        
        public long SetUint1Items(long nObjectID, byte[] pnValue) {
            return base.Channel.SetUint1Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint1ItemsAsync(long nObjectID, byte[] pnValue) {
            return base.Channel.SetUint1ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetUint2Item(long nObjectID, ushort nValue) {
            return base.Channel.SetUint2Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint2ItemAsync(long nObjectID, ushort nValue) {
            return base.Channel.SetUint2ItemAsync(nObjectID, nValue);
        }
        
        public long SetUint2Items(long nObjectID, ushort[] pnValue) {
            return base.Channel.SetUint2Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint2ItemsAsync(long nObjectID, ushort[] pnValue) {
            return base.Channel.SetUint2ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetUint4Item(long nObjectID, uint nValue) {
            return base.Channel.SetUint4Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint4ItemAsync(long nObjectID, uint nValue) {
            return base.Channel.SetUint4ItemAsync(nObjectID, nValue);
        }
        
        public long SetUint4Items(long nObjectID, uint[] pnValue) {
            return base.Channel.SetUint4Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint4ItemsAsync(long nObjectID, uint[] pnValue) {
            return base.Channel.SetUint4ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetUint8Item(long nObjectID, uint nValue) {
            return base.Channel.SetUint8Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint8ItemAsync(long nObjectID, uint nValue) {
            return base.Channel.SetUint8ItemAsync(nObjectID, nValue);
        }
        
        public long SetUint8Items(long nObjectID, uint[] pnValue) {
            return base.Channel.SetUint8Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetUint8ItemsAsync(long nObjectID, uint[] pnValue) {
            return base.Channel.SetUint8ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetInt1Item(long nObjectID, sbyte nValue) {
            return base.Channel.SetInt1Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt1ItemAsync(long nObjectID, sbyte nValue) {
            return base.Channel.SetInt1ItemAsync(nObjectID, nValue);
        }
        
        public long SetInt1Items(long nObjectID, sbyte[] pnValue) {
            return base.Channel.SetInt1Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt1ItemsAsync(long nObjectID, sbyte[] pnValue) {
            return base.Channel.SetInt1ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetInt2Item(long nObjectID, short nValue) {
            return base.Channel.SetInt2Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt2ItemAsync(long nObjectID, short nValue) {
            return base.Channel.SetInt2ItemAsync(nObjectID, nValue);
        }
        
        public long SetInt2Items(long nObjectID, short[] pnValue) {
            return base.Channel.SetInt2Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt2ItemsAsync(long nObjectID, short[] pnValue) {
            return base.Channel.SetInt2ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetInt4Item(long nObjectID, int nValue) {
            return base.Channel.SetInt4Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt4ItemAsync(long nObjectID, int nValue) {
            return base.Channel.SetInt4ItemAsync(nObjectID, nValue);
        }
        
        public long SetInt4Items(long nObjectID, int[] pnValue) {
            return base.Channel.SetInt4Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt4ItemsAsync(long nObjectID, int[] pnValue) {
            return base.Channel.SetInt4ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetInt8Item(long nObjectID, int nValue) {
            return base.Channel.SetInt8Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt8ItemAsync(long nObjectID, int nValue) {
            return base.Channel.SetInt8ItemAsync(nObjectID, nValue);
        }
        
        public long SetInt8Items(long nObjectID, int[] pnValue) {
            return base.Channel.SetInt8Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetInt8ItemsAsync(long nObjectID, int[] pnValue) {
            return base.Channel.SetInt8ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetFloat4Item(long nObjectID, float nValue) {
            return base.Channel.SetFloat4Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetFloat4ItemAsync(long nObjectID, float nValue) {
            return base.Channel.SetFloat4ItemAsync(nObjectID, nValue);
        }
        
        public long SetFloat4Items(long nObjectID, float[] pnValue) {
            return base.Channel.SetFloat4Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetFloat4ItemsAsync(long nObjectID, float[] pnValue) {
            return base.Channel.SetFloat4ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetFloat8Item(long nObjectID, double nValue) {
            return base.Channel.SetFloat8Item(nObjectID, nValue);
        }
        
        public System.Threading.Tasks.Task<long> SetFloat8ItemAsync(long nObjectID, double nValue) {
            return base.Channel.SetFloat8ItemAsync(nObjectID, nValue);
        }
        
        public long SetFloat8Items(long nObjectID, double[] pnValue) {
            return base.Channel.SetFloat8Items(nObjectID, pnValue);
        }
        
        public System.Threading.Tasks.Task<long> SetFloat8ItemsAsync(long nObjectID, double[] pnValue) {
            return base.Channel.SetFloat8ItemsAsync(nObjectID, pnValue);
        }
        
        public long SetStringItem(long nObjectID, string pszValue) {
            return base.Channel.SetStringItem(nObjectID, pszValue);
        }
        
        public System.Threading.Tasks.Task<long> SetStringItemAsync(long nObjectID, string pszValue) {
            return base.Channel.SetStringItemAsync(nObjectID, pszValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetListItemResponse GEMModule.SecsGemService.ISecsGemService.GetListItem(GEMModule.SecsGemService.GetListItemRequest request) {
            return base.Channel.GetListItem(request);
        }
        
        public long GetListItem(long nObjectID, ref long pnItemCount) {
            GEMModule.SecsGemService.GetListItemRequest inValue = new GEMModule.SecsGemService.GetListItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnItemCount = pnItemCount;
            GEMModule.SecsGemService.GetListItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetListItem(inValue);
            pnItemCount = retVal.pnItemCount;
            return retVal.GetListItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetListItemResponse> GetListItemAsync(GEMModule.SecsGemService.GetListItemRequest request) {
            return base.Channel.GetListItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetBinaryItemResponse GEMModule.SecsGemService.ISecsGemService.GetBinaryItem(GEMModule.SecsGemService.GetBinaryItemRequest request) {
            return base.Channel.GetBinaryItem(request);
        }
        
        public long GetBinaryItem(long nObjectID, ref byte[] pnValue) {
            GEMModule.SecsGemService.GetBinaryItemRequest inValue = new GEMModule.SecsGemService.GetBinaryItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetBinaryItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetBinaryItem(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetBinaryItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetBinaryItemResponse> GetBinaryItemAsync(GEMModule.SecsGemService.GetBinaryItemRequest request) {
            return base.Channel.GetBinaryItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetBoolItemResponse GEMModule.SecsGemService.ISecsGemService.GetBoolItem(GEMModule.SecsGemService.GetBoolItemRequest request) {
            return base.Channel.GetBoolItem(request);
        }
        
        public long GetBoolItem(long nObjectID, ref bool[] pnValue) {
            GEMModule.SecsGemService.GetBoolItemRequest inValue = new GEMModule.SecsGemService.GetBoolItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetBoolItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetBoolItem(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetBoolItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetBoolItemResponse> GetBoolItemAsync(GEMModule.SecsGemService.GetBoolItemRequest request) {
            return base.Channel.GetBoolItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetUint1ItemResponse GEMModule.SecsGemService.ISecsGemService.GetUint1Item(GEMModule.SecsGemService.GetUint1ItemRequest request) {
            return base.Channel.GetUint1Item(request);
        }
        
        public long GetUint1Item(long nObjectID, ref byte[] pnValue) {
            GEMModule.SecsGemService.GetUint1ItemRequest inValue = new GEMModule.SecsGemService.GetUint1ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetUint1ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetUint1Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetUint1ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint1ItemResponse> GetUint1ItemAsync(GEMModule.SecsGemService.GetUint1ItemRequest request) {
            return base.Channel.GetUint1ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetUint2ItemResponse GEMModule.SecsGemService.ISecsGemService.GetUint2Item(GEMModule.SecsGemService.GetUint2ItemRequest request) {
            return base.Channel.GetUint2Item(request);
        }
        
        public long GetUint2Item(long nObjectID, ref ushort[] pnValue) {
            GEMModule.SecsGemService.GetUint2ItemRequest inValue = new GEMModule.SecsGemService.GetUint2ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetUint2ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetUint2Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetUint2ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint2ItemResponse> GetUint2ItemAsync(GEMModule.SecsGemService.GetUint2ItemRequest request) {
            return base.Channel.GetUint2ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetUint4ItemResponse GEMModule.SecsGemService.ISecsGemService.GetUint4Item(GEMModule.SecsGemService.GetUint4ItemRequest request) {
            return base.Channel.GetUint4Item(request);
        }
        
        public long GetUint4Item(long nObjectID, ref uint[] pnValue) {
            GEMModule.SecsGemService.GetUint4ItemRequest inValue = new GEMModule.SecsGemService.GetUint4ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetUint4ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetUint4Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetUint4ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint4ItemResponse> GetUint4ItemAsync(GEMModule.SecsGemService.GetUint4ItemRequest request) {
            return base.Channel.GetUint4ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetUint8ItemResponse GEMModule.SecsGemService.ISecsGemService.GetUint8Item(GEMModule.SecsGemService.GetUint8ItemRequest request) {
            return base.Channel.GetUint8Item(request);
        }
        
        public long GetUint8Item(long nObjectID, ref uint[] pnValue) {
            GEMModule.SecsGemService.GetUint8ItemRequest inValue = new GEMModule.SecsGemService.GetUint8ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetUint8ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetUint8Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetUint8ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetUint8ItemResponse> GetUint8ItemAsync(GEMModule.SecsGemService.GetUint8ItemRequest request) {
            return base.Channel.GetUint8ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetInt1ItemResponse GEMModule.SecsGemService.ISecsGemService.GetInt1Item(GEMModule.SecsGemService.GetInt1ItemRequest request) {
            return base.Channel.GetInt1Item(request);
        }
        
        public long GetInt1Item(long nObjectID, ref sbyte[] pnValue) {
            GEMModule.SecsGemService.GetInt1ItemRequest inValue = new GEMModule.SecsGemService.GetInt1ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetInt1ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetInt1Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetInt1ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt1ItemResponse> GetInt1ItemAsync(GEMModule.SecsGemService.GetInt1ItemRequest request) {
            return base.Channel.GetInt1ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetInt2ItemResponse GEMModule.SecsGemService.ISecsGemService.GetInt2Item(GEMModule.SecsGemService.GetInt2ItemRequest request) {
            return base.Channel.GetInt2Item(request);
        }
        
        public long GetInt2Item(long nObjectID, ref short[] pnValue) {
            GEMModule.SecsGemService.GetInt2ItemRequest inValue = new GEMModule.SecsGemService.GetInt2ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetInt2ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetInt2Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetInt2ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt2ItemResponse> GetInt2ItemAsync(GEMModule.SecsGemService.GetInt2ItemRequest request) {
            return base.Channel.GetInt2ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetInt4ItemResponse GEMModule.SecsGemService.ISecsGemService.GetInt4Item(GEMModule.SecsGemService.GetInt4ItemRequest request) {
            return base.Channel.GetInt4Item(request);
        }
        
        public long GetInt4Item(long nObjectID, ref int[] pnValue) {
            GEMModule.SecsGemService.GetInt4ItemRequest inValue = new GEMModule.SecsGemService.GetInt4ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetInt4ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetInt4Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetInt4ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt4ItemResponse> GetInt4ItemAsync(GEMModule.SecsGemService.GetInt4ItemRequest request) {
            return base.Channel.GetInt4ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetInt8ItemResponse GEMModule.SecsGemService.ISecsGemService.GetInt8Item(GEMModule.SecsGemService.GetInt8ItemRequest request) {
            return base.Channel.GetInt8Item(request);
        }
        
        public long GetInt8Item(long nObjectID, ref int[] pnValue) {
            GEMModule.SecsGemService.GetInt8ItemRequest inValue = new GEMModule.SecsGemService.GetInt8ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetInt8ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetInt8Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetInt8ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetInt8ItemResponse> GetInt8ItemAsync(GEMModule.SecsGemService.GetInt8ItemRequest request) {
            return base.Channel.GetInt8ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetFloat4ItemResponse GEMModule.SecsGemService.ISecsGemService.GetFloat4Item(GEMModule.SecsGemService.GetFloat4ItemRequest request) {
            return base.Channel.GetFloat4Item(request);
        }
        
        public long GetFloat4Item(long nObjectID, ref float[] pnValue) {
            GEMModule.SecsGemService.GetFloat4ItemRequest inValue = new GEMModule.SecsGemService.GetFloat4ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetFloat4ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetFloat4Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetFloat4ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetFloat4ItemResponse> GetFloat4ItemAsync(GEMModule.SecsGemService.GetFloat4ItemRequest request) {
            return base.Channel.GetFloat4ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetFloat8ItemResponse GEMModule.SecsGemService.ISecsGemService.GetFloat8Item(GEMModule.SecsGemService.GetFloat8ItemRequest request) {
            return base.Channel.GetFloat8Item(request);
        }
        
        public long GetFloat8Item(long nObjectID, ref double[] pnValue) {
            GEMModule.SecsGemService.GetFloat8ItemRequest inValue = new GEMModule.SecsGemService.GetFloat8ItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.pnValue = pnValue;
            GEMModule.SecsGemService.GetFloat8ItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetFloat8Item(inValue);
            pnValue = retVal.pnValue;
            return retVal.GetFloat8ItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetFloat8ItemResponse> GetFloat8ItemAsync(GEMModule.SecsGemService.GetFloat8ItemRequest request) {
            return base.Channel.GetFloat8ItemAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GetStringItemResponse GEMModule.SecsGemService.ISecsGemService.GetStringItem(GEMModule.SecsGemService.GetStringItemRequest request) {
            return base.Channel.GetStringItem(request);
        }
        
        public long GetStringItem(long nObjectID, ref string psValue) {
            GEMModule.SecsGemService.GetStringItemRequest inValue = new GEMModule.SecsGemService.GetStringItemRequest();
            inValue.nObjectID = nObjectID;
            inValue.psValue = psValue;
            GEMModule.SecsGemService.GetStringItemResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GetStringItem(inValue);
            psValue = retVal.psValue;
            return retVal.GetStringItemResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GetStringItemResponse> GetStringItemAsync(GEMModule.SecsGemService.GetStringItemRequest request) {
            return base.Channel.GetStringItemAsync(request);
        }
        
        public long CloseObject(long nObjectID) {
            return base.Channel.CloseObject(nObjectID);
        }
        
        public System.Threading.Tasks.Task<long> CloseObjectAsync(long nObjectID) {
            return base.Channel.CloseObjectAsync(nObjectID);
        }
        
        public long SendSECSMessage(long nObjectID, long nStream, long nFunction, long nSysbyte) {
            return base.Channel.SendSECSMessage(nObjectID, nStream, nFunction, nSysbyte);
        }
        
        public System.Threading.Tasks.Task<long> SendSECSMessageAsync(long nObjectID, long nStream, long nFunction, long nSysbyte) {
            return base.Channel.SendSECSMessageAsync(nObjectID, nStream, nFunction, nSysbyte);
        }
        
        public long GEMReqOffline() {
            return base.Channel.GEMReqOffline();
        }
        
        public System.Threading.Tasks.Task<long> GEMReqOfflineAsync() {
            return base.Channel.GEMReqOfflineAsync();
        }
        
        public long GEMReqLocal() {
            return base.Channel.GEMReqLocal();
        }
        
        public System.Threading.Tasks.Task<long> GEMReqLocalAsync() {
            return base.Channel.GEMReqLocalAsync();
        }
        
        public long GEMReqRemote() {
            return base.Channel.GEMReqRemote();
        }
        
        public System.Threading.Tasks.Task<long> GEMReqRemoteAsync() {
            return base.Channel.GEMReqRemoteAsync();
        }
        
        public long GEMSetEstablish(long bState) {
            return base.Channel.GEMSetEstablish(bState);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetEstablishAsync(long bState) {
            return base.Channel.GEMSetEstablishAsync(bState);
        }
        
        public long GEMSetParam(string sParamName, string sParamValue) {
            return base.Channel.GEMSetParam(sParamName, sParamValue);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetParamAsync(string sParamName, string sParamValue) {
            return base.Channel.GEMSetParamAsync(sParamName, sParamValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GEMModule.SecsGemService.GEMGetParamResponse GEMModule.SecsGemService.ISecsGemService.GEMGetParam(GEMModule.SecsGemService.GEMGetParamRequest request) {
            return base.Channel.GEMGetParam(request);
        }
        
        public long GEMGetParam(string sParamName, ref string psParamValue) {
            GEMModule.SecsGemService.GEMGetParamRequest inValue = new GEMModule.SecsGemService.GEMGetParamRequest();
            inValue.sParamName = sParamName;
            inValue.psParamValue = psParamValue;
            GEMModule.SecsGemService.GEMGetParamResponse retVal = ((GEMModule.SecsGemService.ISecsGemService)(this)).GEMGetParam(inValue);
            psParamValue = retVal.psParamValue;
            return retVal.GEMGetParamResult;
        }
        
        public System.Threading.Tasks.Task<GEMModule.SecsGemService.GEMGetParamResponse> GEMGetParamAsync(GEMModule.SecsGemService.GEMGetParamRequest request) {
            return base.Channel.GEMGetParamAsync(request);
        }
        
        public long GEMEQInitialized(long nInitType) {
            return base.Channel.GEMEQInitialized(nInitType);
        }
        
        public System.Threading.Tasks.Task<long> GEMEQInitializedAsync(long nInitType) {
            return base.Channel.GEMEQInitializedAsync(nInitType);
        }
        
        public long GEMReqGetDateTime() {
            return base.Channel.GEMReqGetDateTime();
        }
        
        public System.Threading.Tasks.Task<long> GEMReqGetDateTimeAsync() {
            return base.Channel.GEMReqGetDateTimeAsync();
        }
        
        public long GEMRspGetDateTime(long nMsgId, string sSystemTime) {
            return base.Channel.GEMRspGetDateTime(nMsgId, sSystemTime);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspGetDateTimeAsync(long nMsgId, string sSystemTime) {
            return base.Channel.GEMRspGetDateTimeAsync(nMsgId, sSystemTime);
        }
        
        public long GEMRspDateTime(long nMsgId, long nResult) {
            return base.Channel.GEMRspDateTime(nMsgId, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspDateTimeAsync(long nMsgId, long nResult) {
            return base.Channel.GEMRspDateTimeAsync(nMsgId, nResult);
        }
        
        public long GEMSetAlarm(long nID, long nState) {
            return base.Channel.GEMSetAlarm(nID, nState);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetAlarmAsync(long nID, long nState) {
            return base.Channel.GEMSetAlarmAsync(nID, nState);
        }
        
        public long GEMRspRemoteCommand(long nMsgId, string sCmd, long nHCAck, long nCount, long[] pnResult) {
            return base.Channel.GEMRspRemoteCommand(nMsgId, sCmd, nHCAck, nCount, pnResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspRemoteCommandAsync(long nMsgId, string sCmd, long nHCAck, long nCount, long[] pnResult) {
            return base.Channel.GEMRspRemoteCommandAsync(nMsgId, sCmd, nHCAck, nCount, pnResult);
        }
        
        public long GEMRspRemoteCommand2(long nMsgId, string sCmd, long nHCAck, long nCount, string[] psCpName, long[] pnCpAck) {
            return base.Channel.GEMRspRemoteCommand2(nMsgId, sCmd, nHCAck, nCount, psCpName, pnCpAck);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspRemoteCommand2Async(long nMsgId, string sCmd, long nHCAck, long nCount, string[] psCpName, long[] pnCpAck) {
            return base.Channel.GEMRspRemoteCommand2Async(nMsgId, sCmd, nHCAck, nCount, psCpName, pnCpAck);
        }
        
        public long GEMRspChangeECV(long nMsgId, long nResult) {
            return base.Channel.GEMRspChangeECV(nMsgId, nResult);
        }
        
        public System.Threading.Tasks.Task<long> GEMRspChangeECVAsync(long nMsgId, long nResult) {
            return base.Channel.GEMRspChangeECVAsync(nMsgId, nResult);
        }
        
        public long GEMSetECVChanged(long nCount, long[] pnEcIds, string[] psEcVals) {
            return base.Channel.GEMSetECVChanged(nCount, pnEcIds, psEcVals);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetECVChangedAsync(long nCount, long[] pnEcIds, string[] psEcVals) {
            return base.Channel.GEMSetECVChangedAsync(nCount, pnEcIds, psEcVals);
        }
        
        public long GEMReqAllECInfo() {
            return base.Channel.GEMReqAllECInfo();
        }
        
        public System.Threading.Tasks.Task<long> GEMReqAllECInfoAsync() {
            return base.Channel.GEMReqAllECInfoAsync();
        }
        
        public long GEMSetPPChanged(long nMode, string sPpid, long nLength, string pbBody) {
            return base.Channel.GEMSetPPChanged(nMode, sPpid, nLength, pbBody);
        }
        
        public System.Threading.Tasks.Task<long> GEMSetPPChangedAsync(long nMode, string sPpid, long nLength, string pbBody) {
            return base.Channel.GEMSetPPChangedAsync(nMode, sPpid, nLength, pbBody);
        }
    }
}
