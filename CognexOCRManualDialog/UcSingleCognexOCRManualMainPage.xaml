<UserControl x:Class="CognexOCRManualDialog.UcSingleCognexOCRManualMainPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
             xmlns:cog="clr-namespace:Cognex.Controls;assembly=Cognex.Controls"
             xmlns:local="clr-namespace:CognexOCRManualDialog"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:vk="clr-namespace:VirtualKeyboardControl;assembly=VirtualKeyboardControl"
             mc:Ignorable="d" 
             d:DesignHeight="940" d:DesignWidth="800" Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded">

    <UserControl.Resources>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConv"/>
    </UserControl.Resources>
    
        <Border BorderBrush="Gray" BorderThickness="2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="9*"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Background="WhiteSmoke" Grid.Column="0" Margin="3" TextAlignment="Right" Padding="0, 0, 16, 0" FontSize="24">
                    <TextBlock.Text>
                        <MultiBinding  StringFormat="{}{0}/{1}">
                            <Binding Path="CurTextLength"/>
                            <Binding Path="MaxTextLength"/>
                        </MultiBinding>
                    </TextBlock.Text>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding TurnOffBuzzer}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <Rectangle  Fill="Orange" Opacity="0.1" Height="Auto" Width="Auto" >
                    <Rectangle.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SetBuzzer}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                                                <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
                <StackPanel Orientation="Horizontal">
                    <Viewbox HorizontalAlignment="Left" Margin="8,0,0,0" >
                        <Canvas Width="24" Height="24" Visibility="{Binding SetBuzzer, Converter={StaticResource BoolToVisibilityConv}}">
                            <Path Fill="Black" Data="M6,6.9L3.87,4.78L5.28,3.37L7.4,5.5L6,6.9M13,1V4H11V1H13M20.13,4.78L18,6.9L16.6,5.5L18.72,3.37L20.13,4.78M4.5,10.5V12.5H1.5V10.5H4.5M19.5,10.5H22.5V12.5H19.5V10.5M6,20H18A2,2 0 0,1 20,22H4A2,2 0 0,1 6,20M12,5A6,6 0 0,1 18,11V19H6V11A6,6 0 0,1 12,5M12,7A4,4 0 0,0 8,11V17H16V11A4,4 0 0,0 12,7Z" />
                        </Canvas>
                    </Viewbox>
                    <TextBlock Text="Click to Turn Off the Buzzer" Margin="4" FontSize="22" FontWeight="Bold" VerticalAlignment="Center" Visibility="{Binding SetBuzzer, Converter={StaticResource BoolToVisibilityConv}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding TurnOffBuzzer}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </StackPanel>

                <TextBlock x:Name="exitBtn" Background="WhiteSmoke" Text="X" Grid.Column="1" Margin="3" TextAlignment="Center" FontSize="24" MouseDown="exitBtn_MouseDown" MouseUp="exitBtn_MouseUp" MouseLeave="exitBtn_MouseLeave">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding ExitCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </Grid>

            <!--<Grid x:Name="CognexDisplay"  Grid.Row="0" Grid.Column="0"/>-->
            <Canvas Grid.Row="1" Width="752" Height="480">
                <Image Source="{Binding ImageSource}" Width="752" Height="480"/>
                <!--NEW LIGHT JOG-->
                <Grid Grid.Row="2" Grid.Column="1" Width="150" Height="150" VerticalAlignment="Bottom" HorizontalAlignment="Left" Canvas.Left="588" Canvas.Top="282" Opacity="0.6">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0" Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Margin="0" Command="{Binding LightPrevTypeCommand}">
                            <Button.Content>
                                <ed:BlockArrow Fill="Black" Orientation="Left"  Stroke="Black" Height="20" Width="20"/>
                            </Button.Content>
                        </Button>
                        <Button Grid.Column="1" Margin="3" IsEnabled="False" Content="{Binding SelectedLight.Name}" Foreground="White" FontWeight="Bold"/>
                        <Button Grid.Column="2" Margin="0" Command="{Binding LightNextTypeCommand}">
                            <Button.Content>
                                <ed:BlockArrow Fill="Black" Orientation="Right" Stroke="Black" Height="20" Width="20"/>
                            </Button.Content>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1" Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <RepeatButton Grid.Column="0" Margin="0" Command="{Binding LightPowerIncreaseCommand}">
                            <RepeatButton.Content>
                                <ed:BlockArrow Fill="Black" Orientation="Up" Stroke="Black" Height="20" Width="20"/>
                            </RepeatButton.Content>
                        </RepeatButton >
                        <Button Grid.Column="1" Margin="3" IsEnabled="False"  Content="{Binding LightIntensity}" Foreground="White" FontWeight="Bold"/>
                        <RepeatButton Grid.Column="2" Margin="0" Command="{Binding LightPowerDecreaseCommand}">
                            <RepeatButton.Content>
                                <ed:BlockArrow Fill="Black" Orientation="Down" Stroke="Black" Height="20" Width="20"/>
                            </RepeatButton.Content>
                        </RepeatButton >
                    </Grid>
                </Grid>
            </Canvas>
            <vk:UcVirtualKeyboard Grid.Row="2"
                            TextData="{Binding OCRString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            EnterKeyCommand="{Binding EnterKeyCommand}" TextBrush="{Binding OCRInputBoxBrush}" TitleBarVisible="Collapsed"/>
            <!--<Grid Grid.Row="3">
                <StackPanel Grid.Column="0" Orientation="Vertical" Grid.ColumnSpan="2">

                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        --><!--<Button Grid.Column="1" Grid.Row="0" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding FlatJogUpCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-up-bold-outline_Black.png"/>
                        </Button>-->

                        <!--<Button Grid.Column="0" Grid.Row="2" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding FlatJogLeftCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-left-bold-outline_Black.png"/>
                        </Button>

                        <Button Grid.Column="1" Grid.Row="1" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding FlatJogDownCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-down-bold-outline_Black.png"/>
                        </Button>-->

                        <!--<Button Grid.Column="2" Grid.Row="1" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding FlatJogRightCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-right-bold-outline_Black.png"/>
                        </Button>-->
                        <!--<StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <Slider  Grid.Row="0" Grid.Column="0"  IsEnabled="{Binding IsWafer}" Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Center" FlowDirection="LeftToRight" IsSnapToTickEnabled="True"  TickPlacement="TopLeft" Width="270" TickFrequency="1" Minimum="1" Maximum="6" Value="{Binding TickValue}"/>
                                <Label Content="{Binding AngleValue}" Foreground="White" FontSize="15"> </Label>
                            </StackPanel>--><!--
                        <Button Grid.Column="0" Grid.Row="1" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding FlatJogCRCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/ClockWise.png"/>
                        </Button>
                        <StackPanel Grid.Column="1"  Orientation="Vertical" >
                            <Label Foreground="White" HorizontalAlignment="Center">Angle Pos</Label>
                            <TextBox Grid.Column="0" Foreground="White" FontSize="14" HorizontalContentAlignment="Center"  Text="{Binding RelAngle}"  Height="42" VerticalAlignment="Top" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding AngleTextBoxClickCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </StackPanel>
                        <Button Grid.Column="2" Grid.Row="1" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding FlatJogCCRCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/CounterClockWise.png"/>
                        </Button>

                        <Button Grid.Column="3" Grid.Row="1" Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Command="{Binding CurAngleMoveCommand}">
                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/target.png"/>
                        </Button>
                        <StackPanel Grid.Column="4" Orientation="Vertical">
                            <Button HorizontalAlignment="Center" VerticalAlignment="Top" Width="80" Height="40" Content="PA Reset" Command="{Binding PAResetCommand}">
                            </Button>
                            <StackPanel Orientation="Horizontal" >
                                <Label Foreground="White" FontSize="10" >OCR Angle :</Label>
                                <Label Foreground="White" FontSize="10"  HorizontalAlignment="Left" Content="{Binding OCRPosition.VPos.Value}" ></Label>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Grid>-->
        </Grid>
    </Border>
</UserControl>
