<dialogs:CustomDialog x:Class="PMISetup.UC.PMIParameterSetupControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PMISetup.UC"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:conv="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:pmi="clr-namespace:ProberInterfaces.PMI;assembly=ProberInterfaces"
             xmlns:pi="clr-namespace:ProberInterfaces.PMI;assembly=ProberInterfaces"
            xmlns:pco="clr-namespace:ProbeCardObject;assembly=ProbeCardObject"
             mc:Ignorable="d" Height="1038" Width="1260"
             Background="#FF232222"
             Style="{DynamicResource FullScreenDialogStyle}">

    <dialogs:CustomDialog.Resources>

        <conv:BooleanToIntConverter             x:Key="BooleanToIsCheckedConverter"/>
        <conv:EnumBooleanConverter              x:Key="EnumBooleanConverter"/>
        <conv:ComparisonConverter2 x:Key="ComparisonConve"/>
        <conv:MulitCommandParameterConverter    x:Key="MulitCommandParameterConverter"/>
        <conv:TabSizeConverter                  x:Key="tabsizeconverter"/>
        <!--<local:BooleanToYesNoConverter          x:Key="BooleanToYesNoConv"/>-->
        <local:EnabledDisabledToBooleanConverter x:Key="EnabledDisabledToBooleanConv"/>
        <local:GroupingMarginVisibilityConverter x:Key="GroupingMarginVisibilityConv"/>
        <local:DoubleToFOCUSINGRAGEConverter x:Key="DoubleToFOCUSINGRAGEConv"/>
        <local:EnumExcludeUndefinedConverter x:Key="EnumExcludeUndefinedConv"/>

    </dialogs:CustomDialog.Resources>


    <Grid >
        <Grid.Resources>
            <ResourceDictionary>

                <ObjectDataProvider x:Key="getDataFromOPMode" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:OP_MODE"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataFromOPModeOnRetest" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:OP_MODE_ON_RETEST"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataFromMarkCompareMode" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:MARK_COMPARE_MODE"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataFromMarkCompareUnit" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:MARK_COMPARE_UNIT"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataFromLoggingMode" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:LOGGING_MODE"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataFromGroupingMethod" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:GROUPING_METHOD"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataFocusingRange" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pco:FOCUSINGRAGE"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="getDataPuaseMethod" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="pi:PMI_PAUSE_METHOD"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                
                
                
                <System:Boolean x:Key="FalseValue">False</System:Boolean>
                <System:Boolean x:Key="TrueValue">True</System:Boolean>

                <System:Double x:Key="DialogTitleFontSize">26</System:Double>
                <System:Double x:Key="DialogMessageFontSize">15</System:Double>

                <Style x:Key="TitleLabel" TargetType="Label">
                    <Setter Property="Margin" Value="0 5 0 0"/>
                    <Setter Property="Background" Value="DodgerBlue" />
                    <Setter Property="FontSize" Value="30" />
                    <Setter Property="Foreground" Value="#FFE8E8E8"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style x:Key="ContentLabel" TargetType="Label">
                    <Setter Property="Margin" Value="10 0"/>
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="Foreground" Value="#FF3BA83B"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style x:Key="ContentTextBox" TargetType="TextBox">
                    <Setter Property="Margin" Value="4 0"/>
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="Foreground" Value="#FFE8E8E8"/>
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="Height" Value="40"/>
                </Style>

                <Style x:Key="DefaultButton" TargetType="Button">
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="FontSize" Value="35" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style x:Key="DefaultRadioButton" TargetType="RadioButton">
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Foreground" Value="#FFE8E8E8"/>
                    <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>-->
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
                
                <Style x:Key="DefaultRadioItemLable" TargetType="Label">
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Foreground" Value="#FFE8E8E8"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>

                <Style x:Key="DefaultGroupBox" TargetType="GroupBox">
                    <Setter Property="Foreground" Value="#FFE8E8E8"/>
                    <Setter Property="Margin" Value="10 0"/>
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style x:Key="DefaultTabControl" TargetType="TabControl">
                    <Setter Property="Foreground" Value="#FFE8E8E8"/>
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="FontSize" Value="30" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <!--<Style TargetType="{x:Type TabItem}">
                    <Setter Property="Width">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource tabsizeconverter}">
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" Path="ActualWidth" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>-->

            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="0.8*" MinHeight="20" />
            <RowDefinition Height="9*" />
            <RowDefinition Height="0.8*" MinHeight="20"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" Style="{StaticResource TitleLabel}" Content ="PMI Parameter Settings" />

        <TabControl Grid.Row="1" Background="#FF232222" Margin="0 4" BorderThickness="2.5" BorderBrush="#FFE8E8E8">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter>
                                    <ContentPresenter.Content>
                                        <Label x:Name="txtBlock" Style="{StaticResource ContentLabel}" Content="{TemplateBinding Content}" Foreground="Black" Padding="0"/>
                                    </ContentPresenter.Content>
                                </ContentPresenter>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}" Value="True">
                                        <Setter TargetName="txtBlock" Property="Foreground" Value="DodgerBlue"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource tabsizeconverter}">
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" Path="ActualWidth" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <!-- Operation -->
            <TabItem AutomationProperties.AutomationId="tiPMIOperation"
                     Header="Operation">
                <StackPanel>
                    <!-- Operation Options -->
                    <GroupBox Header="Operation Options" Style="{StaticResource DefaultGroupBox}">

                        <StackPanel Margin="10">

                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="PMI Operation Mode" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIOperationMode"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              ItemsSource="{Binding Source={StaticResource getDataFromOPMode}}"
                                              SelectedItem="{Binding PMIDevParm.NormalPMI.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    <!--CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}, Path=SelectedItem}"-->
                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Disable"                                            
                                            IsChecked="{Binding PMIDevParm.NormalPMI.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:OP_MODE.Disable}}">
                                        -->
                                    <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    <!--
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.NormalPMI.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:OP_MODE.Enable}}">
                                        -->
                                    <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    <!--
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="PMI Mode On Retest" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIRetestMode"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              ItemsSource="{Binding Source={StaticResource getDataFromOPModeOnRetest}}"
                                              SelectedItem="{Binding PMIDevParm.OperationModeOnRetest.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Before Retest Only"
                                            IsChecked="{Binding PMIDevParm.OperationModeOnRetest.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:OP_MODE_ON_RETEST.BeforeRetestOnly}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="After Retest Only"
                                            IsChecked="{Binding PMIDevParm.OperationModeOnRetest.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:OP_MODE_ON_RETEST.AfterRetestOnly}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="2" Style="{StaticResource DefaultRadioButton}" Content="Enable Both"
                                            IsChecked="{Binding PMIDevParm.OperationModeOnRetest.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:OP_MODE_ON_RETEST.EnableBoth}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>

                    <!-- Pause Options -->
                    <GroupBox Header="Pause Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="10">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}"
                                Content="LOT Pause Method" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMILotPauseMethod"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              Width="350"
                                              ItemsSource="{Binding Source={StaticResource getDataPuaseMethod}, Converter={StaticResource EnumExcludeUndefinedConv}}"
                                              SelectedItem="{Binding PMIDevParm.PauseMethod.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    
                                    <!--<ComboBox Margin="0,4,0,4"
                                                           Style="{x:Null}"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Center"
                                                           Foreground="Black"
                                                           Background="Black"
                                                           FontSize="20"
                                                           FontWeight="Bold"
                                                           SelectedValue="{Binding PMIDevParm.PauseImmediately.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>-->

                                    <!--<view:boolcombobox defaultvalue="True" hasemptyoption="False" returnedvalue="{Binding Path=IsActive, Mode=TwoWay}" width="100"></view:boolcombobox>-->

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.PauseImmediately.Value, Converter={StaticResource ComparisonConve},ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.PauseImmediately.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Failed Pads Per Wafer" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PausePadCntPerWafer.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.PausePadCntPerWafer"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}">
                                    <Label.Content>
                                        <AccessText TextWrapping="Wrap" Text="Failed Pad Percentage Per Die (0 ~ 99%)"/>
                                    </Label.Content>
                                </Label>
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtFailedPadsPercentagePerDie"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PausePercentPerDie.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.PausePercentPerDie"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <!--<Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}"
                                Content="Continuous Fail Die Count" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtContinuousFailDieCount"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PauseContinuousFailDie.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        --><!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.PauseContinuousFailDie"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>--><!--
                                    </TextBox>
                                </Grid>
                            </Grid>-->

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}"
                                Content="Skip PMI after pause" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMISkipAfterPause"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.SkipPMIDiesAfterPause.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                </Grid>
                            </Grid>
                            
                        </StackPanel>
                    </GroupBox>

                    <!-- Probe Mark Options -->
                    <GroupBox Header="Probe Mark Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="10">

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Maximum mark count" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="cmbPMIMaximumMarkCount"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MaximumMarkCnt.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.PausePadCntPerWafer"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Grid>
                            </Grid>
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Mark Compare Mode" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>


                                    <ComboBox AutomationProperties.AutomationId="cmbPMIMarkCompareMode"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              ItemsSource="{Binding Source={StaticResource getDataFromMarkCompareMode}}"
                                              SelectedItem="{Binding PMIDevParm.MarkCompareMode.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Area"
                                            IsChecked="{Binding PMIDevParm.MarkCompareMode.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:MARK_COMPARE_MODE.Area}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Size"
                                            IsChecked="{Binding PMIDevParm.MarkCompareMode.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:MARK_COMPARE_MODE.Size}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="2" Style="{StaticResource DefaultRadioButton}" Content="Area + Size"
                                            IsChecked="{Binding PMIDevParm.MarkCompareMode.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:MARK_COMPARE_MODE.AreaAndSize}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Mark Compare Unit" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIMarkCompareUnit"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              ItemsSource="{Binding Source={StaticResource getDataFromMarkCompareUnit}}"
                                              SelectedItem="{Binding PMIDevParm.MarkCompareUnit.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Individual"
                                            IsChecked="{Binding PMIDevParm.MarkCompareUnit.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:MARK_COMPARE_UNIT.Individual}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Sum"
                                            IsChecked="{Binding PMIDevParm.MarkCompareUnit.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:MARK_COMPARE_UNIT.Sum}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="2" Style="{StaticResource DefaultRadioButton}" Content="Individual + Sum"
                                            IsChecked="{Binding PMIDevParm.MarkCompareUnit.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:MARK_COMPARE_UNIT.IndividualAndSum}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Mark Area Calculate" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>


                                    <RadioButton Grid.Column="0"  GroupName="MarkAreaCalculateModeSquare" VerticalContentAlignment="Center"
                                                 IsChecked="{Binding PMIDevParm.MarkAreaCalculateMode.Value, Converter={StaticResource EnumBooleanConverter},
                                        ConverterParameter=Square}">
                                        <StackPanel Height="60" Orientation="Horizontal" >
                                            <Label Style="{StaticResource DefaultRadioItemLable}" >SQUARE</Label>
                                            <Image Source="/PMISetup;component/Resources/OPTION_AREA_MODE_SQUARE.bmp" Stretch="Uniform" Height="60">
                                            </Image>
                                        </StackPanel>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1"  GroupName="MarkAreaCalculateModeConvex" VerticalContentAlignment="Center"
                                                 IsChecked="{Binding PMIDevParm.MarkAreaCalculateMode.Value, Converter={StaticResource EnumBooleanConverter},
                                        ConverterParameter=Convex}">
                                        <StackPanel Height="60" Orientation="Horizontal" >
                                            <Label Style="{StaticResource DefaultRadioItemLable}">CONTOUR</Label>
                                            <Image Source="/PMISetup;component/Resources/OPTION_AREA_MODE_CONVEX.png" Stretch="Uniform" Height="60">
                                            </Image>
                                        </StackPanel>
                                    </RadioButton>
                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>

            <!-- Vision -->
            <TabItem AutomationProperties.AutomationId="tiPMIVision"
                     Header="Vision">
                <StackPanel>
                    <!-- Focusing Options -->
                    <GroupBox Header="Focusing Options" Style="{StaticResource DefaultGroupBox}">

                        <StackPanel Margin="10">

                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Focusing by Dut Interval" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.3*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIFocusingByDutInterval"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FocusingEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FocusingEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FocusingEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Dut Interval" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMIDutInterval"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FocusingDutInterval.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FocusingDutInterval"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Grid>
                            </Grid>


                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Focusing on each group" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.3*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIFocusingOnEachGroup"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FocusingEachGroupEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                </Grid>
                            </Grid>

                            <Grid Margin="0,4,0,4">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Focusing range" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.3*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIFocusingRange"
                                              Margin="0,4,0,4" 
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              ItemsSource="{Binding Source={StaticResource getDataFocusingRange}}"
                                              SelectedItem="{Binding PMIDevParm.NormalFocusParam.FocusRange.Value, Converter={StaticResource DoubleToFOCUSINGRAGEConv}}">
                                        <!--<ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>-->

                                        <!--<ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=., Converter={StaticResource EnumConv}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>-->

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>
                                </Grid>

                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Focusing ROI Expansion Ratio" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFocusingROIRatio"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FocusingROIExpansionRatio.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.FloatTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FocusingDutInterval"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="Ratio = Focusing ROI / Pad Size ( >= 1)" Grid.ColumnSpan="2" />
                                </Grid>
                                
                            </Grid>
                        </StackPanel>

                    </GroupBox>

                    <!-- Light Options -->
                    <GroupBox Header="Light Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="10">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Light Value" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMILightValue"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.LightValue.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.LightValue"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Auto Light Enable" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.3*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIAutoLightEnable"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.AutoLightEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.AutoLightEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.AutoLightEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Auto Light Range" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.2*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.8*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMIAutoLightRangeStart"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.AutoLightStart.Value}" Grid.Column="0">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.AutoLightStart"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="~" HorizontalAlignment="Center"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIAutoLightRangeEnd"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.AutoLightEnd.Value}" Grid.Column="2">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.AutoLightEnd"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Auto Light Interval" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMIAutoLightInterval"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.AutoLightInterval.Value}">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.AutoLightInterval"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Filter Options" Style="{StaticResource DefaultGroupBox}">

                        <StackPanel Margin="10">

                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Image Enhancement" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.3*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox Margin="0,4,0,4"
                                                           Style="{x:Null}"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Center"
                                                           Foreground="Black"
                                                           Background="Black"
                                                           FontSize="20"
                                                           FontWeight="Bold"
                                                           ItemsSource="{Binding PMIDevParm.PadMarkDifferentiationModes}"
                                                           SelectedValue="{Binding PMIDevParm.PadMarkDifferentiation.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        
                                    </ComboBox>


                                </Grid>
                            </Grid>

                        </StackPanel>

                    </GroupBox>
                </StackPanel>
            </TabItem>

            <!-- Result Data -->
            <TabItem AutomationProperties.AutomationId="tiPMIResultData"
                     Header="Result Data">
                <StackPanel>
                    <!-- PMI Log Save Options -->
                    <GroupBox Header="PMI Log Save Options" Style="{StaticResource DefaultGroupBox}" Visibility="{Binding GPVisibility}">
                        <StackPanel Margin="10">

                            <!--<Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Log File To HDD" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIResultDataSaveLogFileToFTP" Margin="0,4,0,4"
                                                           Style="{x:Null}"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Center"
                                                           Foreground="Black"
                                                           Background="Black"
                                                           FontSize="20"
                                                           FontWeight="Bold"
                                                           SelectedValue="{Binding PMIDevParm.LogInfo.LogSaveHDDEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    -->
                            <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LogSaveHDDEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LogSaveHDDEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->
                            <!--

                                </Grid>
                            </Grid>-->

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Log File To FTP" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIResultDataSaveLogFileToNetworkDrive"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.LogInfo.LogSaveFTPEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LogSaveFTPEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LogSaveFTPEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Log File To Network Drive" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox Margin="0,4,0,4"
                                                           Style="{x:Null}"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Center"
                                                           Foreground="Black"
                                                           Background="Black"
                                                           FontSize="20"
                                                           FontWeight="Bold"
                                                           SelectedValue="{Binding PMIDevParm.LogInfo.LogSaveNETEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LogSaveNETEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LogSaveNETEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <!--<Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Log File Mode" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox  AutomationProperties.AutomationId="cmbPMIResultDataSaveFailImageToHDD" Margin="0,4,0,4"
                                                           Style="{x:Null}"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Center"
                                                           Foreground="Black"
                                                           Background="Black"
                                                           FontSize="20"
                                                           FontWeight="Bold"
                                                           ItemsSource="{Binding Source={StaticResource getDataFromLoggingMode}}"
                                                           SelectedItem="{Binding PMIDevParm.LogInfo.LoggingMode.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    -->
                            <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="All"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LoggingMode.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:LOGGING_MODE.All}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Only Fail"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LoggingMode.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:LOGGING_MODE.OnlyFail}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="2" Style="{StaticResource DefaultRadioButton}" Content="Only Pass"
                                            IsChecked="{Binding PMIDevParm.LogInfo.LoggingMode.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={x:Static pmi:LOGGING_MODE.OnlyPass}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->
                            <!--

                                </Grid>
                            </Grid>-->

                        </StackPanel>
                    </GroupBox>

                    <!-- PMI Image Save Options -->
                    <GroupBox Header="PMI Image Save Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="10">

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Fail Image To HDD" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIResultDataSaveFailImageToFTP"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.LogInfo.FailImageSaveHDDEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.FailImageSaveHDDEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.FailImageSaveHDDEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10" Visibility="{Binding GPVisibility}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Fail Image To FTP" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIResultDataSavePassImageToHDD"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.LogInfo.FailImageSaveFTPEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.FailImageSaveFTPEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.FailImageSaveFTPEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Pass Image To HDD" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIResultDataSavePassImageToFTP"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.LogInfo.PassImageSaveHDDEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.PassImageSaveHDDEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.PassImageSaveHDDEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10" Visibility="{Binding GPVisibility}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Pass Image To FTP" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="tiPMIFTPFolder"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.LogInfo.PassImageSaveFTPEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.PassImageSaveFTPEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.LogInfo.PassImageSaveFTPEnable.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Save Original Image To HDD" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPMIResultDataSaveOriginalImageToHDD"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.LogInfo.OriginalImageSaveHDDEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>

                    <!-- Directory Settings -->
                    <TabControl Margin="10 " Background="Transparent" BorderThickness="2.5" BorderBrush="#FFE8E8E8" Visibility="{Binding GPVisibility}">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter>
                                                <ContentPresenter.Content>
                                                    <Label x:Name="txtBlock" Style="{StaticResource ContentLabel}" Content="{TemplateBinding Content}" Foreground="Black" Padding="0"/>
                                                </ContentPresenter.Content>
                                            </ContentPresenter>

                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}" Value="True">
                                                    <Setter TargetName="txtBlock" Property="Foreground" Value="DodgerBlue"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>

                        <!-- FTP Settings -->
                        <TabItem Header="FTP Folder" Width="180">
                            <StackPanel Margin="10 0">
                                <Grid Margin="12 4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="8*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Host Address" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFTPHostAddress"
                                             Grid.Row="0" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.FTPHostAddress.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.FTPHostAddress"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="User ID" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFTPUserID"
                                             Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.FTPUserID.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.FTPUserID"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="2" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Password" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFTPPassword"
                                             Grid.Row="2" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.FTPPassword.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.FTPPassword"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="3" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Log Path" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFTPLogPath"
                                             Grid.Row="3" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.LogPath.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.LogPath"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="4" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Fail Image Path" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFTPFailImagePath"
                                             Grid.Row="4" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.FailImagePath.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.FailImagePath"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="5" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pass Image Path" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMIFTPPassImagePath"
                                             Grid.Row="5" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.PassImagePath.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.PassImagePath"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </StackPanel>
                        </TabItem>

                        <!-- Network Drive Settings -->
                        <TabItem AutomationProperties.AutomationId="tiPMINetworkDrive"
                                 Header="Network Drive" Width="180">
                            <StackPanel Margin="10 0">
                                <Grid Margin="12 4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="8*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Network Drive Address" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox AutomationProperties.AutomationId="txtPMINetworkDriveDirectory"
                                             Grid.Row="0" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.NetworkDriveDirectory.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.NetworkDriveDirectory"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>


                                    <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Log Path" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.LogPath.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.LogPath"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="2" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Fail Image Path" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.FailImagePath.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.FailImagePath"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Label Grid.Row="3" Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pass Image Path" Margin="0 0 0 8" Height="30" FontSize="18"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.FTPInfo.PassImagePath.Value}" Height="30" FontSize="18">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.FTPInfo.PassImagePath"
                                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.StringTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </StackPanel>
            </TabItem>

            <!-- Fail Code -->
            <TabItem AutomationProperties.AutomationId="tiPMIFailCode"
                     Header="Fail Code">
                <StackPanel>
                    <!-- Fail Code Options -->
                    <GroupBox Header="Fail Code Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="10">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="No Probe Mark" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeNoProbeMark"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableNoProbeMark.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableNoProbeMark.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableNoProbeMark.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Too Close to Edge" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeTooCloseToEdge"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBondEdge.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBondEdge.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBondEdge.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Too Small Probe Mark Area" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeTooSmallProbeMarkArea"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableSmallMarkArea.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableSmallMarkArea.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableSmallMarkArea.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Too Big Probe Mark Area" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeTooBigProbeMarkArea"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBigMarkArea.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBigMarkArea.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBigMarkArea.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Too Small Probe Mark Size" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeTooSmallProbeMarkSize"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableSmallMarkSize.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableSmallMarkSize.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableSmallMarkSize.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Too Big Probe Mark Size" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeTooBigProbeMarkSize"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBigMarkSize.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBigMarkSize.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBigMarkSize.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Too Many Probe Mark" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeTooManyProbeMark"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableMarkCntOver.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableMarkCntOver.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableMarkCntOver.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Ball Bump Dent Over Tolerance" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFailCodeBallBumpDentOverTolerance"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBallBumpDent.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Enable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBallBumpDent.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource TrueValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Disable"
                                            IsChecked="{Binding PMIDevParm.FailCodeInfo.FailCodeEnableBallBumpDent.Value, Converter={StaticResource ComparisonConve}, ConverterParameter={StaticResource FalseValue}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>

            <!-- Trigger -->
            <TabItem Header="Trigger">
                <StackPanel>
                    <GroupBox Header="Trigger Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="10">

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="400"/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Every X wafers within a lot" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMITriggerEveryXWafersWithinAlot"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.TriggerComponent.EveryWaferInterval.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="400"/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="X wafers per lot, evenly distributed" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMITriggerXWafersPerLot"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.TriggerComponent.TotalNumberOfWafersToPerform.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="400"/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="By touchdown count (within wafer)" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPMITriggerByTouchDownCount"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.TriggerComponent.TouchdownCountInterval.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="450"/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="After Wafer Processed" />
                                <Grid Grid.Column="1">

                                    <ComboBox Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.TriggerComponent.ExecuteAfterWaferProcessed.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>
                                </Grid>
                            </Grid>

                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>

            <!-- Advanced -->
            <TabItem AutomationProperties.AutomationId="tiPMIAdvanced"
                     Header="Advanced">
                <StackPanel>
                    <!-- Pad Grouping Options -->
                    <GroupBox Header="Pad Grouping Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="1">

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Grouping Method" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbPadGroupingMethod"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              ItemsSource="{Binding Source={StaticResource getDataFromGroupingMethod}}"
                                              SelectedItem="{Binding PMIDevParm.PadGroupingMethod.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    <!--<RadioButton Grid.Column="0" Style="{StaticResource DefaultRadioButton}" Content="Multi"
                                            IsChecked="{Binding PadGroupingMethod.Value, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Multi}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>
                                    
                                    <RadioButton Grid.Column="1" Style="{StaticResource DefaultRadioButton}" Content="Single"
                                            IsChecked="{Binding PadGroupingMethod.Value, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Single}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding RadioButtonClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </RadioButton>-->

                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10" Visibility="{Binding PMIDevParm.PadGroupingMethod.Value, Converter={StaticResource GroupingMarginVisibilityConv}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Grouping Margin" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtPadGroupingMargin"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadGroupingMargin.Value}">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.PadGroupingMargin"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <!--<Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Edge Blocking Value" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadEdgeBlockingValue.Value}">
                                        -->
                            <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.PadEdgeBlockingValue"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                            <!--
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="um"/>
                                </Grid>
                            </Grid>-->
                        </StackPanel>
                    </GroupBox>

                    <!-- Pad Find Options -->
                    <GroupBox Header="Pad Find Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="1">

                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Find Pad" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox AutomationProperties.AutomationId="cmbFindPad"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.SearchPadEnable.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Find Margin X" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">

                                    <TextBox AutomationProperties.AutomationId="txtFindPadMarginX"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadFindMarginX.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>

                                <Label Grid.Column="2" Style="{StaticResource ContentLabel}" Content="Pad Find Margin Y" />

                                <Grid Grid.Column="3" Margin="20 0 0 0">

                                    <TextBox AutomationProperties.AutomationId="txtFindPadMarginY"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadFindMarginY.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                                
                            </Grid>

                            <Grid Margin="0 0 0 10">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Mark align trigger offset X" />

                                <Grid Grid.Column="1" Margin="20 0 0 0">

                                    <TextBox AutomationProperties.AutomationId="txtMarkAlignTriggerOffsetX"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MarkAlignTriggerToleranceUsingPadOffsetX.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>

                                <Label Grid.Column="2" Style="{StaticResource ContentLabel}" Content="Mark align trigger offset Y" />

                                <Grid Grid.Column="3" Margin="20 0 0 0">

                                    <TextBox AutomationProperties.AutomationId="txtMarkAlignTriggerOffsetY"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MarkAlignTriggerToleranceUsingPadOffsetY.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>

                            </Grid>
                            <!--<Grid Margin="0 0 0 10">
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Find Margin X" />
                                
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBox Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadFindMarginX.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Find Margin Y" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadFindMarginY.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Pad Find Margin Y" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.PadFindMarginY.Value}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>-->

                        </StackPanel>
                    </GroupBox>

                    <!-- Probe Mark Filtering Options -->
                    <GroupBox Header="Probe Mark Filtering Options" Style="{StaticResource DefaultGroupBox}">
                        <StackPanel Margin="1">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Maximum Detect Mark Count" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtMaximumDetectMarkCount"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MaximumBlobMarkCnt.Value}">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.MaximumBlobMarkCnt"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Minimum Mark Noise Size X" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtMinimumMarkNoiseSizeX"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MinMarkNoiseSizeX.Value}" Grid.Column="0">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.MinMarkNoiseSizeX"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="um"/>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Minimum Mark Noise Size Y" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtMinimumMarkNoiseSizeY"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MinMarkNoiseSizeY.Value}" Grid.Column="0">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.MinMarkNoiseSizeY"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="um"/>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Minimum Mark Noise Area" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtMinimumMarkNoiseArea"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MinMarkNoiseArea.Value}" Grid.Column="0">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.MinMarkNoiseArea"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="um^2"/>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Overlap Percent of Tolerance X" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtOverlapPercentOfToleranceX"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MarkOverlapPercentOfToleranceX.Value}" Grid.Column="0">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="%"/>
                                </Grid>
                            </Grid>

                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Overlap Percent of Tolerance Y" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox AutomationProperties.AutomationId="txtOverlapPercentOfToleranceY"
                                             Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.MarkOverlapPercentOfToleranceY.Value}" Grid.Column="0">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="%"/>
                                </Grid>
                            </Grid>
                            
                        </StackPanel>
                    </GroupBox>

                    <!-- Ball Bump Options -->
                    <GroupBox Header="Ball Bump Options" Style="{StaticResource DefaultGroupBox}" Visibility="Collapsed">
                        <StackPanel Margin="10">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2.5*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Ball Bump Dent Tolerance" />
                                <Grid Grid.Column="1" Margin="20 0 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.4*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.6*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Style="{StaticResource ContentTextBox}" Text="{Binding PMIDevParm.BallBumpDentTolerance.Value}" Grid.Column="0">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource MulitCommandParameterConverter}">
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                            <Binding Path="DataContext.PMIDevParm.BallBumpDentTolerance"
                                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.DecimalTextBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:CustomDialog}}}" 
                                                                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <Label Grid.Column="1" Style="{StaticResource ContentLabel}" Content="um"/>
                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <!-- Display Options -->
                            <GroupBox Header="Display Options" Style="{StaticResource DefaultGroupBox}" >

                                <StackPanel Margin="1">
                                    <Grid Margin="0 0 0 10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Display Pad Position" />
                                        <Grid Grid.Column="1" Margin="20 0 0 0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.5*"/>
                                            </Grid.ColumnDefinitions>

                                            <ComboBox AutomationProperties.AutomationId="cmbDisplayPadPosition"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.DisplayPadDuringPMI.Value}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <ComboBox.Items>
                                                    <System:Boolean>True</System:Boolean>
                                                    <System:Boolean>False</System:Boolean>
                                                </ComboBox.Items>

                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                            </ComboBox>

                                        </Grid>
                                    </Grid>

                                    <Grid Margin="0 0 0 10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Display Mark Position" />
                                        <Grid Grid.Column="1" Margin="20 0 0 0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.5*"/>
                                            </Grid.ColumnDefinitions>

                                            <ComboBox AutomationProperties.AutomationId="cmbDisplayMarkPosition"
                                              Margin="0,4,0,4"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.DisplayMarkDuringPMI.Value}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <ComboBox.Items>
                                                    <System:Boolean>True</System:Boolean>
                                                    <System:Boolean>False</System:Boolean>
                                                </ComboBox.Items>

                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                            </ComboBox>

                                        </Grid>
                                    </Grid>
                                </StackPanel>
                            </GroupBox>
                        </Grid>

                        <Grid Grid.Column="1">
                            <GroupBox Header="Processing Options" Style="{StaticResource DefaultGroupBox}" >

                                <Grid>
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Label Grid.Column="0" Style="{StaticResource ContentLabel}" Content="Skip processing" />

                                    <ComboBox AutomationProperties.AutomationId="cmbDisplayPadPosition"
                                              Grid.Column="1"
                                              Margin="0,4,0,4"
                                              Height="33"
                                              Style="{x:Null}"
                                              VerticalContentAlignment="Center"
                                              HorizontalContentAlignment="Center"
                                              Foreground="Black"
                                              Background="Black"
                                              FontSize="20"
                                              FontWeight="Bold"
                                              SelectedValue="{Binding PMIDevParm.SkipProcessing.Value}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnabledDisabledToBooleanConv}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Items>
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox.Items>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ComboBox>

                                </Grid>

                            </GroupBox>
                        </Grid>

                    </Grid>
                    
                </StackPanel>
            </TabItem>

            <!-- End Of TabItems -->
        </TabControl>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--<Button Grid.Column="2" Style="{StaticResource DefaultButton}" Content="SAVE"
                        Command="{Binding CmdMaunalInputContolSaveClick}"/>-->
            <Button AutomationProperties.AutomationId="btnEXIT"
                    Grid.Column="3" Style="{StaticResource DefaultButton}" Content="EXIT"
                    Command="{Binding CmdMaunalInputContolExitClick}"/>
        </Grid>
    </Grid>
</dialogs:CustomDialog>
