<dialogs:CustomDialog x:Class="EdgeIndexAlignAdvanceSetup.View.EdgeIndexAlignAdvanceSetupView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                      xmlns:local="clr-namespace:EdgeIndexAlignAdvanceSetup.View"
                      xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:System="clr-namespace:System;assembly=mscorlib"
                      xmlns:iwaenum="clr-namespace:ProberInterfaces.WaferAlignEX.Enum;assembly=ProberInterfaces"   
                      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                      mc:Ignorable="d" >
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <Style x:Key="DefaultButton" TargetType="Button">
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="FontSize" Value="18" />
                </Style>
                <local:IndexAlignEnableConverter x:Key="IAEnalbeConverter"/>
                <Style x:Key="RadioButton" TargetType="RadioButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <BulletDecorator Background="White">
                                    <BulletDecorator.Bullet>
                                        <Grid Width="15"
                                                Height="15">
                                            <Ellipse x:Name="Border"
                                                    StrokeThickness="1">
                                                <Ellipse.Stroke>
                                                    <LinearGradientBrush EndPoint="0.5,1"
                                                                        StartPoint="0.5,0">
                                                        <GradientStop Color="DimGray"
                                                                        Offset="0" />
                                                        <GradientStop Color="DimGray"
                                                                        Offset="1" />
                                                    </LinearGradientBrush>
                                                </Ellipse.Stroke>
                                                <Ellipse.Fill>
                                                    <LinearGradientBrush StartPoint="0,0"
                                                                        EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="White" />
                                                                <GradientStop Color="White"
                                                                            Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                            <Ellipse x:Name="CheckMark"
                                                    Margin="3"
                                                    Visibility="Collapsed">
                                                <Ellipse.Fill>
                                                    <SolidColorBrush Color="MediumPurple" />
                                                </Ellipse.Fill>
                                            </Ellipse>
                                        </Grid>
                                    </BulletDecorator.Bullet>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unchecked" />
                                            <VisualState x:Name="Indeterminate" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter Margin="4,0,0,4"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                                </BulletDecorator>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                
            </ResourceDictionary>

        </Grid.Resources>


        <Grid.RowDefinitions>
            <RowDefinition Height="3*" MinHeight="20" />
            <RowDefinition Height="3*" MinHeight="40"/>
            <RowDefinition Height="1*" MinHeight="40"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">

            <TabControl SelectedIndex="{Binding TabIndex}">
                <TabItem Header="Standard">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="1" Margin="10" >
                            <RadioButton AutomationProperties.AutomationId="rdoEnable"
                                 x:Name="rb_enalbe" IsChecked="{Binding IndexAlingEnable, Mode=TwoWay, Converter={StaticResource IAEnalbeConverter}, ConverterParameter={x:Static iwaenum:EnumWASubModuleEnable.ENABLE}}"
                                 Foreground="Black" Content="Enable Edge Index Alignment." FontSize="24" GroupName="cbGroup" VerticalContentAlignment="Center" Style="{StaticResource RadioButton}"/>
                            <RadioButton AutomationProperties.AutomationId="rdoDisable"
                                 x:Name="tb_disable" IsChecked="{Binding IndexAlingEnable, Mode=TwoWay, Converter={StaticResource IAEnalbeConverter}, ConverterParameter={x:Static iwaenum:EnumWASubModuleEnable.DISABLE}}"
                                 Foreground="Black" Content="Disable Edge Index Alignment."  FontSize="24" GroupName="cbGroup" VerticalContentAlignment="Center" Style="{StaticResource RadioButton}"/>
                        </StackPanel>
                    </Grid>
                    
                </TabItem>
                <TabItem Header="Advanced">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Label  Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Content="Position Tolerance&#x0a;between wafer center to target die" Foreground="Black" FontSize="24" Padding="4" />
                        <TextBox Grid.Column="1" Grid.Row="1"
                                 Text="{Binding PositionToleranceWCtoTargetdie, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                 FontSize="24" Foreground="Black" 
                                 Style="{DynamicResource ErrorInfoTextBoxStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown" >
                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Hidden" Visibility="{Binding HiddenTabVisibility}">
                    <!-- AllowableRange, Threshold-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <Label  Grid.Column="0" Content="AllowableRange" Foreground="Black" FontSize="24" Padding="4" />
                            <TextBox Grid.Column="1" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                     Text="{Binding AllowableRange, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                     FontSize="24" Foreground="Black"
                                     Style="{DynamicResource ErrorInfoTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding AllowableRangeCommand}"
                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </Grid>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <Label  Grid.Column="0" Content="AlignThreshold" Foreground="Black" FontSize="24" Padding="4" />
                            <TextBox Grid.Column="1" 
                                     Text="{Binding AlignThreshold, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                     FontSize="24" Foreground="Black"
                                     Style="{DynamicResource ErrorInfoTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding ThresholdClickCommand}"
                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </Grid>
                    </Grid>
                </TabItem>

            </TabControl>
        </Grid>

        <Grid Grid.Row="2" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Button AutomationProperties.AutomationId="btnOK"
                    Grid.Column="2" Style="{StaticResource DefaultButton}" Content="OK"
                    Command="{Binding CmdOKClick}"/>
            <Button AutomationProperties.AutomationId="btnCancel"
                    Grid.Column="3" Style="{StaticResource DefaultButton}" Content="CANCEL"
                    Command="{Binding CmdCancelClick}"/>
        </Grid>
    </Grid>
</dialogs:CustomDialog>
