<UserControl x:Class="ManualJogView.UCStageButtons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="720" Background="Transparent" >
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />-->

                <!-- Material Design -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.deeporange.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <!-- Material Design: MahApps Compatibility -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Flyout.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="JogButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="19"></Setter>
                <Setter Property="FontFamily" Value="NanumGothic"></Setter>
                <Setter Property="Margin" Value="4"></Setter>
                <Setter Property="MinHeight" Value="36"></Setter>
                <Setter Property="MinWidth" Value="48"></Setter>
                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
            </Style>
            <Style x:Key="ManualButtonStyle"  TargetType="Button">
                <Setter Property="MinWidth" Value="64"/>
                <Setter Property="MinHeight" Value="48"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="8,0"/>
            </Style>
            <vc:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Visible" False="Collapsed"/>

        </ResourceDictionary>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        </Grid.Resources>
        <UniformGrid Columns="3" Rows="4">

            <Button AutomationProperties.AutomationId="btnMoveToBack"
                    Margin="4" Style="{StaticResource ManualButtonStyle}"
                    Background="Gray" FontSize="15" 
                    FontWeight="Bold" 
                    Command="{Binding MoveToBackCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}">
                <TextBlock Text="Move&#10;To Back" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnMoveToCenter"
                    Margin="4" 
                    Background="Gray" FontSize="15" 
                    FontWeight="Bold" Style="{StaticResource ManualButtonStyle}"
                    Command="{Binding MoveToCenterCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}"  >
                <TextBlock Text="Move To Center" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnMoveToFront"
                    Margin="4" 
                    Background="Gray" FontSize="15" FontWeight="Bold"
                    Command="{Binding MoveToFrontCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Move&#10;To Front" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnMoveToMark"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4" Command="{Binding MoveToMarkCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Move&#10;To MarkPos" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnMoveToLoadPos"
                    Background="Gray" FontSize="15" FontWeight="Bold"  Margin="4" Command="{Binding MoveToLoadPosCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Move&#10;To LoadPos" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnStageInit"
                    Background="Gray" FontSize="15"   FontWeight="Bold"  Margin="4" Command="{Binding StageMachineInitCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Stage Init" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnLoaderInit"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4"  Command="{Binding LoaderMachineInitCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Loader Init" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnFocusing"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4"  Command="{Binding FocusingCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Focusing" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnRunEdge"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4"  Command="{Binding WaferEdgeExcuteCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Run Edge" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnCCRotLock"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4"  Command="{Binding CCLockRotLockCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="CC&#10;Rot Lock" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnCCRotUnLock"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4"  Command="{Binding CCLockRotUnLockCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="CC&#10;Rot UnLock" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>

            <Button AutomationProperties.AutomationId="btnBernoulliTest"
                    Background="Gray" FontSize="15"   FontWeight="Bold" Margin="4"  Command="{Binding BernoulliTestCommand}"
                    IsEnabled="{Binding StageButtonsVisibility}" Style="{StaticResource ManualButtonStyle}">
                <TextBlock Text="Bernoulli&#10;Test" TextWrapping="Wrap" HorizontalAlignment="Center"/>
            </Button>
            
        </UniformGrid>
        <!--<WrapPanel Grid.Column="0" Margin="4">
            <Button Content="MoveToBack"   Margin="4" 
                Background="Gray" FontSize="15" VerticalContentAlignment="Center"
                HorizontalContentAlignment="Center" Width="160" Height="24" FontWeight="Bold"
                Command="{Binding MoveToBackCommand}"
                IsEnabled="{Binding StageButtonsVisibility}"/>

            <Button   Margin="4" 
                Background="Gray" FontSize="15" VerticalContentAlignment="Center"
                HorizontalContentAlignment="Center" MinWidth="64" MinHeight="64" FontWeight="Bold"
                
                Command="{Binding MoveToCenterCommand}"
                IsEnabled="{Binding StageButtonsVisibility}"  >
                <TextBlock Text="Move To Center" TextWrapping="Wrap" HorizontalAlignment="Center"/>

            </Button>

            <Button Content="MoveToFront"  Margin="4" 
                Background="Gray" FontSize="15" VerticalContentAlignment="Center"
                HorizontalContentAlignment="Center" Width="160" Height="24" FontWeight="Bold"
                Command="{Binding MoveToFrontCommand}"
                IsEnabled="{Binding StageButtonsVisibility}" />
            <Button Content="MoveToMarkPos" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold" Margin="4" Command="{Binding MoveToMarkCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            <Button Content="MoveToLoadPos" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold"  Margin="4" Command="{Binding MoveToLoadPosCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            <Button Content="StageInit" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold"  Margin="4" Command="{Binding StageMachineInitCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            <Button Content="LoaderInit" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold" Margin="4"  Command="{Binding LoaderMachineInitCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            <Button Content="Focusing" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold" Margin="4"  Command="{Binding FocusingCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}" Visibility="Collapsed"/>
            <Button Content="Edge" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold" Margin="4"  Command="{Binding WaferEdgeExcuteCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            <Button Content="CCRotLock" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold" Margin="4"  Command="{Binding WaferEdgeExcuteCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            <Button Content="CCRotUnLock" Background="Gray" FontSize="15" Width="160" Height="24" FontWeight="Bold" Margin="4"  Command="{Binding WaferEdgeExcuteCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
            
        </WrapPanel>-->
        <!--<Border Background="Black" BorderBrush="LightGray" BorderThickness="1.5" Grid.Column="0" Grid.RowSpan="3">
            <StackPanel Margin="0 0 0 0" >

                
            </StackPanel>
        
        </Border>-->

        <!--<Border Background="Black" BorderBrush="LightGray" BorderThickness="1.5" Grid.Column="1" Grid.RowSpan="3">
            <StackPanel>


            </StackPanel>
        </Border>-->

        <Border Background="Black" BorderBrush="LightGray" BorderThickness="1" Grid.Column="1" Margin="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button AutomationProperties.AutomationId="btnMoveToCamPos"
                        Content="MoveToCamPos" Background="LightGray" Width="120" Height="36" FontWeight="Bold" Grid.Row="0"
                        Foreground="Black"
                        Command="{Binding CamMoveCommand}"
                        IsEnabled="{Binding StageButtonsVisibility}"/>
                <ComboBox AutomationProperties.AutomationId="cmbStageCam"
                          Margin="8" ItemsSource="{Binding StageCamList}" Grid.Row="1"
                          DisplayMemberPath="CamType"
                          SelectedValuePath="CamType"
                          SelectedValue="{Binding SelectedCam}"
                          Foreground="WhiteSmoke"
                          Width="96"
                          IsEnabled="{Binding StageButtonsVisibility}"/>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" 
                           HorizontalContentAlignment="Center" 
                           VerticalAlignment="Center">
                        <Grid>
                            <TextBlock Text="Chuck" Foreground="LightGray"
                                           TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontSize="12" FontWeight="Bold"/>
                        </Grid>
                    </Label>
                    
                    <ToggleButton AutomationProperties.AutomationId="tglChuckVacOnOff"
                                  VerticalAlignment="Center" Margin="4"  Grid.Row="0" Grid.Column="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding ChuckVacOnCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding ChuckVacOffCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    
                    <Label Grid.Column="0" Grid.Row="1"
                           HorizontalContentAlignment="Center" 
                           VerticalAlignment="Center">
                        <Grid>
                            <TextBlock Text="Tri" Foreground="LightGray"
                                           TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontSize="12" FontWeight="Bold"/>
                        </Grid>
                    </Label>

                    <ToggleButton AutomationProperties.AutomationId="tglTriUpDown"
                                  VerticalAlignment="Center" Margin="4" Grid.Row="1" Grid.Column="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding TriUPCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding TriDNCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    
                    <Label Grid.Column="0" Grid.Row="2"
                           HorizontalContentAlignment="Center" 
                           VerticalAlignment="Center">
                        <Grid>
                            <TextBlock Text="F_Door" Foreground="LightGray"
                                           TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontSize="12" FontWeight="Bold"/>
                        </Grid>
                    </Label>

                    <ToggleButton AutomationProperties.AutomationId="tglFrontDoorLockUnlock"
                                  VerticalAlignment="Center" Margin="4" Grid.Row="2" Grid.Column="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding FrontDoorLockCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding FrontDoorUnLockCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    
                    <Label Grid.Column="0" Grid.Row="3"
                           HorizontalContentAlignment="Center" 
                           VerticalAlignment="Center">
                        <Grid>
                            <TextBlock Text="W_Door" Foreground="LightGray"
                                           TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontSize="12" FontWeight="Bold"/>
                        </Grid>
                    </Label>

                    <ToggleButton AutomationProperties.AutomationId="tglLoaderDorrOpenClose"
                                  VerticalAlignment="Center" Margin="4" Grid.Row="3" Grid.Column="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding LoaderDoorOpenCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding LoaderDoorCloseCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    
                    <Label Grid.Column="0" Grid.Row="4"
                           HorizontalContentAlignment="Center" 
                           VerticalAlignment="Center">
                        <Grid>
                            <TextBlock Text="C_Door" Foreground="LightGray"
                                           TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontSize="12" FontWeight="Bold"/>
                        </Grid>
                    </Label>

                    <ToggleButton AutomationProperties.AutomationId="tglCardDoorOpenClose"
                                  VerticalAlignment="Center" Margin="4" Grid.Row="4" Grid.Column="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding CardDoorOpenCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding CardDoorCloseCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    
                    <Label Grid.Column="0" Grid.Row="5"
                           HorizontalContentAlignment="Center" 
                           VerticalAlignment="Center">
                        <Grid>
                            <TextBlock Text="ZUPLAMP" Foreground="LightGray"
                                           TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontSize="12" FontWeight="Bold"/>
                        </Grid>
                    </Label>

                    <ToggleButton AutomationProperties.AutomationId="tglZUPLampOpenClose"
                                  VerticalAlignment="Center" Margin="4" Grid.Row="5" Grid.Column="1" IsChecked="{Binding ZUPLampChecked}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding ZUPLampOpenCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding ZUPLampCloseCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    
                </Grid>

            </Grid>
        </Border>

        <Border Background="Black" BorderBrush="LightGray" BorderThickness="1" Grid.Column="2" Margin="4" >

            <StackPanel Grid.Row="0" Orientation="Vertical" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="R:" Foreground="LightCyan" VerticalAlignment="Center" HorizontalContentAlignment="Left" FontSize="15" Margin="4,2,0,0"  Grid.Column="0"/>
                    <TextBox AutomationProperties.AutomationId="txtRPosDist"
                             Background="DimGray" Text="{Binding RPosDist}" Foreground="Black" FontSize="20" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,2,0,0" Width="50" Grid.Column="1"/>
                    <Label Content="°" Foreground="LightCyan" VerticalAlignment="Center" FontSize="20" Margin="4,2,0,0" Grid.Column="2"/>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="T:" Foreground="LightCyan" VerticalAlignment="Center" FontSize="15" Margin="4,2,0,0" Grid.Column="0"/>
                    <TextBox AutomationProperties.AutomationId="txtTTPosDist"
                             Background="DimGray" Text="{Binding TTPosDist}" Foreground="Black" FontSize="20" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,2,0,0" Width="50" Grid.Column="1"/>
                    <Label Content="㎛" Foreground="LightCyan" VerticalAlignment="Center" FontSize="16" Margin="4,2,0,0" Grid.Column="2"/>
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button AutomationProperties.AutomationId="btnTiltMove"
                            Content="TiltMove" Background="LightGray" FontSize="15"  Height="24" FontWeight="Bold" Margin="8" 
                            Command="{Binding TiltMoveCommand}"/>
                    <Button AutomationProperties.AutomationId="btnStartTilt"
                            Content="Start Tilt" Grid.Row="1" Background="LightGray" FontSize="15"  Height="24" FontWeight="Bold" Margin="8" 
                            Command="{Binding AutoTiltCommand}"/>
                    <Button AutomationProperties.AutomationId="btnTiltStop"
                            Content="Stop Tilt" Grid.Row="2" Background="LightGray" FontSize="15"  Height="24" FontWeight="Bold" Margin="8" 
                            Command="{Binding AutoTiltStopCommand}"/>
                </Grid>

                <!--<StackPanel>
                    <Button Content="TiltMove" Background="LightGray" FontSize="15" Width="130" Height="40" FontWeight="Bold" Margin="4,2,0,0" 
                        Command="{Binding TiltMoveCommand}"
                        />
                    -->
                <!--<Button Content="SenSorSetZero" Background="LightGray" FontSize="15" Width="130" Height="40" FontWeight="Bold" Margin="4,2,0,0" 
                        Command="{Binding SensorSetZeroCommand}"
                        />
                    <Button Content="DualLoopOn" Background="LightGray" FontSize="15" Width="130" Height="30" FontWeight="Bold" Margin="4,2,0,0" 
                        Command="{Binding DualLoopOnCommand}"
                        />
                    <Button Content="DualLoopOff" Background="LightGray" FontSize="15" Width="130" Height="30" FontWeight="Bold" Margin="4,2,0,0" 
                        Command="{Binding DualLoopOffCommand}"
                        />-->
                <!--
                </StackPanel>-->
            </StackPanel>

        </Border>
    </Grid>
</UserControl>
