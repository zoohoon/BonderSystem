<UserControl x:Class="ProberViewModel.View.VerifyParam.VerifyParameterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:ProberViewModel.View.VerifyParam"
             mc:Ignorable="d" 
             d:DesignHeight="892" d:DesignWidth="1280" >
    <UserControl.Resources>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Viewbox>
                                    <Grid>
                                        <!--Define size of the Bullet-->
                                        <Polygon Name="TickMark"
                                                Points="4,16 14,28 28,5 12,22 4,16"
                                                Stroke="#FF0092B2"
                                                StrokeThickness="1"
                                                Visibility="Hidden"
                                                Fill="#FF0092B2"
                                                Margin="8">
                                        </Polygon>

                                        <Border CornerRadius="8,0,0,8" BorderBrush="#FF565656" BorderThickness="2" 
                                                />
                                    </Grid>
                                </Viewbox>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <Border Background="#FF565656" CornerRadius="0,3,3,0">
                                <TextBlock Margin="3,1,0,0" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="18"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                                        <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="TickMark" Property="Visibility" Value="Visible"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label Content="Verify Parameter List" FontSize="28"/>
            <Label Grid.Column="1" Content="Enable :" FontSize="20" HorizontalContentAlignment="Right"/>
            <ToggleButton AutomationProperties.AutomationId="tglIsEnable"
                          Grid.Column="2" IsChecked="{Binding IsEnable}" Style="{DynamicResource ON_OFF_ToggleBtn}"/>
            <Button AutomationProperties.AutomationId="btnReLoad"
                    Grid.Column="3" Content="ReLoad" FontWeight="DemiBold" FontSize="18"/>
        </Grid>
        <!--<Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBox Margin="4"/>
            <Button Grid.Column="1" Content="Search" FontWeight="DemiBold" FontSize="18"/>
        </Grid>-->

        <Grid Grid.Column="0" Grid.Row="2">

            <Grid>
                <DataGrid Margin="0,10,0,0" ItemsSource="{Binding ListViewInfos}"
                          SelectedIndex="{Binding SelectedIndex}" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Property Name" Width="400" Binding="{Binding PropertyName}"/>
                        <DataGridTextColumn Header="Description" Width="440" Binding="{Binding Description}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="2" Margin="8,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Foreground="WhiteSmoke" Content="Min Value : " FontSize="32" Padding="0"/>
                    <TextBox AutomationProperties.AutomationId="txtMinValue"
                             Margin="4" Grid.Column="1" Background="WhiteSmoke" Foreground="Black" 
                             Text="{Binding MinValue, Mode=TwoWay}"
                             FontSize="28" VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Foreground="WhiteSmoke" Content="Max Value : " FontSize="32" Padding="0"/>
                    <TextBox AutomationProperties.AutomationId="txtMaxValue"
                             Margin="4" Grid.Column="1" Background="WhiteSmoke" Foreground="Black" 
                             Text="{Binding MaxValue, Mode=TwoWay}"
                             FontSize="28" VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Label Content="(If Min Value and Max Value match, &#10;it is compared to Master Value,&#10;which is a designated value, not a range.)" />
            </StackPanel>

            <GroupBox Grid.Row="1" IsEnabled="False">
                <GroupBox.Header>
                    <TextBlock Text="SETTING VALUE" FontWeight="Bold" Foreground="DarkGray"  Padding="2"/>
                </GroupBox.Header>
                <DataGrid>

                </DataGrid>
            </GroupBox>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.ColumnSpan="2" Margin="0" Content="(Can verify the function through the &#10;'Verify Parameter' button below.)" />
                <Button AutomationProperties.AutomationId="btnVerifyParameter"
                        Grid.Row="1" Margin="2" Content="Verify Parameter" FontWeight="DemiBold" FontSize="18"
                        Command="{Binding ExcuteCommand}"/>
                <Button AutomationProperties.AutomationId="btnSave"
                        Grid.Row="1" Margin="2" Grid.Column="1" Content="SAVE" FontWeight="DemiBold" FontSize="18"
                        Command="{Binding SaveParamCommand}"/>
            </Grid>
        </Grid>

    </Grid>
    <!--<Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label Content="Deveice Parameter List" FontSize="28"/>
            <Button Grid.Column="3" Content="ReLoad" FontWeight="DemiBold" FontSize="18"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBox Margin="4"/>
            <Button Grid.Column="1" Content="Search" FontWeight="DemiBold" FontSize="18"/>
        </Grid>
        
        <Grid Grid.Column="0" Grid.Row="2">
           
            <Grid>
                <DataGrid Margin="0,10,0,0">

                </DataGrid>
            </Grid>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="2" Margin="8,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Foreground="WhiteSmoke" Content="Min Value : " FontSize="32" Padding="0"/>
                    <TextBox Grid.Column="1"/>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Foreground="WhiteSmoke" Content="Max Value : " FontSize="32" Padding="0"/>
                    <TextBox Grid.Column="1"/>
                </Grid>
                <Label Content="(If Min Value and Max Value match, &#10;it is compared to Master Value,&#10;which is a designated value, not a range.)" />
            </StackPanel>

            <GroupBox Grid.Row="1">
                <GroupBox.Header>
                    <TextBlock Text="SETTING VALUE" FontWeight="Bold" Foreground="Yellow"  Padding="2"/>
                </GroupBox.Header>
                <DataGrid>
                    
                </DataGrid>
            </GroupBox>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.ColumnSpan="2" Margin="0" Content="(Can verify the function through the &#10;'Verify Parameter' button below.)" />
                <Button Grid.Row="1" Margin="2" Content="Verify Parameter" FontWeight="DemiBold" FontSize="18"/>
                <Button Grid.Row="1" Margin="2" Grid.Column="1" Content="SAVE" FontWeight="DemiBold" FontSize="18"/>
            </Grid>
        </Grid>
        
    </Grid>-->
</UserControl>
