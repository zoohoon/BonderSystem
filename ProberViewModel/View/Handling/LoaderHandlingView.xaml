<UserControl x:Class="ProberViewModel.LoaderHandlingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProberViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
             mc:Ignorable="d"  x:Name="ucwindow"
             MaxHeight="1080" MaxWidth="1920" Background="#FF1C1C1F">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="/SciChart.Examples.ExternalDependencies;component/Resources/Styles/MergedResources.xaml"/>
                <ResourceDictionary Source="/SciChart.Examples.ExternalDependencies;component/Resources/Styles/ToolbarButtonsCommon.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <vc:SubsStatusToValueConverter x:Key="StatusToColorConv" />
            <vc:StageStateToValueConverter1 x:Key="CellStateColorConv" />
            <vc:EnumWaferStatusTextConverter x:Key="StatusToTextConv" />
            <vc:EnumWaferStatusEnableTextConverter x:Key="StatusToEnableTextConv" />
            <vc:SubstatusEnableColorConverter x:Key="StatusEnableToColorConv" />
            <vc:EnumStageCardStatusTextConverter x:Key="CardStatusToTextConv" />
            <vc:EnumStageCardStateBrushConverter x:Key="CardStateToBrushConv"/>
            <vc:EnumStageWaferStatusTextConverter x:Key="WaferStatusToTextConv" />
            <vc:GPLotStateToStringConverter4 x:Key="BtoVConv" />
            <vc:GPHandlingBtnEnableConverter x:Key="GPHandlingBtnEnableConverter" />
            <vc:ScanStateValueConverter x:Key="ScanStateValueConverter" />
            <vc:EnumGPLoaderWaferStatusTextColorConverter x:Key="EnumGPLoaderWaferStatusTextColorConverter" />
            <vc:EnumSlotTextConverter x:Key="EnumSlotTextConverter" />
            <local:ListViewConverter x:Key="ListViewConverter"/>
            <local:ImageConverter x:Key="ImageConverter"/>
            <local:TransferObjectLabelConverter x:Key="TransferObjectLabelConverter"/>
            <local:FoupLabelColorConverter x:Key="FoupLabelColorConv"/>
            <local:FoupStateLabelTextConverter x:Key="FoupStateLabelTextConv"/>
            

            <local:SlotAutomationIDConverter x:Key="SlotAutomationIDConv"/>
            
            <vc:ListBoxIndexConverter x:Key="ListBoxIndexConv"/>

            <vc:ListBoxIndexConverter2 x:Key="ListBoxIndexConv2"/>
            <vc:GPManualHandlingViewDisableConverter x:Key="GPManualHandlingViewDisableConv" />
            <vc:CassetteTypeConverter x:Key="CassetteTypeConv"/>
            
            <Style x:Key="PieChartListBoxForegroundStyle" TargetType="ListBox">
                <Setter Property="Foreground" Value="#FFDFE0E6"/>
                <Setter Property="Background" Value="DarkGray" />
            </Style>

            <DataTemplate x:Key="OutsideLabelDataTemplate" DataType="s:IPieSegmentViewModel">

                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="14" Foreground="#FFDFE0E6" Text="{Binding Name}"/>
                    <TextBlock 
                               FontSize="14"
                               Foreground="#FFDFE0E6"
                               Text="{Binding Percentage,
                                              StringFormat={}{0:#.##}%}" />
                </StackPanel>

            </DataTemplate>

            <DataTemplate x:Key="InsideLabelDataTemplate" DataType="s:IPieSegmentViewModel">
                <TextBlock FontSize="14"
                           FontWeight="Bold"
                           Foreground="#FF1C1C1F"
                           Text="{Binding Percentage,
                                          StringFormat={}{0:#.##}%}" />
            </DataTemplate>
            <Style x:Key="StatusLabelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="DimGray"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="DimGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Width" Value="96"/>
            </Style>
            <Style x:Key="ModuleNameLabelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid IsEnabled="{Binding loaderModule.LoaderMaster.CurrentModuleState, Converter={StaticResource GPManualHandlingViewDisableConv}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="2" BorderBrush="WhiteSmoke" BorderThickness="0.6"/>
        <Grid Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="280" MinWidth="360">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <!--<RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Vertical">
                <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True" 
                          VerticalAlignment="Stretch"
                    Grid.Row="1"  x:Name="CellListView" 
                          ItemsSource="{Binding Cells}"
                          Background="#FF1C1C1F" 
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                          MinWidth="30" MinHeight="40" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="CellListView"/>
                                        <Binding ElementName="CellListView" Path="SelectedIndex"/>
                                        <Binding ElementName="CellListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                            <!--<Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>-->
                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvStage_{0}}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="3"></UniformGrid>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate >
                            <Border BorderBrush="DimGray" BorderThickness="1" Height="210" VerticalAlignment="Top" Margin="0,0,0,0">
                                <Grid Height="200" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="1.5*" />
                                        <RowDefinition Height="0.9*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                    </Grid.RowDefinitions>
                                    <Rectangle Fill="Transparent">

                                    </Rectangle>
                                    <Label Grid.Row="0" FontSize="15" FontWeight="Bold" HorizontalAlignment="Stretch"  Margin="0,0,0,0"
                                                   VerticalContentAlignment="Center"
                                                  HorizontalContentAlignment="Center"
                                                    BorderThickness="0"
                                                    Content="{Binding StageState}" Width="120"
                                                   Foreground="{Binding StageState, Converter={StaticResource CellStateColorConv}}"
                                                   >
                                    </Label>
                                    <Label Grid.Row="3" FontSize="11" FontWeight="Bold" HorizontalAlignment="Stretch"   Margin="0,0,0,1"
                                                   VerticalContentAlignment="Center" Width="120"
                                                   Style="{StaticResource StatusLabelStyle}"  
                                                  BorderThickness="1"
                                                  >
                                        <Label.Foreground>
                                            <MultiBinding Converter="{StaticResource CardStateToBrushConv}">
                                                <Binding Path="CardStatus"/>
                                                <Binding Path="CardObj.WaferState"/>
                                            </MultiBinding>
                                        </Label.Foreground>
                                        <Label.BorderBrush>
                                            <MultiBinding Converter="{StaticResource CardStateToBrushConv}">
                                                <Binding Path="CardStatus"/>
                                                <Binding Path="CardObj.WaferState"/>
                                            </MultiBinding>
                                        </Label.BorderBrush>
                                        <MultiBinding Converter="{StaticResource CardStatusToTextConv}">
                                            <Binding Path="CardStatus" />
                                            <Binding Path="Progress"/>
                                            <Binding Path="CardObj"/>
                                        </MultiBinding>


                                    </Label>

                                    <Image Grid.Row="1" Stretch="UniformToFill"  Width="64" Height="48">
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/Cell.png" />
                                        </Image.Source>
                                    </Image>

                                    <Label Grid.Row="2" Content="{Binding Name}" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>


                                    <Label Grid.Row="4" FontSize="11" FontWeight="Bold" HorizontalAlignment="Center" VerticalContentAlignment="Center"
                                                   Style="{StaticResource StatusLabelStyle}"  
                                                    BorderThickness="1" Width="120"
                                                   Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                                   BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}">
                                        <MultiBinding Converter="{StaticResource WaferStatusToTextConv}">
                                            <Binding Path="WaferStatus" />
                                            <Binding Path="Progress"/>
                                            <Binding Path="WaferObj"/>
                                        </MultiBinding>
                                    </Label>



                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                        HorizontalAlignment="Stretch" x:Name="BufferListView"  
                          VerticalAlignment="Stretch"
                               ItemsSource="{Binding Buffers}" Background="#FF1C1C1F"
                             local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="30" MinHeight="40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="BufferListView"/>
                                        <Binding ElementName="BufferListView" Path="SelectedIndex"/>
                                        <Binding ElementName="BufferListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvBuffer_{0}}"/>
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--<StackPanel Orientation="Horizontal" />-->
                            <!--<WrapPanel Orientation="Horizontal"></WrapPanel>-->
                            <UniformGrid Columns="6"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="DimGray" BorderThickness="1" Height="175">
                                <Grid Height="175" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1.6*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <Image Width="48" Height="50" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/Buffer.png"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Grid.Row="1"  Content="{Binding Name}" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label   Grid.Row="2"  FontSize="12" VerticalContentAlignment="Center"
                                             Style="{StaticResource StatusLabelStyle}" Margin="2" Width="Auto" HorizontalAlignment="Stretch">
                                        <Label.Content>
                                            <MultiBinding Converter="{StaticResource StatusToEnableTextConv}">
                                                <Binding Path="WaferStatus" />
                                                <Binding Path="Enable" />
                                            </MultiBinding>
                                        </Label.Content>
                                        <Label.Foreground>
                                            <MultiBinding Converter="{StaticResource StatusEnableToColorConv}">
                                                <Binding Path="WaferStatus" />
                                                <Binding Path="Enable" />
                                            </MultiBinding>
                                        </Label.Foreground>
                                        <Label.BorderBrush>
                                            <MultiBinding Converter="{StaticResource StatusEnableToColorConv}">
                                                <Binding Path="WaferStatus" />
                                                <Binding Path="Enable" />
                                            </MultiBinding>
                                        </Label.BorderBrush>
                                    </Label>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <!--<ListView Grid.Row="1" x:Name="CardBufferListView" ItemsSource="{Binding CardBuffers}" 
                      Background="#FF2C2C2F" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      MinWidth="30" MinHeight="40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="CardBufferListView"/>
                                        <Binding ElementName="CardBufferListView" Path="SelectedIndex"/>
                                        <Binding ElementName="CardBufferListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            -->
                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                <!--
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>

                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="4"></UniformGrid>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="DimGray" BorderThickness="1" Height="158" VerticalAlignment="Top">
                                <Grid  Height="140" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1.6*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Image Width="92" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/Cardbuffer.PNG"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Grid.Row="1"  Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label   Grid.Row="2"  Width="120" Style="{StaticResource StatusLabelStyle}" 
                                         Content="{Binding WaferStatus}"
                                         Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                         BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>-->
                <StackPanel Orientation="Horizontal">
                    <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                        HorizontalAlignment="Center" x:Name="ArmListView" 
                               ItemsSource="{Binding Arms}" Background="#FF1C1C1F" 
                               local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto" MinWidth="24" MinHeight="40" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                            <Binding ElementName="ArmListView"/>
                                            <Binding ElementName="ArmListView" Path="SelectedIndex"/>
                                            <Binding ElementName="ArmListView" Path="SelectedItem"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                                <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvArm_{0}}"/>
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                                <!--<WrapPanel Orientation="Horizontal"></WrapPanel>-->
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DimGray" BorderThickness="1" Height="175">
                                    <Grid  Height="175" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1.6*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Image Width="58" Height="48" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                                            <Image.Source>
                                                <BitmapImage UriSource="./Resources/Arm.png"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Grid.Row="1"  Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                        <Label  Grid.Row="2" FontSize="14"  Style="{StaticResource StatusLabelStyle}" Margin="4" 
                                            Content="{Binding WaferStatus}" VerticalAlignment="Center"
                                            Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                            BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"   
                        HorizontalAlignment="Center" x:Name="PAListView" 
                               ItemsSource="{Binding PAs}" Background="#FF1C1C1F" 
                              local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="30" MinHeight="40">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                            <Binding ElementName="PAListView"/>
                                            <Binding ElementName="PAListView" Path="SelectedIndex"/>
                                            <Binding ElementName="PAListView" Path="SelectedItem"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                                <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvPA_{0}}"/>
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                                <!--<WrapPanel Orientation="Horizontal"></WrapPanel>-->
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DimGray" BorderThickness="1" Height="175">
                                    <Grid Height="175" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1.6*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Image Width="52" Height="48" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                                            <Image.Source>
                                                <BitmapImage UriSource="./Resources/PA.png"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Grid.Row="1"  Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                        <Label  Grid.Row="2"  Grid.Column="0" FontSize="14" Margin="4"   Style="{StaticResource StatusLabelStyle}" VerticalAlignment="Center"
                                         >
                                            <Label.Content>
                                                <MultiBinding Converter="{StaticResource StatusToEnableTextConv}">
                                                    <Binding Path="WaferStatus" />
                                                    <Binding Path="Enable" />
                                                </MultiBinding>
                                            </Label.Content>
                                            <Label.Foreground>
                                                <MultiBinding Converter="{StaticResource StatusEnableToColorConv}">
                                                    <Binding Path="WaferStatus" />
                                                    <Binding Path="Enable" />
                                                </MultiBinding>
                                            </Label.Foreground>
                                            <Label.BorderBrush>
                                                <MultiBinding Converter="{StaticResource StatusEnableToColorConv}">
                                                    <Binding Path="WaferStatus" />
                                                    <Binding Path="Enable" />
                                                </MultiBinding>
                                            </Label.BorderBrush>
                                        </Label>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </StackPanel>


            </StackPanel>
            <Grid Grid.Row="0" Grid.Column="2" Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" BorderThickness="1" BorderBrush="DimGray" Grid.RowSpan="2"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <Image.Source>
                            <BitmapImage UriSource="./Resources/Buffer.png"/>
                        </Image.Source>
                    </Image>
                    <Label Content="Fixed Trays" FontSize="15" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                </StackPanel>
                <ListView  VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                    Grid.Row="1" HorizontalAlignment="Stretch" x:Name="FTListView" 
                               ItemsSource="{Binding FTs}" Background="#FF1C1C1F" 
                               local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="30" MinHeight="40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="FTListView"/>
                                        <Binding ElementName="FTListView" Path="SelectedIndex"/>
                                        <Binding ElementName="FTListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvFT_{0}}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                            <!--<WrapPanel Orientation="Horizontal" ></WrapPanel>-->
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="DimGray" BorderThickness="1" Height="40"  Width="170">
                                <Grid VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Label  HorizontalAlignment="Center" Content="{Binding Name}"  VerticalAlignment="Center" Padding="4" FontSize="11" FontWeight="Bold" Foreground="White" Width="80" Height="22" Margin="1" />
                                        <Label Grid.Column="1" Style="{StaticResource StatusLabelStyle}" Height="22"
                                                    FontSize="14" Width="80" BorderThickness="0" Margin="1"
                                                    VerticalContentAlignment="Center" Padding="0"
                                                    Content="{Binding WaferStatus}"
                                                    Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                                    BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Border Grid.Row="2" BorderThickness="1" BorderBrush="DimGray" Grid.RowSpan="2"/>

                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,40,0,0">
                    <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <Image.Source>
                            <BitmapImage UriSource="./Resources/Buffer.png"/>
                        </Image.Source>
                    </Image>
                    <Label Content="Inspection Trays" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                </StackPanel>
                <ListView VirtualizingPanel.IsContainerVirtualizable="True" 
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                    Grid.Row="3" HorizontalAlignment="Stretch" x:Name="ITListView" 
                               ItemsSource="{Binding ITs}" Background="#FF1C1C1F"
                               local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="30" MinHeight="40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="ITListView"/>
                                        <Binding ElementName="ITListView" Path="SelectedIndex"/>
                                        <Binding ElementName="ITListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvIT_{0}}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                            <!--<WrapPanel Orientation="Horizontal" ></WrapPanel>-->
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="DimGray" BorderThickness="1" Height="40">
                                <Grid VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Label  HorizontalAlignment="Center" Content="{Binding Name}" FontSize="11" Padding="4" Foreground="White" Width="80" Height="22" Margin="1" />
                                        <Label Grid.Column="1" Style="{StaticResource StatusLabelStyle}" Height="22" Padding="0" 
                                                    FontSize="14" Width="80" BorderThickness="0" Margin="1"
                                                    VerticalContentAlignment="Center"
                                                    Content="{Binding WaferStatus}"
                                                    Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                                    BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" x:Name="FoupListView" 
                      ItemsSource="{Binding Foups}" Background="#FF1C1C1F" VerticalAlignment="Stretch"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedFoup}" 
                      MinWidth="30" MinHeight="40" Height="1000">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvFoup_{0}}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                        <!--<WrapPanel Orientation="Horizontal"></WrapPanel>-->
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="{Binding ScanState, Converter={StaticResource ScanStateValueConverter}}" BorderThickness="1">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ShowFoupStateSettingViewCommand, ElementName=ucwindow}"
                                                                   CommandParameter="{Binding Index}"/>

                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/FOUP.png"/>
                                        </Image.Source>
                                    </Image>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Binding Name}" FontSize="14" FontWeight="Bold" HorizontalAlignment="Left"  VerticalAlignment="Center"
                                           Style="{StaticResource ModuleNameLabelStyle}">
                                            <Label.Foreground>
                                                <MultiBinding Converter="{StaticResource FoupLabelColorConv}">
                                                    <Binding Path="ModuleInfo.FoupModeStatus"/>
                                                    <Binding Path="Enable"/>
                                                </MultiBinding>
                                            </Label.Foreground>
                                            <!--<Label.Content>
                                                <MultiBinding Converter="{StaticResource CassetteTypeConv}">
                                                    <Binding Path="Name"/>
                                                    <Binding Path="CassetteType"/>
                                                </MultiBinding>
                                            </Label.Content>-->
                                        </Label>
                                        <Label Content="{Binding CassetteType}" ContentStringFormat="[{0}]" FontSize="14" HorizontalAlignment="Left"  VerticalAlignment="Center"
                                               Style="{StaticResource ModuleNameLabelStyle}" Grid.Column="1" Foreground="#9370d8" Margin="-40,0,0,0" >
                                            <Label.Visibility>
                                                <MultiBinding Converter="{StaticResource CassetteTypeConv}">
                                                    <Binding Path="CassetteType"/>
                                                    <Binding Path="DataContext.TriggerForStartConfirm" RelativeSource="{RelativeSource AncestorType=ListView}" />
                                                </MultiBinding>
                                            </Label.Visibility>
                                        </Label>
                                        <Label Margin="0" Grid.Row="1" FontSize="12" HorizontalAlignment="Left" Padding="0" Foreground="LightGray">
                                            <Label.Content>
                                                <MultiBinding Converter="{StaticResource FoupStateLabelTextConv}">
                                                    <Binding Path="ModuleInfo.FoupModeStatus"/>
                                                    <Binding Path="Enable"/>
                                                </MultiBinding>
                                            </Label.Content>
                                        </Label>
                                    </Grid>
                                </StackPanel>

                                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" >
                                    <Label Content="State:" FontSize="11" FontWeight="Bold"   VerticalAlignment="Top" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label Content="{Binding State}" FontSize="10" FontWeight="Bold"  VerticalAlignment="Top" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label Content="Scan:" FontSize="11" FontWeight="Bold"   VerticalAlignment="Top" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label Content="{Binding ScanState}" FontSize="10" FontWeight="Bold"  VerticalAlignment="Top"
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                </StackPanel>

                                <Grid Grid.Row="2" Background="#FF1C1C1F" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ListView Grid.Column="0"  HorizontalAlignment="Center" x:Name="SlotListView"  
                                              local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                               ItemsSource="{Binding Slots}" Background="#FF1C1C1F" 
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                                            <Binding ElementName="SlotListView"/>
                                                            <Binding ElementName="SlotListView" Path="SelectedIndex"/>
                                                            <Binding ElementName="SlotListView" Path="SelectedItem"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>

                                            <!--<i:EventTrigger EventName="MouseRightButtonUp">
                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.MouseRightClickCommand, ElementName=ucwindow}" >
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                                            <Binding ElementName="SlotListView"/>
                                                            <Binding ElementName="SlotListView" Path="SelectedIndex"/>
                                                            <Binding ElementName="SlotListView" Path="SelectedItem"/>
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>-->

                                        </i:Interaction.Triggers>

                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                                                <Setter Property="AutomationProperties.AutomationId" 
                                                        Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SlotAutomationIDConv}}"/>
                                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}, Mode=OneWay}"/>-->
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" />
                                                <!--<UniformGrid Columns="1"></UniformGrid>-->
                                                <!--<WrapPanel Orientation="Horizontal"></WrapPanel>-->
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Border  BorderThickness="1" Height="32.7" Width="195">
                                                    <Border.BorderBrush>
                                                        <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusTextColorConverter}">
                                                            <Binding Path="WaferStatus"/>
                                                            <Binding Path="WaferState"/>
                                                        </MultiBinding>
                                                    </Border.BorderBrush>
                                                    <Grid VerticalAlignment="Center">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Label  HorizontalAlignment="Center" Content="{Binding Name}" FontSize="10.5" FontWeight="Bold" Foreground="White" Width="80" Height="22" Margin="1"  />
                                                            <Label  HorizontalAlignment="Center" VerticalContentAlignment="Center" FontSize="12"   Width="80" Height="22" Padding="0"  Margin="0,0,0,0">
                                                                <Label.Foreground>
                                                                    <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusTextColorConverter}">
                                                                        <Binding Path="WaferStatus"/>
                                                                        <Binding Path="WaferState"/>
                                                                    </MultiBinding>
                                                                </Label.Foreground>
                                                                <Label.Content>
                                                                    <MultiBinding Converter="{StaticResource EnumSlotTextConverter}">
                                                                        <Binding Path="WaferStatus"/>
                                                                        <Binding Path="WaferState"/>
                                                                    </MultiBinding>
                                                                </Label.Content>
                                                            </Label>
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid Grid.Row="0" Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0"  Margin="2" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <Image.Source>
                                <BitmapImage UriSource="./Resources/Cardbuffer.png"/>
                            </Image.Source>
                        </Image>
                        <Label Content="Card Buffers" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                    </StackPanel>
                    <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                        Grid.Row="1" x:Name="CardBufferListView" ItemsSource="{Binding CardBuffers}" 
                              local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                      Background="#FF2C2C2F" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Top"
                      MinWidth="30" MinHeight="40">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                            <Binding ElementName="CardBufferListView"/>
                                            <Binding ElementName="CardBufferListView" Path="SelectedIndex"/>
                                            <Binding ElementName="CardBufferListView" Path="SelectedItem"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DimGray" BorderThickness="1" Width="170" Height="40" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0"  Content="{Binding Name}" 
                                           FontSize="11" FontWeight="Bold" Padding="4"  HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                        <Label   Grid.Column="1"  FontSize="14" VerticalContentAlignment="Center"
                                             Style="{StaticResource StatusLabelStyle}" Padding="0"  Width="90" BorderThickness="0" VerticalAlignment="Center">
                                            <Label.Content>
                                                <MultiBinding Converter="{StaticResource StatusToEnableTextConv}">
                                                    <Binding Path="WaferStatus" />
                                                    <Binding Path="Enable" />
                                                </MultiBinding>
                                            </Label.Content>
                                            <Label.Foreground>
                                                <MultiBinding Converter="{StaticResource StatusEnableToColorConv}">
                                                    <Binding Path="WaferStatus" />
                                                    <Binding Path="Enable" />
                                                </MultiBinding>
                                            </Label.Foreground>
                                        </Label>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                <Grid Grid.Row="1" Margin="2" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <Image.Source>
                                <BitmapImage UriSource="./Resources/CardTray.png"/>
                            </Image.Source>
                        </Image>
                        <Label Content="Card Trays" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                    </StackPanel>
                    <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                        Grid.Row="1" 
                           HorizontalAlignment="Stretch" VerticalAlignment="Top" x:Name="CardTrayListView" 
                           ItemsSource="{Binding CardTrays}" Background="#FF2C2C2F" 
                           local:MouseBehaviour.MouseRightButtonUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                           ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="30" MinHeight="40">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                            <Binding ElementName="CardTrayListView"/>
                                            <Binding ElementName="CardTrayListView" Path="SelectedIndex"/>
                                            <Binding ElementName="CardTrayListView" Path="SelectedItem"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                                <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvCardTray_{0}}"/>
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DimGray" BorderThickness="1"  Height="40">
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0"  Content="{Binding Name}" FontSize="11" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}" VerticalAlignment="Center"  />
                                        <Label  Grid.Column="1"  Style="{StaticResource StatusLabelStyle}" Padding="0" FontSize="14" Width="90" BorderThickness="0" VerticalContentAlignment="Center"
                                           Content="{Binding WaferStatus}" VerticalAlignment="Center"
                                           Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </Grid>
                <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                    Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" x:Name="CardArmsListView" Margin="2"
                               ItemsSource="{Binding CardArms}" Background="#FF1C1C1F" 
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="CardArmsListView"/>
                                        <Binding ElementName="CardArmsListView" Path="SelectedIndex"/>
                                        <Binding ElementName="CardArmsListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvCardArm_{0}}"/>
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                Mode=FindAncestor}, Mode=OneWay}"/>-->
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="DimGray" BorderThickness="1" Width="170" >
                                <Grid Height="170" HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1.6*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Image Height="48" Width="128" HorizontalAlignment="Stretch" VerticalAlignment="Center"  >
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/CardHand.PNG"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Grid.Row="1"  Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label  Grid.Row="2"  Grid.Column="0" FontSize="18" Width="160"  Style="{StaticResource StatusLabelStyle}"  
                                           Content="{Binding WaferStatus}"
                                           Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                           BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </Grid>
            <!--<Expander Margin="4,0,0,4" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="4" VerticalAlignment="Bottom" IsExpanded="{Binding OpenStopWaferSet ,Mode=TwoWay}" Visibility="{Binding ExpanderVisibility ,Mode=TwoWay}" Header="{Binding StopWaferSetHeader}">
                <Border BorderBrush="LightGray" BorderThickness="0.5">
                    <StackPanel>
                        -->
            <!--<Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label  Grid.Column="0" FontSize="16" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="{Binding StopWaferSetHeader}" />
                                    <Button Grid.Column="1" HorizontalAlignment="Right" MinHeight="32" MinWidth="48" FontWeight="Bold" Content="{x:Static resources:Resources.Close}" Command="{Binding cmdCloseStopWaferSet}" />
                                </Grid>-->
            <!--
                        <StackPanel Orientation="Horizontal" >
                            <Button  Margin="12, 12, 5, 12" MinHeight="52" Background="YellowGreen" Width="200" FontSize="20" Content="Select All" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding SelectAllBtn.Command}"
                                                   CommandParameter="{Binding SelectAllBtn.CommandParameter}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <Button  Margin="0, 12, 12, 12" MinHeight="52" Background="Silver" Width="200"  Content="Clear All"  FontSize="20">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding ClearAllBtn.Command}"
                                                   CommandParameter="{Binding ClearAllBtn.CommandParameter}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                        </StackPanel>
                        <Border BorderBrush="LightGray" BorderThickness="1" Margin="2">
                            <StackPanel>
                            </StackPanel>
                        </Border>


                    </StackPanel>
                </Border>
            </Expander>-->
        </Grid>

        <Grid Grid.Column="1" Margin="1" MinWidth="64">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="WhiteSmoke" BorderThickness="0.8" Grid.ColumnSpan="2" Grid.RowSpan="6" Margin="4"/>

                <Button AutomationProperties.AutomationId="btnSource"
                        Grid.Row='0' Margin="8" Content="Source" FontWeight="Bold" Height="48"  Command="{Binding TransferSourceClickCommand}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                            <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                            <Binding Path="SourceEnable"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button AutomationProperties.AutomationId="btnTarget"
                        Grid.Row='3' Margin="8" Content="Target" FontWeight="Bold" Height="48" Command="{Binding TransferTargetClickCommand}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                            <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                            <Binding Path="TargetEnable"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <StackPanel Grid.Row="5" >
                    <CheckBox AutomationProperties.AutomationId="cbOCREnable"
                              Margin="10,0,0,0" IsChecked="{Binding loaderModule.GP_ManualOCREnable}" 
                              IsEnabled="{Binding loaderModule.LoaderMaster.CurrentModuleState, Converter={StaticResource BtoVConv}}" Foreground="White">OCR Enable</CheckBox>
                    <Button AutomationProperties.AutomationId="btnTransfer" Content="Transfer" Margin="8" FontWeight="Bold"  MinHeight="48" Command="{Binding TransferCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="TransferEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Button  Content="Transfer" Margin="8" FontWeight="Bold"  MinHeight="48" Command="{Binding TransferCommand}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                    <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                    <Binding Path="TransferEnable"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Label Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Count : " Foreground="White"></Label>
                        <TextBox Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Right" Foreground="Black" FontSize="16" Background="AliceBlue" Width="30" Text="{Binding TestRepeatCnt}"></TextBox>
                        <Label Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Current : " Foreground="White"></Label>
                        <TextBox Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Right" Foreground="White" FontSize="16"  Text="{Binding CurrentCnt}" IsEnabled="False"></TextBox>
                        <Button Grid.Column="4" Content="Repeat Test" Margin="8" FontWeight="Bold"  MinHeight="36" Command="{Binding CardLoadingTestCommand}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                    <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                    <Binding Path="TransferEnable"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="2*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="PinAlign Interval : " Foreground="White"></Label>
                        <TextBox Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Right" Foreground="Black" FontSize="16" Background="AliceBlue" Width="30" Text="{Binding PinAlignIntervalCnt}"></TextBox>
                        <Button Grid.Column="2" Content="Cancel" Margin="8" FontWeight="Bold"  MinHeight="36" Command="{Binding CancelTansfer}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                    <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                    <Binding Path="CancelEnable"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </Grid>-->
                </StackPanel>

                <Grid Grid.Row="1" Margin='4' >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderBrush="WhiteSmoke" BorderThickness="0.6" Margin="4" 
                            Grid.RowSpan="2">

                    </Border>
                    <Image HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="4" Width="48" Height="64" Grid.Row="0"
                               Source="{Binding TransferSource ,Converter={StaticResource ImageConverter}}">
                    </Image>
                    <Label Grid.Row="1" FontSize="18" Foreground="WhiteSmoke" Margin="4"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Content="{Binding TransferSource, Converter={StaticResource TransferObjectLabelConverter}}" 
                           Grid.Column="1"/>
                </Grid>

                <Label Grid.Row="2" Content="↓" FontSize="24" FontWeight="Bold" Foreground="WhiteSmoke" 
                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Grid Grid.Row='4' Margin='4'>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderBrush="WhiteSmoke" BorderThickness="0.6" Margin="4" Grid.RowSpan="2">

                    </Border>
                    <Image HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="4" Width="48" Height="64" Grid.Row="0"
                               Source="{Binding TransferTarget ,Converter={StaticResource ImageConverter}}">
                    </Image>
                    <Label Grid.Row="1" FontSize="18" Foreground="WhiteSmoke" Margin="4"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                               Content="{Binding TransferTarget, Converter={StaticResource TransferObjectLabelConverter}}"/>
                </Grid>
                <Grid Grid.Row="6" Margin="1" VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Height="30">
                        <CheckBox AutomationProperties.AutomationId="cbInformationView"
                                  Margin="10,0,0,0" IsChecked="{Binding ModuleInfoEnable, Mode=TwoWay}" VerticalAlignment="Center"  Foreground="White">Information View</CheckBox>
                        <!--<Label  HorizontalAlignment="Center" FontSize="15" Foreground="White">Elapsed Time:</Label>
                        <Label  HorizontalAlignment="Center" FontSize="15" Foreground="White" Content="{Binding EndTime ,Mode=TwoWay}"></Label>-->
                    </StackPanel>
                </Grid>

            </Grid>
            <Grid Grid.Row="1">
                <Border BorderBrush="WhiteSmoke" BorderThickness="0.8" Grid.RowSpan="1" />
                <StackPanel Orientation="Vertical" Margin="4">
                    <Button AutomationProperties.AutomationId="btnCSTLoad"
                            Grid.Column='0' Content="CST Load" Margin="4,8" FontWeight="Bold" MinHeight="48" Command="{Binding CSTLoadCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="FoupLoadEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button AutomationProperties.AutomationId="btnCSTUnload"
                            Grid.Column='0' Content="CST Unload" Margin="4,8"  FontWeight="Bold" MinHeight="48" Command="{Binding CSTUnloadCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="FoupUnloadEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>

                    </Button>
                    <Button AutomationProperties.AutomationId="btnCSTScan"
                            Grid.Column='0' Content="CST Scan" Margin="4,8"  FontWeight="Bold" MinHeight="48" Command="{Binding CSTScanCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="FoupScanEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <!--<Button Grid.Column='0' Content="Initialize System" IsEnabled="{Binding loaderModule.LoaderMaster.CurrentModuleState, 
                                            Converter={StaticResource BtoVConv}}" Margin="4,8" FontWeight="Bold" MinHeight="48" Command="{Binding InitSysCommand}"/>
                    <Button Grid.Column='0' Content="Homing" IsEnabled="{Binding loaderModule.LoaderMaster.CurrentModuleState, 
                                            Converter={StaticResource BtoVConv}}" Margin="4,8" FontWeight="Bold" MinHeight="48" Command="{Binding HomingSysCommand}"/>-->
                    <Button AutomationProperties.AutomationId="btnCollectAllWafer"
                            Grid.Column='0' Content="Collect All Wafer" Margin="4,8"  FontWeight="Bold" MinHeight="48" Command="{Binding CollectWaferCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="CollectEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button AutomationProperties.AutomationId="btnWaferRefresh"
                            Grid.Column='0' Content="Wafer Refresh" IsEnabled="true" Margin="4,8" FontWeight="Bold" MinHeight="48" Command="{Binding WaferRefreshCommand}"/>
                </StackPanel>

                <!--<Grid Grid.Row="1" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <iop:UcIOPanel IOPorts="{Binding GPIOs}" SearchKeyword="{Binding SearchKeyword}" FilteredPorts="{Binding FilteredPorts, Mode=TwoWay}" Height="400"/>
                    <Grid Grid.Row="1" >4
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="AccountSearch" Margin="0 0 8 0" 
                                         Foreground="WhiteSmoke"
                                         VerticalAlignment="Center" Height="32" Width="32"/>
                        <TextBox materialDesign:HintAssist.Hint="Search" Grid.Column="1"
                         Text="{Binding Path=SearchKeyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         materialDesign:HintAssist.IsFloating="True"
                         Margin="4" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Stretch">
                        </TextBox>
                    </Grid>
                </Grid>-->
            </Grid>
        </Grid>
    </Grid>
</UserControl>
