<UserControl x:Class="ProberViewModel.LoaderTopBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProberViewModel"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:logserv="clr-namespace:LogService;assembly=LogService"
             xmlns:inter="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:conv="clr-namespace:ValueConverters;assembly=ValueConverters" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:cui="clr-namespace:CUI;assembly=CUI"
             mc:Ignorable="d" 
             d:DesignHeight="70" Height="70" MaxHeight="1080" MaxWidth="1920">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <materialDesignConverters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />
            <conv:StageStateToValueConverter x:Key="StateToValueConverter" />
            <conv:SubsStatusToValueConverter x:Key="StatusToColorConv" />
            <conv:StateToColorConverter x:Key="BtoVConv" />
            <conv:LotStateToStringConverter3 x:Key="BtoVConv2"/>
            <conv:IntToStringPlusConverter x:Key="IntToStringPlusConv" />
            <conv:IntToVisibilityConverter x:Key="IntToVisibilityConv" />
            <conv:EventBadgeBackGroundBrushConverter x:Key="EventBadgeBackGroundBrushConv"/>
            <conv:EventBadgeForeGroundBrushConverter x:Key="EventBadgeForeGroundBrushConv"/>
            <conv:ListCountIsZeroConverter x:Key="ListCountIsZeroConverter"/>
            <conv:LampTypeToBrushConverter x:Key="LampTypeToBrushConverter"/>
            <!--<conv:MainMenuStateConverter x:Key="MainMenuStateConverter"/>-->
            <conv:StateToValueTextConverter x:Key="StateToValueTextConverter" />
            <conv:HomeBtnEnabledConverter x:Key="HomeBtnEnabledConv"/>
            <conv:MainMenuEnabledConverter x:Key="MainMenuEnabledConv"/>
            <conv:LoaderMultiEnableConverter x:Key="LoaderStateEnableConverter"/>
            <local:LoderTopBarGemConv x:Key="LoaderTopBarGemConverter"/>
            <local:LoderTopBarGemControlStateConv x:Key="LoderTopBarGemControlStateConverter"/>
            <local:StageStateToValueConverter x:Key="StageStateToValueConverter"/>
            <local:BuzzerStringConverter x:Key="BuzzerStringConverter"/>
            <local:BuzzerTrueConverter x:Key="BuzzerTrueConverter"/>
            <local:BuzzerFalseConverter x:Key="BuzzerFalseConverter"/>
            <local:ChillerActiveToValueConverter x:Key="ChillerActiveConverter"/>
            <local:TempToValueConverter x:Key="TempToValueConverter"/>
            <local:PVToValueConverter x:Key="PVToValueConv"/>

            <conv:ProberStatusToStringConverter x:Key="ProberStatusToStringConv"/>

            <local:SelectedStageIndexToForegrundConvert x:Key="SelectedStageIndexToForegrundConv"/>
            <local:SelectedStageIndexContentConvert x:Key="SelectedStageIndexContentConv"/>

            <ControlTemplate x:Key="ExampleButton" TargetType="{x:Type Button}">
                <Grid>
                    <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="Transparent" BorderThickness="1" x:Name="Border" Margin="26,-15">
                        <ContentPresenter />
                    </Border>
                    <Viewbox Margin="8">
                        <Path Name="SearchIcon" Data="M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M14,21A2,2 0 0,1 12,23A2,2 0 0,1 10,21" 
                              Fill="White"
                              Stretch="Fill"/>
                    </Viewbox>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="Background" Value="Transparent" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="4*"/>
            <!--Cell status-->
            <ColumnDefinition Width="1*"/>
            <!--Card Tray status-->
            <ColumnDefinition Width="0.5*"/>
            <!--Chiller status-->
            <ColumnDefinition Width="0.8*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">

            <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Button AutomationProperties.AutomationId="OpenFlyoutbtn"
                        Command="{Binding OpenFlyout}" Width="60"  Height="60" Margin="2" Padding="0">
                    <StackPanel>

                        <Viewbox Width="34" Height="34" Margin="0,10,0,0">
                            <Canvas Width="24" Height="24">
                                <Path Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" Fill="Black" />
                            </Canvas>
                        </Viewbox>

                        <Label Content="MENU" BorderThickness="0"
                               HorizontalContentAlignment="Center" FontWeight="Bold"
                               Margin="0,-5,0,0" Padding="0" Foreground="Black"/>
                    </StackPanel>
                </Button>
            </Border>

        </Grid>

        <Grid Grid.Column="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">

                <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Label  Style="{x:Null}" Content="MASTER" Foreground="{Binding LoaderMaster.ModuleState.State, Converter={StaticResource StateToValueConverter}}" 
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold"/>
                </Border>

            </Grid>

            <Grid Grid.Row="1">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Label Style="{x:Null}" Content="GEM" Foreground="{Binding GemModule.CommunicationState, Converter={StaticResource LoaderTopBarGemConverter}}" 
                           HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold">
                    </Label>
                </Border>

                <Border Grid.Column="1" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Label Margin="0.1" Foreground="White" FontSize="9" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                        Content="{Binding GemModule.GemCommManager.SecsCommInformData.ControlState, Converter={StaticResource LoderTopBarGemControlStateConverter}}"/>
                </Border>

                
            </Grid>

        </Grid>


        <Border Grid.Column="3" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
            <Grid MinWidth="50" >
                <materialDesign:Badged 
                                        Badge="{Binding LoaderViewModelManager.LoaderLogViewModel.LoaderEventLogUserNotNotifiedCount, Converter={StaticResource IntToStringPlusConv}}" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        BadgeBackground="{Binding LoaderViewModelManager.LoaderLogViewModel.LoaderEventLogUserNotNotifiedCount, Converter={StaticResource EventBadgeBackGroundBrushConv}}" 
                                        BadgeForeground="{Binding LoaderViewModelManager.LoaderLogViewModel.LoaderEventLogUserNotNotifiedCount, Converter={StaticResource EventBadgeForeGroundBrushConv}}" 
                                        BadgePlacementMode="TopRight"
                                        Margin="0,0,0,0"
                                        Padding="0,0,0,0">

                    <Button AutomationProperties.AutomationId="UsedBellDrawerOpenbtn"
                                Command="{Binding UsedBellDrawerOpenCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}" 
                                Margin="-38, -12"
                                Template="{StaticResource ExampleButton}" Height="60" Width="100" 
                                IsEnabled="True" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    </Button>

                    <!--<cui:Button Command="{Binding Path=DataContext.UsedBellDrawerOpenCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                    CommandParameter="{Binding .}"
                                    GUID="5e80ff23-fbc8-4a56-9c31-a5d060397802"
                                    Margin="-38, -12" Lockable="False" 
                            Template="{StaticResource ExampleButton}" Height="60" Width="100" 
                            IsEnabled="True" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    </cui:Button>-->
                    <!--<cui:Button Command="{Binding DrawerOpenCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}" 
                                    GUID="5e80ff23-fbc8-4a56-9c31-a5d060397802"
                                    Margin="-38, -12" Lockable="False"
                            Template="{StaticResource ExampleButton}" Height="60" Width="100" 
                            IsEnabled="True" HorizontalAlignment="Center" VerticalAlignment="Center" >
            </cui:Button>-->
                </materialDesign:Badged>
            </Grid>
        </Border>


        <Grid Grid.Column="1" MinWidth="100">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--<Button
                    Width="50" Height="50" Visibility="Hidden"
                    Command="{Binding BtnClick}">test</Button>-->
            <Border Grid.Row="0"
		            BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="9*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" x:Name="lblCurTime" TextWrapping="Wrap" TextAlignment="Center"
								   VerticalAlignment="Center" HorizontalAlignment="Center"
								   FontSize="20" Foreground="White" FontWeight="Bold"
								   Text="{Binding DateTime.DateTimeStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									Margin="30 0 0 0">
								   <!--Text="{Binding DateTimeStr, StringFormat='{}{0:yyyy/MM/dd HH:mm:ss}'}">-->
                        <TextBlock.Style>
                            <Style BasedOn="{x:Null}"/>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button Grid.Column="1" Margin="0" Opacity="0" PreviewMouseDown="Button_PreviewMouseDown"/>
                </Grid>
            </Border>

            <Border Grid.Row="1"
                    BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">

                <Button AutomationProperties.AutomationId="btnSendWindowKey"
                        Command="{Binding SendWindowsKeyEventCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Button.Template>
                    <TextBlock x:Name="lblVersion" TextWrapping="Wrap" TextAlignment="Center"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"
                                           FontSize="20" Foreground="White" FontWeight="Bold"
                                           Text="{Binding SwVersion, StringFormat='Version : {0}'}">
                                           <!--Text="{Binding DateTime.DateTimeStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">-->
                                           <!--Text="{Binding DateTimeStr, StringFormat='{}{0:yyyy/MM/dd HH:mm:ss}'}">-->
                        <TextBlock.Style>
                            <Style BasedOn="{x:Null}"/>
                        </TextBlock.Style>
                    </TextBlock>
                </Button>
            </Border>


        </Grid>

        <Grid Grid.Column="4">

            <!--<Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>-->

            <Border Grid.Column="0" BorderBrush="#FFd6d9f4" BorderThickness="1" CornerRadius="1"  Margin="1">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2.2*"/>
                        <ColumnDefinition Width="7.8*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" BorderBrush="#FFd6d9f4" BorderThickness="1" Margin="0">
                            <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" 
                                   Content="{Binding LoaderCommunicationManager.SelectedStage.StageInfo.LotData.SetTemp}" 
                                   ContentStringFormat ="SV : {0}℃"
                                   Foreground="LimeGreen" FontSize="18" FontWeight="Bold"/>
                        </Border>

                        <Border Grid.Row="1" BorderBrush="#FFd6d9f4" BorderThickness="1" Margin="0">
                            <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" 
                                   Foreground="LimeGreen" FontSize="18" FontWeight="Bold">
                                <Label.Content>
                                    <MultiBinding Converter="{StaticResource PVToValueConv}">
                                        <Binding Path="LoaderCommunicationManager.SelectedStage"/>
                                        <Binding Path="LoaderCommunicationManager.SelectedStage.StageInfo.PV"/>
                                    </MultiBinding>
                                </Label.Content>
                            </Label>
                        </Border>

                    </Grid>

                    <Grid Grid.Column="1">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5.5*"/>
                                <ColumnDefinition Width="4.5*"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">

                                <Border BorderBrush="#FFd6d9f4" BorderThickness="1" Margin="0">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Left" 
                                               Content="SELECTED CELL #" 
                                               Margin="10,0,0,0"
                                               Foreground="White" FontSize="18" FontWeight="Bold" Width="Auto"/>
                                        <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center"  
                           Content="{Binding LoaderCommunicationManager.SelectedStageIndex, Converter={StaticResource SelectedStageIndexContentConv}}"  
                           Foreground="{Binding LoaderCommunicationManager.SelectedStageIndex, Converter={StaticResource SelectedStageIndexToForegrundConv}}" FontSize="18" FontWeight="Bold"/>
                                    </StackPanel>
                                </Border>

                            </Grid>

                            <Grid Grid.Column="1">

                                <Border BorderBrush="#FFd6d9f4" BorderThickness="1" Margin="0">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Label Style="{x:Null}" 
                                               VerticalAlignment="Center"
                                               VerticalContentAlignment="Center" 
                                               HorizontalAlignment="Center" 
                                               Content="{Binding LoaderCommunicationManager.SelectedStage.StageMode}" Foreground="White" FontSize="18" FontWeight="Bold"/>
                                    </StackPanel>
                                </Border>

                            </Grid>

                        </Grid>

                        <Grid Grid.Row="1">

                            <Border BorderBrush="#FFd6d9f4" BorderThickness="1" Margin="0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Foreground="White" FontSize="18" FontWeight="Bold"
                                           Content="{Binding LoaderCommunicationManager.SelectedStage.StageInfo.LastTitle}"/>
                                </StackPanel>
                            </Border>
                        </Grid>




                    </Grid>
                </Grid>
            </Border>

        </Grid>
        <!--<Grid Grid.Column="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                
                <Border Grid.Row="0" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="1"  Margin="1">
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" 
                           Content="SV : 90℃" Foreground="LimeGreen" FontSize="18" FontWeight="Bold"/>
                </Border>

                <Border Grid.Row="1" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="1"  Margin="1">
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" 
                           Content="PV : 90℃" Foreground="LimeGreen" FontSize="18" FontWeight="Bold"/>
                </Border>

            </Grid>
            
            <Border Grid.Column="1"
                BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="1"  Margin="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="SELECTED CELL #" Foreground="White" FontSize="18" FontWeight="Bold"/>
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" 
                           Content="{Binding LoaderCommunicationManager.SelectedStageIndex, Converter={StaticResource SelectedStageIndexContentConv}}"  
                           Foreground="{Binding LoaderCommunicationManager.SelectedStageIndex, Converter={StaticResource SelectedStageIndexToForegrundConv}}" FontSize="18" FontWeight="Bold"/>
                </StackPanel>
            </Border>
            
            -->
        <!--<Grid Grid.Row="0">
                <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="1"  Margin="1">
                        <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="SELECTED CELL #" Foreground="White" FontSize="18" FontWeight="Bold"/>
                </Border>
            </Grid>

            <Grid Grid.Row="1">
                <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="1"  Margin="1">
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" 
                           Content="{Binding LoaderCommunicationManager.SelectedStageIndex, Converter={StaticResource SelectedStageIndexContentConv}}"  
                           Foreground="{Binding LoaderCommunicationManager.SelectedStageIndex, Converter={StaticResource SelectedStageIndexToForegrundConv}}" FontSize="18" FontWeight="Bold"/>
                </Border>
            </Grid>-->

        <!--<Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2"  Margin="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    -->
        <!--<Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="Stage Num :" Foreground="Gray" FontSize="25" FontWeight="Bold"/>
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{Binding LoaderCommunicationManager.SelectedStageIndex}"  Foreground="Gray" FontSize="25" FontWeight="Bold"/>-->
        <!--

                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="Stage Num :" Foreground="Gray" FontSize="25" FontWeight="Bold"/>
                    <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{Binding LoaderCommunicationManager.SelectedStageIndex}"  Foreground="Gray" FontSize="25" FontWeight="Bold"/>
                    
                </StackPanel>
            </Border>-->
        <!--

        </Grid>-->

        <Grid Grid.Column="5">
            <Border  BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="*"/>-->
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--<TextBlock Text="Stage States" TextWrapping="Wrap" Width="48" Foreground="AntiqueWhite" 
                               VerticalAlignment="Center" TextAlignment="Center" 
                               FontWeight="Bold"/>-->
                    <ItemsControl Grid.Column="0" ItemsSource="{Binding CStartIndex}" >

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="{Binding CellRow}" Margin="1" Height="Auto" HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding }" Foreground="White" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl Grid.Column="1" ItemsSource="{Binding Stages}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Transparent" Margin="1" Width="120" Height="Auto"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="AntiqueWhite" Margin="1">
                                    <Rectangle Fill="{Binding StageState, Converter={StaticResource StageStateToValueConverter}}" Width="Auto" Height="Auto" Stroke="White" />
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl Grid.Column="2" ItemsSource="{Binding CEndIndex}" >

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="{Binding CellRow}" Margin="1" Height="Auto" HorizontalAlignment="Center"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding }" Foreground="White" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="0,0,0,0"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </Grid>


            </Border>
        </Grid>
        <!-- CardTrays -->
        <Grid Grid.Column="6">
            <Border  BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <ItemsControl Grid.Column="0" ItemsSource="{Binding CTStartIndex}" VerticalContentAlignment="Stretch">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="{Binding CardTrayRows}" Margin="1" VerticalAlignment="Stretch"  HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding }" Foreground="White" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0,0,0" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl Grid.Column="1" ItemsSource="{Binding CardTrays}" VerticalContentAlignment="Stretch">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="{Binding CardTrayColumns}" Rows="{Binding CardTrayRows}" Background="Transparent" Margin="1" HorizontalAlignment="Stretch" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="AntiqueWhite" Margin="1">
                                    <Rectangle Fill="{Binding  Converter={StaticResource StatusToColorConv}}" HorizontalAlignment="Stretch" Width="Auto"  Stroke="White" StrokeThickness="0.5" />
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Border>
        </Grid>
        <!-- Chiller -->
        <Grid Grid.Column="7">
            <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--<TextBlock Text="Chiller States" TextWrapping="Wrap" Width="48" Foreground="AntiqueWhite" 
                               VerticalAlignment="Center" TextAlignment="Center" 
                               FontWeight="Bold"/>-->

                    <ItemsControl Grid.Column="0" ItemsSource="{Binding Chillers}" HorizontalAlignment="Right">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="3" Background="Transparent" Margin="1" Width="Auto" Height="Auto" HorizontalAlignment="Right"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="AntiqueWhite" Margin="1">
                                    <!--<Rectangle Fill="{Binding ChillerInfo.CoolantActivate, Converter={StaticResource ChillerActiveConverter}}" Width="30" Height="Auto" Stroke="White"/>-->
                                    <Rectangle Width="30" Height="Auto" Stroke="White">
                                        <Rectangle.Fill>
                                            <MultiBinding Converter="{StaticResource ChillerActiveConverter}">
                                                <Binding Path="CommunicationState"/>
                                                <Binding Path="ChillerInfo.CoolantActivate"/>
                                                <Binding Path="ChillerInfo.IsErrorState"/>
                                            </MultiBinding>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl Grid.Column="1" ItemsSource="{Binding ChillerIconIndex}" >

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="3" Margin="1" Width="30" Height="Auto"  HorizontalAlignment="Right" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding }" Foreground="White" FontSize="12" Margin="5,0,0,0" VerticalAlignment="Center" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl Grid.Column="3" ItemsSource="{Binding Chillers}" >

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Rows="3" Margin="1" Width="Auto" Height="Auto"  HorizontalAlignment="Left"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!--<TextBlock Text="{Binding Converter={StaticResource TempToValueConverter}}" Foreground="White" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>-->
                                <TextBlock Text="{Binding ChillerInfo.ChillerInternalTemp, Converter={StaticResource TempToValueConverter}}" Foreground="White" FontSize="12" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Button AutomationProperties.AutomationId="ChillerPageSwitchingbtn"
                            Grid.ColumnSpan="4" Background="Transparent" 
                            Command="{Binding ChillerPageSwitchingCommand}" Style="{DynamicResource ImageIConBtnStyle}" />
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Column="8">
            <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Button AutomationProperties.AutomationId="Buzzerbtn"
                        Command="{Binding BuzzerCommand}" Width="60" Height="60" Margin="2" Padding="0"  IsEnabled="{Binding GPLoader.IsBuzzerOn}" >

                    <StackPanel>
                        <Grid>
                            <materialDesign:PackIcon Kind="VolumeOff" Grid.Row="1"
                                                         Height="30" Width="30" 
                                                         VerticalAlignment="Stretch" 
                                                         HorizontalAlignment="Stretch"
                                                         VerticalContentAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                          Visibility="{Binding GPLoader.IsBuzzerOn , Converter={StaticResource BuzzerTrueConverter}}">
                            </materialDesign:PackIcon>
                            <materialDesign:PackIcon Kind="VolumeHigh" Grid.Row="1"
                                                         Height="30" Width="30" 
                                                         VerticalAlignment="Stretch" 
                                                         HorizontalAlignment="Stretch"
                                                         VerticalContentAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         Visibility="{Binding GPLoader.IsBuzzerOn , Converter={StaticResource BuzzerFalseConverter}}">
                            </materialDesign:PackIcon>

                        </Grid>
                        <Label Grid.Row="2"
                                        Content="{Binding GPLoader.IsBuzzerOn , Converter={StaticResource BuzzerStringConverter}}" BorderThickness="0"
                                        HorizontalContentAlignment="Center" FontWeight="Bold"
                                        Margin="0" Padding="0" Foreground="Black"/>

                    </StackPanel>

                </Button>
            </Border>
        </Grid>
        <Grid Grid.Column="9">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">

                <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Button AutomationProperties.AutomationId="OpenRecoverybtn"
                            Width="80" Foreground="White"  Command="{Binding OpenRecoveryCommand}">Recovery

                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource LoaderStateEnableConverter}">
                                <Binding Path="LoaderModule.ModuleState"/>
                                <Binding Path="LoaderMaster.ModuleState.State"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                </Border>

            </Grid>

            <Grid Grid.Column="1">

                <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Button AutomationProperties.AutomationId="GoHomeScreenbtn"
                            Command="{Binding GoHomeScreen}" Width="60" Height="60" Margin="2" Padding="0"
                            CommandParameter="{Binding RelativeSource={RelativeSource Self}}">

                        <StackPanel>
                            <materialDesign:PackIcon Kind="Home" Grid.Row="1"
                                                         Height="30" Width="30" 
                                                         VerticalAlignment="Stretch" 
                                                         HorizontalAlignment="Stretch"
                                                         VerticalContentAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         >


                            </materialDesign:PackIcon>

                            <Label Grid.Row="2"
                                        Content="LOT" BorderThickness="0"
                                        HorizontalContentAlignment="Center" FontWeight="Bold"
                                        Margin="0" Padding="0" Foreground="Black"/>

                        </StackPanel>

                    </Button>
                </Border>

            </Grid>

            <Grid Grid.Column="2">

                <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Button AutomationProperties.AutomationId="GoPrevScreenbtn"
                            Command="{Binding GoPrevScreen}" Width="60"  Height="60" Margin="2" Padding="0"
                            CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                        <StackPanel>
                            <materialDesign:PackIcon  Grid.Row="1" Margin="0,-10,0,10"
                                                          Height="30" Width="30" 
                                                          VerticalAlignment="Stretch" 
                                                          HorizontalAlignment="Stretch"
                                                          Kind="UndoVariant">
                                <materialDesign:PackIcon.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform  Angle="180" CenterX="20" CenterY="20" />
                                        <ScaleTransform  ScaleX="-1" CenterX="20" CenterY="20"/>
                                    </TransformGroup>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>

                            <Label Grid.Row="2"
                                        Content="BACK" BorderThickness="0"
                                        HorizontalContentAlignment="Center" FontWeight="Bold"
                                        Margin="0" Padding="0" Foreground="Black"/>
                        </StackPanel>
                    </Button>
                </Border>

            </Grid>

        </Grid>
    </Grid>

    <!--<Grid ShowGridLines="True">
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="496*"/>
            <ColumnDefinition Width="684*"/>
            <ColumnDefinition Width="150*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">

            <Border Grid.Column="1" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                <Button Command="{Binding OpenFlyout}" Width="60"  Height="60" Margin="2" Padding="0">
                    <StackPanel>

                        <Viewbox Width="34" Height="34" Margin="0,10,0,0">
                            <Canvas Width="24" Height="24">
                                <Path Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" Fill="Black" />
                            </Canvas>
                        </Viewbox>

                        <Label Content="MENU" BorderThickness="0"
                               HorizontalContentAlignment="Center" FontWeight="Bold"
                               Margin="0,-5,0,0" Padding="0" Foreground="Black"/>
                    </StackPanel>
                </Button>
            </Border>

        </Grid>
        
        <Border Grid.Column="1" Grid.ColumnSpan="2">
            <Grid ShowGridLines="False">
                <Grid ShowGridLines="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="2*"/>
                        <ColumnDefinition Width="6*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">

                        <TextBlock x:Name="lblCurTime" TextWrapping="Wrap" TextAlignment="Center"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"
                                           FontSize="20" Foreground="White" FontWeight="Bold"
                                           Text="{Binding DateTime.DateTimeStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                           -->
    <!--Text="{Binding DateTimeStr, StringFormat='{}{0:yyyy/MM/dd HH:mm:ss}'}">-->
    <!--
                            <TextBlock.Style>
                                <Style BasedOn="{x:Null}"/>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <Grid Grid.Column="1" ShowGridLines="False">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200*"/>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="100*"/>
                            <ColumnDefinition Width="100*"/>
                            <ColumnDefinition Width="150*"/>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="100*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        -->
    <!-- Stage Status -->
    <!--
                        <Border Grid.RowSpan="2"  Grid.Column="0" BorderBrush="#FFd6d9f4" CornerRadius="2" Margin="1">
                            <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5">
                                        <Label  Style="{x:Null}" Foreground="{Binding LoaderMaster.ModuleState.State, Converter={StaticResource StateToValueConverter}}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="MASTER" FontSize="24" FontWeight="Bold">
                                    </Label>
                                    -->
    <!--<Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{Binding LoaderMaster.Mode}" Foreground="White" FontSize="24" FontWeight="Bold">
                                    </Label>-->
    <!--
                                    </Border>
                                    <Border BorderBrush="#FFd6d9f4" BorderThickness="0.5">
                                        <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="GEM" Foreground="White" FontSize="24" FontWeight="Bold">
                                    </Label>
                        </Border>
                        </StackPanel>
                            </Grid>
                        </Border>
                        -->
    <!--<Border Grid.RowSpan="2"  Grid.Column="1" BorderBrush="#FFd6d9f4"  CornerRadius="2" Margin="1,1,1,1">
                            <Grid>
                                <Ellipse Fill="Gray" Height="60" Width="60" Stroke="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                -->
    <!--<Ellipse x:Name="StatusIndicator" Fill="{Binding LotOPModule.CurrentModuleState, Converter={StaticResource BtoVConv}}" Height="80" Width="80" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
    <!--
                                <Ellipse x:Name="MasterStatusIndicator" Fill="{Binding LoaderMaster.ModuleState.State, Converter={StaticResource StateToValueConverter}}" Height="60" Width="60" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <Ellipse Height="60" Width="60" Stroke="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush GradientOrigin="0.2,0.2" Center="0.2,0.2" RadiusX="0.8" RadiusY="0.8">
                                            <GradientStop Color="#ffffff" Offset="0" />
                                            <GradientStop Color="Transparent" Offset="1" />
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                
                                <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{Binding LoaderMaster.ModuleState.State}" >
                                </Label>
                            </Grid>
                        </Border>-->
    <!--

                        <Border Grid.RowSpan="2"  Grid.Column="2"  Grid.ColumnSpan="2" BorderBrush="#FFd6d9f4" CornerRadius="2" Margin="1" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal">
                                <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="Cur Stage Num :" Foreground="Gray" FontSize="25" FontWeight="Bold"/>
                                <Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{Binding LoaderCommunicationManager.SelectedStageIndex}"  Foreground="Gray" FontSize="25" FontWeight="Bold"/>
                            </StackPanel>
                        </Border>

                        <Border Grid.RowSpan="2"  Grid.Column="4" BorderBrush="#FFd6d9f4"  CornerRadius="2" Margin="1">
                            -->
    <!--<Grid>-->
    <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>-->

    <!--<Button Width="50"></Button>-->
    <!--<UniformGrid Grid.Column="0" Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Black"/>-->

    <!--HorizontalContentAlignment="Stretch" 
                                          VerticalContentAlignment="Stretch"-->
    <!--ItemsSource="{Binding Stages}"-->
    <!--
                                <ListView  x:Name="CellIconListView" ItemsSource="{Binding Stages}" BorderThickness="2"
                                           Width="100"
                                           Height="100"
                                           ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                          ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                                          >

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                        <UniformGrid Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Black" Margin="0"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Rectangle Fill="Gray" Height="20" Width="20" Stroke="Gray" StrokeThickness="1" Margin="0"/>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>

                                    -->
    <!--<ListViewItem>
                                        <TextBlock Text="stuff" />
                                        -->
    <!-- what should I put here??? -->
    <!--
                                    </ListViewItem>-->
    <!--
                                    
                                </ListView>
                                
                                -->
    <!--<UniformGrid Grid.Column="0" Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Black"/>-->


    <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20*"/>
                                </Grid.RowDefinitions>
                                <Rectangle Grid.Row="0" Grid.Column="1" Fill="Gray" Height="20" Width="20" Stroke="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" />-->

    <!--<Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="Loader State" Foreground="White" FontSize="24" FontWeight="Bold">
                                </Label>-->

    <!--</Grid>-->
    <!--
                        </Border>

                        <Border Grid.Column="5" Grid.Row="0" Grid.RowSpan="2" BorderBrush="#FFd6d9f4"  CornerRadius="2" Margin="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="53*"/>
                                    <RowDefinition Height="15*"/>
                                </Grid.RowDefinitions>
                                -->
    <!--<Ellipse Fill="Gray" Height="60" Width="60" Stroke="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
    <!--<Ellipse x:Name="StatusIndicator" Fill="{Binding LotOPModule.CurrentModuleState, Converter={StaticResource BtoVConv}}" Height="80" Width="80" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
    <!--<Ellipse x:Name="StatusIndicator" Fill="{Binding LoaderModule.ModuleState, Converter={StaticResource StateToValueConverter}}" Height="60" Width="60" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->

    <!--<Ellipse Height="60" Width="60" Stroke="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush GradientOrigin="0.2,0.2" Center="0.2,0.2" RadiusX="0.8" RadiusY="0.8">
                                            <GradientStop Color="#ffffff" Offset="0" />
                                            <GradientStop Color="Transparent" Offset="1" />
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>-->
    <!--<Label Style="{x:Null}" VerticalContentAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Content="{Binding LoaderModule.ModuleState}">-->
    <!--<Grid>
                                <TextBlock  FontSize="12" HorizontalAlignment="Center" Text="{Binding LoaderModule.ModuleState , Converter={StaticResource StateToValueTextConverter}}">
                                </TextBlock>
                            </Grid>-->
    <!--</Label>-->
    <!--
                            </Grid>
                        </Border>

                        <Border Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" BorderBrush="#FFd6d9f4"  CornerRadius="2" Margin="1">
                            <Button Width="80" Foreground="White"  Command="{Binding OpenRecoveryCommand}">Recovery

                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource LoaderStateEnableConverter}">
                                        <Binding Path="LoaderModule.ModuleState"/>
                                        <Binding Path="LoaderMaster.ModuleState.State"/>
                                    </MultiBinding>
                                </Button.IsEnabled>
                            </Button>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <Grid Grid.Column="3" ShowGridLines="False">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                -->
    <!--<Border Grid.Column="0" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Button Command="{Binding StageSummaryPageSwitchingCommand}" Width="60" Height="60" Margin="2" Padding="0"
                            CommandParameter="{Binding RelativeSource={RelativeSource Self}}">

                        <StackPanel>
                            <materialDesign:PackIcon Kind="FileDocumentBoxSearch" Grid.Row="1"
                                                         Height="30" Width="30" 
                                                         VerticalAlignment="Stretch" 
                                                         HorizontalAlignment="Stretch"
                                                         VerticalContentAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         >


                            </materialDesign:PackIcon>

                            <Label Grid.Row="2" FontSize="12"
                                        Content="Summary" BorderThickness="0"
                                        HorizontalContentAlignment="Center" FontWeight="Bold"
                                        Margin="0" Padding="0" Foreground="Black"/>

                        </StackPanel>

                    </Button>
                </Border>-->
    <!--
                
                <Border Grid.Column="0" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Button Command="{Binding GoHomeScreen}" Width="60" Height="60" Margin="2" Padding="0"
                            CommandParameter="{Binding RelativeSource={RelativeSource Self}}">

                        <StackPanel>
                            <materialDesign:PackIcon Kind="Home" Grid.Row="1"
                                                         Height="30" Width="30" 
                                                         VerticalAlignment="Stretch" 
                                                         HorizontalAlignment="Stretch"
                                                         VerticalContentAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         >


                            </materialDesign:PackIcon>

                            <Label Grid.Row="2"
                                        Content="LOT" BorderThickness="0"
                                        HorizontalContentAlignment="Center" FontWeight="Bold"
                                        Margin="0" Padding="0" Foreground="Black"/>

                        </StackPanel>

                    </Button>
                </Border>

                <Border Grid.Column="1" BorderBrush="#FFd6d9f4" BorderThickness="0.5" CornerRadius="2" Margin="1">
                    <Button Command="{Binding GoPrevScreen}" Width="60"  Height="60" Margin="2" Padding="0"
                            CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                        <StackPanel>
                            <materialDesign:PackIcon  Grid.Row="1" Margin="0,-10,0,10"
                                                          Height="30" Width="30" 
                                                          VerticalAlignment="Stretch" 
                                                          HorizontalAlignment="Stretch"
                                                          Kind="UndoVariant">
                                <materialDesign:PackIcon.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform  Angle="180" CenterX="20" CenterY="20" />
                                        <ScaleTransform  ScaleX="-1" CenterX="20" CenterY="20"/>
                                    </TransformGroup>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>

                            <Label Grid.Row="2"
                                        Content="BACK" BorderThickness="0"
                                        HorizontalContentAlignment="Center" FontWeight="Bold"
                                        Margin="0" Padding="0" Foreground="Black"/>
                        </StackPanel>
                    </Button>
                </Border>

            </StackPanel>
        </Grid>

    </Grid>-->
</UserControl>
