<UserControl x:Class="CommunicationConnectViewModule.CommunicationConnectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CommunicationConnectViewModule"
             xmlns:stagelistview="clr-namespace:StageListViewModule;assembly=StageListViewModule"
             xmlns:luncherlistview="clr-namespace:LuncherListViewModule;assembly=LuncherListViewModule"
             xmlns:mapview="clr-namespace:MapView;assembly=MapView"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" x:Name="ucWindow"
             d:DesignHeight="1010" d:DesignWidth="1850">
    <UserControl.Resources>
        <vc:CellObjectForeGroundConverter x:Key="CellObjectForeGroundConv"/>
        <local:ConnectContentConverter x:Key="ConnectContentConv"/>
        <local:ConnectButtonEnableConverter x:Key="ConnectEnableConv"/>
       <local:ControlStateToBoolConverter x:Key="ControlStateToBoolConverter"/>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Viewbox>
                                    <Grid>
                                        <!--Define size of the Bullet-->
                                        <Polygon Name="TickMark"
                                                Points="4,16 14,28 28,5 12,22 4,16"
                                                Stroke="#FF0092B2"
                                                StrokeThickness="1"
                                                Visibility="Hidden"
                                                Fill="#FF0092B2"
                                                Margin="8">
                                        </Polygon>

                                        <Border CornerRadius="8,0,0,8" BorderBrush="#FF565656" BorderThickness="2" 
                                                />
                                    </Grid>
                                </Viewbox>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <Border Background="#FF565656" CornerRadius="0,3,3,0">
                                <TextBlock Margin="3,1,0,0" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="18"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                                        <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="TickMark" Property="Visibility" Value="Visible"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions >
        <luncherlistview:LuncherListView Grid.Column="0" DataContext="{Binding LoaderViewModelManager.LuncherListVM}"/>
        <Grid Grid.Column="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" >
                <ListView x:Name="CellListView" ItemsSource="{Binding Stages}" 
                          Grid.Row="0" BorderThickness="2"
                          SelectionMode="Multiple"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                          HorizontalContentAlignment="Stretch" 
                          VerticalContentAlignment="Stretch">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  
                                                   CommandParameter="{Binding ElementName=CellListView, Path=SelectedItems}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>

                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="IsSelected" Value="{Binding StageInfo.IsChecked}" />
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=OneWay}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="3" Rows="4" Background="Black"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="White" BorderThickness="1">
                                <Grid Margin="2" IsEnabled="{Binding StageState, Converter={StaticResource ConnectEnableConv}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="2.5*"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Border BorderBrush="WhiteSmoke" BorderThickness="1"/>
                                    <Label x:Name="StageIndexLB" Margin="0" Content="{Binding Index}" ContentStringFormat="Stage #{0}"
                                       Foreground="{Binding StageInfo.IsExcuteProgram, Converter={StaticResource CellObjectForeGroundConv}}" FontWeight="DemiBold" VerticalContentAlignment="Center" FontSize="20"/>

                                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding Path=DataContext.StageConnectCommand, ElementName=ucWindow}" CommandParameter="{Binding Index}" 
                                            Height="30" Width="40" IsEnabled="{Binding StageState, Converter={StaticResource ConnectEnableConv}}">
                                        <materialDesign:PackIcon Kind="LanConnect" MinWidth="40"   
                                                                     HorizontalAlignment="Stretch" 
                                                                     VerticalAlignment="Stretch"
                                                                     Foreground="{Binding StageInfo.IsConnected, Mode=OneWay, Converter={StaticResource CellObjectForeGroundConv}}"/>
                                        <AutomationProperties.AutomationId>
                                            <MultiBinding StringFormat="StageConnectbtn_{0}">
                                                <Binding Path="Index"/>
                                            </MultiBinding >
                                        </AutomationProperties.AutomationId>
                                    </Button>

                                    <StackPanel Grid.Row="1" Background="Black">
                                        <!-- Auto Connected State -->
                                        <!--<Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.6*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Content="ENABLE AUTO CONNECT" FontSize="16" Margin="0" FontWeight="DemiBold" Foreground="BurlyWood"/>
                                            <ToggleButton Grid.Column="1" Style="{DynamicResource ON_OFF_ToggleBtn}" HorizontalAlignment="Right" Margin="0,0,10,0"
                                                          IsChecked="{Binding StageInfo.EnableAutoConnect, Mode=OneWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.StageAutoConnectEnableCommand, ElementName=ucWindow}" CommandParameter="{Binding Index}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.StageAutoConnectDisableCommand, ElementName=ucWindow}" CommandParameter="{Binding Index}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ToggleButton>
                                        </Grid>-->
                                        <!-- GEM State -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.8*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Content="GEM COMM" FontSize="16" Margin="0" FontWeight="DemiBold" Foreground="BurlyWood"/>
                                            <Label Grid.Column="1" Content="{Binding StageInfo.GemConnState, Converter={StaticResource ConnectContentConv}}" 
                                                   Foreground="{Binding StageInfo.GemConnState, Converter={StaticResource CellObjectForeGroundConv}}"
                                                   FontSize="24" HorizontalContentAlignment="Right" Margin="0,0,10,0"/>
                                        </Grid>
                                        <!-- Chiller State -->
                                        <!--<Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.8*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Content="Chiller COMM" FontSize="16" Margin="0" FontWeight="DemiBold" Foreground="BurlyWood"/>
                                            <Label Grid.Column="1" Content="{Binding StageInfo.ChillerConnState, Converter={StaticResource ConnectContentConv}}" 
                                                   Foreground="{Binding StageInfo.GemConnState, Converter={StaticResource CellObjectForeGroundConv}}"
                                                   FontSize="24" HorizontalContentAlignment="Right" Margin="0,0,10,0"/>
                                        </Grid>-->
                                        <!-- Luncher Index -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.8*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Content="LAUNCHER INDEX" FontSize="16" Margin="0" FontWeight="DemiBold" Foreground="BurlyWood"/>
                                            <Label Grid.Column="1" Content="{Binding LauncherIndex}" FontSize="24"  HorizontalContentAlignment="Right" Foreground="Orange" Margin="0,0,10,0"/>
                                        </Grid>
                                      
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </Grid>
            <Grid Grid.Row="1" VerticalAlignment="Top" Margin="16">
                <StackPanel>
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="btnConnect"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding ConnectCommand}"
                                Content="Connect" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <Button AutomationProperties.AutomationId="btnDisConnect"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding DisConnectCommand}"
                                Content="DisConnect" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                    </StackPanel>

                    <!-- All buttons -->
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="btnConnectGemCell"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding ConnectAllCommand}"
                                Content="Connect all Cells" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <Button AutomationProperties.AutomationId="btnDisConnectGemCell"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding DisConnectAllCommand}"
                                Content="DisConnect all Cells" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                    </StackPanel>

                    <!--<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        --><!--<Button Style="{DynamicResource ControlButtonStyle}" 
                            Command="{Binding CheckedStagesConnectCommand}"
                            Content="Check Connect" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>--><!--
                        <Button Style="{DynamicResource ControlButtonStyle}" 
                            Command="{Binding ConnectCommand}"
                            Content="Connect" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <Button Style="{DynamicResource ControlButtonStyle}" 
                            Command="{Binding DisConnectCommand}"
                            Content="DisConnect" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <Label Content="ALL ENABLE AUTO CONNECT" HorizontalAlignment="Right"/>
                        <ToggleButton AutomationProperties.AutomationId="tglAutoConnect" Style="{DynamicResource ON_OFF_ToggleBtn}" HorizontalAlignment="Right" Margin="0,0,10,0"
                                                          IsChecked="{Binding AllEnableAutoConnFlag, Mode=OneWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding AllStageAutoConnectSetCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding AllStageAutoConnectSetCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ToggleButton>
                    </StackPanel>-->
                    <!--<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="btnStartProgram" Style="{DynamicResource ControlButtonStyle}" 
                            Command="{Binding StartProgramCommand}"
                            Content="Start Prgram" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <Button AutomationProperties.AutomationId="btnExitProgram" Style="{DynamicResource ControlButtonStyle}" 
                            Command="{Binding ExitProgramCommand}"
                            Content="Exit Prgram" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                    </StackPanel>-->
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        <Button AutomationProperties.AutomationId="btnConnectGemCell"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding CellGemConnectCommand}"
                                Content="Connect Gem(CELL)" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <!--<Button AutomationProperties.AutomationId="btnDisConnectGemCell"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding CellGemDisConnectCommand}"
                                Content="DisConnect Gem(CELL)" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>-->
                        <Button AutomationProperties.AutomationId="btnConnectGemLoader"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding LoaderGemConnectCommand}"
                                Content="Connect Gem(LOADER)" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                        <Button AutomationProperties.AutomationId="btnDisConnectGemLoader"
                                Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding LoaderGemDisConnectCommand}"
                                Content="DisConnect Gem(LOADER)" Width="240" Height="54" HorizontalAlignment="Left" Margin="4"/>
                    </StackPanel>
                </StackPanel>

                <!--<Border Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Margin="8"
                        BorderBrush="WhiteSmoke" BorderThickness="1">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Label Content="GEM CONTROL STATE" FontWeight="DemiBold" FontSize="18"/>
                        <RadioButton Grid.Row="1"
                                             VerticalAlignment="Center"
                                             Content="Offline"
                                             Margin="4"
                                             IsChecked="{Binding Gem.GemCommManager.SecsCommInformData.ControlState, 
                                                Converter={StaticResource ControlStateToBoolConverter},
                                                ConverterParameter=EQ_OFFLINE}"
                                             Command="{Binding ChangeControlStateCommand}"
                                             />
                        <RadioButton Grid.Row="2"
                                             VerticalAlignment="Center"
                                             Content="Online Local"
                                             Margin="4"
                                             IsChecked="{Binding Gem.GemCommManager.SecsCommInformData.ControlState, 
                                                Converter={StaticResource ControlStateToBoolConverter},
                                                ConverterParameter=ONLINE_LOCAL}"
                                             Command="{Binding ChangeControlStateCommand}"
                                             />
                        <RadioButton Grid.Row="3"
                                             VerticalAlignment="Center"
                                             Content="Online Remote"
                                             Margin="4"
                                             IsChecked="{Binding Gem.GemCommManager.SecsCommInformData.ControlState, 
                                                Converter={StaticResource ControlStateToBoolConverter},
                                                ConverterParameter=ONLINE_REMOTE}"
                                             Command="{Binding ChangeControlStateCommand}"
                                             />

                    </Grid>
                </Border>-->
            </Grid>
        </Grid>
    </Grid>
</UserControl>
