<dialogs:CustomDialog x:Class="SoakingSettingView.UcSoakingTemplateSaveView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      
             xmlns:local="clr-namespace:SoakingSettingView"
             mc:Ignorable="d"  
              d:DesignHeight="450" d:DesignWidth="800" Height="500">
    
    <dialogs:CustomDialog.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <Style x:Key="HeaderStyle" TargetType="{x:Type Label}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="20"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </dialogs:CustomDialog.Resources>
    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Label x:Name="Title" Style="{StaticResource HeaderStyle}"  Padding="0" Margin="0" Content="{Binding Title}" ContentStringFormat="{}Template Save - {0}" />

        <Border Grid.Row="1" BorderThickness="1" BorderBrush="DimGray" Background="LightGray" CornerRadius="10" Padding="10">
                <local:UcSoakingTemplateSaveList 
                    ItemsSource="{Binding TemplateList, Mode=OneTime}" 
                    SelectedItem="{Binding SelectedTemplate, Mode=TwoWay}" />
            </Border>

        <Border Grid.Row="2" BorderThickness="1" BorderBrush="DimGray" Background="LightGray" CornerRadius="10" Padding="10">
            <Grid Margin="10,0,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>

                <Button Grid.Row="0" Grid.Column="1" Margin="0" Foreground="#000000" FontWeight="Bold" Command="{Binding CmdOverwriteAgree}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="Foreground" Value="#cc0000"/>
                            <Setter Property="Content" Value="Caution: Existing data will be lost. Allow to Click (Click here to agree)"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EnableOverwrite  }" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Foreground" Value="#ffff00"/>
                                    <Setter Property="Content" Value="Caution: Existing data will be lost."/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsOverwrite  }" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Label Grid.Row="1" Grid.Column="0" Foreground="Black" FontSize="15" Margin="0,0,10,0" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Center" >Title :</Label>
                <TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding NewTemplateName, Mode=TwoWay}" 
                                      Name="TemplateName"                        
                                        MaxLines="1"
                                      Margin="0,0,0,0" Padding="0" Height="30" FontSize="20" Style="{x:Null}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown" >
                            <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>

                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0,0,0,5" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsOverwrite}" Value="True" />
                                            <Condition Binding="{Binding EnableOverwrite}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <Hyperlink Command="{Binding CmdOverwriteAgree}" Foreground="Blue" > Caution: Existing data will be lost. Allow to Click (Click here to agree)</Hyperlink>                        
                    </TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0,0,0,5">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">                                
                                <Setter Property="Visibility" Value="Hidden"/>                                
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsOverwrite}" Value="True" />
                                            <Condition Binding="{Binding EnableOverwrite}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>                  
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <Hyperlink Foreground="Red"> Caution: Existing data will be lost </Hyperlink>

                    </TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0,0,0,5">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsOverwrite}" Value="False" />
                                            <Condition Binding="{Binding EnableOverwrite}" Value="False" />
                                            <Condition Binding="{Binding ElementName=TemplateName, Path=Text.Length, Mode=OneWay}" Value="0"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        Please enter a title.

                    </TextBlock>

                    <!--<Button Grid.Row="0" Grid.Column="0" Margin="0" Foreground="#000000" Background="Transparent" FontWeight="Bold" Command="{Binding CmdOverwriteAgree}" 
                            
                            >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Setter Property="Foreground" Value="#cc0000"/>
                                <Setter Property="Content" Value="Caution: Existing data will be lost. Allow to Click (Click here to agree)"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EnableOverwrite  }" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Foreground" Value="#ffff00"/>
                                        <Setter Property="Content" Value="Caution: Existing data will be lost."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOverwrite  }" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>-->
                    <Button Grid.Column="1" Command="{Binding CmdSave}" Margin="0" >Save
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" >
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Background" Value="White"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsOverwrite}" Value="True" />
                                            <Condition Binding="{Binding EnableOverwrite}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=TemplateName, Path=Text.Length, Mode=OneWay}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                
            </Grid>
            
        </Border>
        <Button  Grid.Row="3" Content="Close" Margin="4" FontSize="15" Command="{Binding IDOK}" Width="80" HorizontalAlignment="Right" />
    </Grid>
</dialogs:CustomDialog>
