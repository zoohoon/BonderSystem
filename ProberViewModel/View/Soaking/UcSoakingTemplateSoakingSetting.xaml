<dialogs:CustomDialog x:Class="SoakingSettingView.UcSoakingTemplateSoakingSetting"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:SoakingSettingView"
             mc:Ignorable="d"  
             d:DesignHeight="450" d:DesignWidth="800"  Height="800" x:Name="soakingTemplateSoakingSetting">
    <dialogs:CustomDialog.Style>
        <Style  TargetType="{x:Type dialogs:BaseMetroDialog}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dialogs:BaseMetroDialog}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="DialogShownStoryboard">
                                <DoubleAnimation AccelerationRatio=".9"
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}">
                            <Border FocusVisualStyle="{x:Null}"
                            Focusable="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="0"
                                                Content="{TemplateBinding DialogTop}" />
                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10*" />
                                            <ColumnDefinition Width="80*" />
                                            <ColumnDefinition Width="10*" />
                                        </Grid.ColumnDefinitions>
                                        <!--  Content area  -->
                                        <Grid Grid.Column="1"
                                        Margin="0 10 0 0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0"
                                                FontSize="{DynamicResource DialogTitleFontSize}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Text="{TemplateBinding Title}"
                                                TextWrapping="Wrap" />
                                            <ContentPresenter Grid.Row="1"
                                                        Content="{TemplateBinding Content}" />
                                        </Grid>
                                    </Grid>
                                    <ContentPresenter Grid.Row="2"
                                                Content="{TemplateBinding DialogBottom}" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </dialogs:CustomDialog.Style>
    <dialogs:CustomDialog.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <Style x:Key="HeaderStyle" TargetType="{x:Type Label}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="20"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </dialogs:CustomDialog.Resources>
    <Grid Margin="0">

        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <Label x:Name="Title" Style="{StaticResource HeaderStyle}"  Padding="0" Margin="0" Content="{Binding Title}" ContentStringFormat="{}Template Edit - {0}" >

            </Label>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border BorderThickness="1" BorderBrush="DimGray" Background="White" CornerRadius="10" Padding="10" Margin="0, 13,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>

                        <local:UcSoakingTemplateSaveList Grid.Row="0"
                    ItemsSource="{Binding TemplateList, Mode=OneTime}" 
                    SelectedItem="{Binding SelectedTemplate, Mode=TwoWay}" 
                    ItemCopy="{Binding CmdCopy}"
                    ItemApply="{Binding CmdApply}"
                    ItemRemove="{Binding CmdDelete}"
                    >
                        </local:UcSoakingTemplateSaveList>
                        <Grid x:Name="Bottom" Grid.Row="1">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,3,0,3" IsEnabled="{Binding HasSelectedTemplate}">
                                <Button x:Name="btnCopy" Width="60" Command="{Binding CmdCopy}" Margin="5">Copy</Button>
                                <Grid>
                                    <Button x:Name="btnApply" Width="60"  Command="{Binding CmdApply}" Margin="5">Apply</Button>
                                    <Button x:Name="btnValidate" Width="60"  Click="Apply_Click" Margin="5" 
                                            FontFamily="{DynamicResource  DefaultFont}" 
                                            FontWeight="SemiBold"
                                            Background="White"
                                            BorderThickness="2"
                                            BorderBrush="Black"
                                            >Apply
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" >
                                                <Setter Property="Visibility" Value="Hidden"/>                                                
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedTemplate.IsValid}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                                <Button x:Name="btnDelete" Width="60" Click="Delete_Click" Margin="5,5,0,5">Delete</Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>
                <Border Grid.Column="0" Height="30" Width="80" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="30,0,0,0" Padding="0">
                    <Label Style="{x:Null}" FontSize="16" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0" Padding="0">Table List</Label>
                </Border>

                <Border Grid.Column="2" BorderThickness="1" BorderBrush="DimGray" Background="White" CornerRadius="10" Padding="10" Margin="0, 13,0,0"
                        IsEnabled="{Binding HasSelectedTemplate}">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="1"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Title :" Foreground="black" Margin="10,0,0,0" Padding="0" />
                            <Border Grid.Column="1" BorderThickness="1" BorderBrush="Black" Margin="0,5,0,0">
                                <TextBox Style="{x:Null}"  Text="{Binding SelectedTemplate.EditName, Mode=TwoWay}" 
                                      Name="TemplateName"                                                            
                                       Margin="0,0,0,0" Padding="0" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                     CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </Border>
                        </Grid>
                        <local:UcSoakingTemplateSoakingList  Grid.Row="1" DataContext="{Binding SelectedTemplate}"/>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,3,0,3" >
                            <Button Content="Add" Command="{Binding SelectedTemplate.CmdAdd}" Margin="5" Width="50"/>
                            <Button Content="Delete" Command="{Binding SelectedTemplate.CmdDelete}" Margin="5" Width="50"/>
                            <Button Content="DeleteAll" Command="{Binding SelectedTemplate.CmdClear}" Margin="5,5,0,5"/>
                        </StackPanel>
                        <Border Grid.Row="3" Background="DimGray"/>
                        <Grid Grid.Row="4">
                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,3,0,3" >
                                <Button Content="Cancel" Command="{Binding SelectedTemplate.CmdRestore}" Margin="5" Width="50"/>
                                <Button Content="Save" Command="{Binding SelectedTemplate.CmdSave}" Margin="5" Width="50"/>
                            </StackPanel>

                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0,0,0,5" Foreground="Red" >
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SelectedTemplate.EditNameIsDuplicate}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    Title is duplicated!.
                                </TextBlock>
                                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Center" Padding="0,0,0,5" Foreground="Red" >
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SelectedTemplate.EditNameIsDuplicate}" Value="False" />
                                                        <Condition Binding="{Binding ElementName=TemplateName, Path=Text.Length, Mode=OneWay}" Value="0" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    Please enter a title.
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
                
                <Border Grid.Column="2" Height="30" Width="150" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="30,0,0,0" Padding="0">
                    <Label Style="{x:Null}" FontSize="16" Background="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0" Padding="0">Table Information</Label>
                </Border>
            </Grid>
            <Button  Grid.Row="3" Content="Close" Margin="4" FontSize="15" Command="{Binding IDOK}" Width="80" HorizontalAlignment="Right" />
        </Grid>

        <Grid x:Name="DeleteAlert" Background="#AEFFFFFF" Visibility="Hidden">
            <Border BorderThickness="1" BorderBrush ="Black" Width="300" Height="200" Background="LightGray">
                <Grid  Width="300" Height="200" Background="LightGray" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Style="{x:Null}" Content="{Binding SelectedTemplate.Name}" FontSize="12"  HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black"/>
                        <Button Grid.Column="1" Style="{x:Null}" Click="DeleteClose_Click" Background="White" BorderThickness="0" >X</Button>
                    </Grid>
                    <Label Grid.Row="1" Style="{x:Null}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding SelectedTemplate.Name}" ContentStringFormat="{}Do you want to delete? &#x0a; &quot;{0}&quot;"></Label>

                    <Grid Grid.Row="2" Background="LightGray">
                        <StackPanel  HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button  Style="{x:Null}" Width="75" Margin="8" Command="{Binding CmdDelete}" Click="DeleteClose_Click" >Yes</Button>
                            <Button Style="{x:Null}" Width="75" Margin="8" Click="DeleteClose_Click">No</Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </Grid>

        <Grid x:Name="ApplyAlert" Background="#AEFFFFFF" Visibility="Hidden">
            <Border BorderThickness="1" BorderBrush ="Black" Width="300" Height="200" Background="LightGray">
            <Grid   Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Background="White">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Style="{x:Null}" Content="{Binding SelectedTemplate.Name}" FontSize="12"  HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black"/>
                    <Button Grid.Column="1" Style="{x:Null}" Click="ApplyClose_Click" Background="White" BorderThickness="0" >X</Button>
                </Grid>
                <Label Grid.Row="1" Style="{x:Null}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding SelectedTemplate.ValidateResult}" ContentStringFormat="{}{0}"></Label>
                    <Grid Grid.Row="2" Background="LightGray">
                        <StackPanel  HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button  Style="{x:Null}" x:Name="ApplyButton" Width="75" Margin="8" Command="{Binding CmdApply}" Click="ApplyClose_Click"                                    >Yes</Button>
                            <Button Style="{x:Null}" Width="75" Margin="8" Click="ApplyClose_Click">No</Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </Grid>

        <Border x:Name="SuccessMessage"  HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" Width="200"  Height="100" CornerRadius="10" >
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Opacity" Value="0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ApplyResult}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="0.0" To="1.0" Duration="0:0:0.1" BeginTime="0:0:0"  />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="1.0" To="0.0" Duration="0:0:0.1" BeginTime="0:0:1.1"   />
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Label  Content="Success" Foreground="Green" FontSize="40" FontWeight="Bold" Margin="0" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>

        <Border x:Name="FailMessage"  HorizontalAlignment="Center" VerticalAlignment="Center" Background="Yellow" Width="200"  Height="100" CornerRadius="10" >
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Opacity" Value="0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ApplyResult}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="0.0" To="1.0" Duration="0:0:0.1" BeginTime="0:0:0"  />
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="1.0" To="0.0" Duration="0:0:0.1" BeginTime="0:0:1.1"   />
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Label  Content="Fail" Foreground="DarkRed" FontSize="40" FontWeight="Bold" Margin="0" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>        
    </Grid>    
</dialogs:CustomDialog>
