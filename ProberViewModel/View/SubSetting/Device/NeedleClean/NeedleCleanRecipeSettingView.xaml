<UserControl x:Class="UcNeedleCleanRecipeSettingView.NeedleCleanRecipeSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:needleCleanerModuleParameter="clr-namespace:NeedleCleanerModuleParameter;assembly=NeedleCleanerModuleParameter"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cui="clr-namespace:CUI;assembly=CUI"
             xmlns:local="clr-namespace:UcNeedleCleanRecipeSettingView"
             xmlns:converter="clr-namespace:ValueConverters;assembly=ValueConverters"
             mc:Ignorable="d" 
             d:DesignHeight="2000" d:DesignWidth="1000">
    <UserControl.Resources>
        <ResourceDictionary>
            <local:NCSheetDevCountToStrConverter x:Key="NCSheetDevCountToStrConverter"/>
            <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#CCC" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#BBB" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="0.1"/>
                        <GradientStop Color="#EEE" Offset="0.9"/>
                        <GradientStop Color="#FFF" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="DarkGray" />

            <!-- Border Brushes -->

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#444" Offset="0.0"/>
                        <GradientStop Color="#888" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

            <!-- Miscellaneous Brushes -->
            <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

            <Style x:Key="CheckButtonStyle" TargetType="CheckBox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"  
                                      Width="32" 
                                      Height="32" 
                                      CornerRadius="0" 
                                      Background="{StaticResource NormalBrush}"
                                      BorderThickness="1">
                                        <Path 
                                        Width="14" Height="12" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="{StaticResource GlyphBrush}"
                                        StrokeThickness="2"
                                        Data="M 0 5 L 3 10 10 0" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                                </Trigger>-->
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="TextBoxErrorTemplate">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <!--<Image Height="16" Margin="0,0,5,0" 
                    Source="Assets/warning_48.png"/>-->
                        <AdornedElementPlaceholder x:Name="Holder"/>
                    </StackPanel>
                    <Label Foreground="Red" Content="{Binding ElementName=Holder, 
               Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                </StackPanel>
            </ControlTemplate>

            <ObjectDataProvider x:Key ="NC_CleaningType" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_CleaningType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key ="NC_FocusingInterval" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_FocusingInterval"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key ="NC_SCRUB_Direction" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_SCRUB_Direction"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key ="NC_OverdriveType" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_OverdriveType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <converter:EnumMatchToBooleanConverter x:Key="EnumBooleanConverter"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SettingControlStyle;component/SettingViewStyleDictionaly.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Width="800" Margin="0,0,100,50" >
        <StackPanel>
            <Label  Content="Needle Clean Recipe"
                Foreground="White"
                FontWeight="Bold"
                FontSize="48"
                />
            <Separator Margin="4" Background="White"/>
            <StackPanel Height="12"/>
            <StackPanel>
                <StackPanel Height="4"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.35*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="1" 
                           Content="NC1" 
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontWeight="Bold"
                           FontSize="32"/>
                    <Label Grid.Column="2" 
                           Content="NC2" 
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontWeight="Bold"
                           FontSize="32"/>
                    <Label Grid.Column="3" 
                           Content="NC3" 
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontWeight="Bold"
                           FontSize="32"/>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Enable" HorizontalAlignment="Right"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="22"/>
                    <ToggleButton  Grid.Column="2" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].Enabled.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="3" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].Enabled.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].Enabled.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.55*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.ColumnSpan="2" Grid.RowSpan="2" Content="Sequence Mode" 
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="17"/>
                    <ComboBox  Grid.Column="2" Width="150" Margin="5" 
                               ItemsSource="{Binding Source={StaticResource NC_CleaningType}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[0].CleaningType.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding NC1SelectedChangedCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="3" Width="150" Margin="5" 
                               ItemsSource="{Binding Source={StaticResource NC_CleaningType}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[1].CleaningType.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding NC2SelectedChangedCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="4" Width="150" Margin="5" 
                               ItemsSource="{Binding Source={StaticResource NC_CleaningType}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[2].CleaningType.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding NC3SelectedChangedCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <cui:Button GUID="2d37a087-fad5-4c3a-ba72-30759c929a57"
                                Grid.Column="2" Grid.Row="1" Width="150" Margin="0,0,18,4" 
                                FontSize="18" Height="40" Content="Setup" 
                                Foreground="White"
                                Style="{DynamicResource NormalTypeCUIButtonStyle}"
                                Command="{Binding SequenceSetupCommand_NC1}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                    <cui:Button GUID="2d37a087-fad5-4c3a-ba72-30759c929a57"
                                Grid.Column="3" Grid.Row="1" Width="150" Margin="0,0,18,4" 
                                FontSize="18" Height="40" Content="Setup" 
                                Foreground="White"
                                Style="{DynamicResource NormalTypeCUIButtonStyle}"
                                Command="{Binding SequenceSetupCommand_NC2}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                    <cui:Button GUID="2d37a087-fad5-4c3a-ba72-30759c929a57"
                                Grid.Column="4" Grid.Row="1" Width="150" Margin="0,0,18,4" 
                                FontSize="18" Height="40" Content="Setup" 
                                Foreground="White"
                                Style="{DynamicResource NormalTypeCUIButtonStyle}"
                                Command="{Binding SequenceSetupCommand_NC3}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="2" Content="   Lot &#x0a;Interval"
                            Foreground="White"
                            FontWeight="Bold"
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="16"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="2"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ToggleButton  Grid.Column="3" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCleaningLotInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCleaningLotInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="5" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCleaningLotInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="2" Content="   Die &#x0a;Interval"
                            Foreground="White"
                            FontWeight="Bold"
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="16"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="2"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="1" Content="Interval" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ToggleButton  Grid.Column="3" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCleaningDieInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCleaningDieInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="5" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCleaningDieInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <TextBox Grid.Column="3" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCleaningDieInterval.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].CleaningDieInterval.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="1" Width="150" Margin="5"  
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCleaningDieInterval.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].CleaningDieInterval.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCleaningDieInterval.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].CleaningDieInterval.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="2"  Content=" Wafer &#x0a;Interval"                           
                            Foreground="White"
                            FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="16"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="2"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="1" Content="Interval" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ToggleButton  Grid.Column="3"  
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCleaningWaferInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCleaningWaferInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="5" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCleaningWaferInterval.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <TextBox Grid.Column="3" Grid.Row="1" Width="150" Margin="5"  
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCleaningWaferInterval.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].CleaningWaferInterval.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCleaningWaferInterval.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].CleaningWaferInterval.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="1" Width="150" Margin="5"  
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCleaningWaferInterval.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].CleaningWaferInterval.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.75*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="4"  Content="Secondary&#x0a;  Interval"
                            Foreground="White"
                            FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="12"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="4"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />

                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>

                    <ItemsControl Grid.Column="3"  Grid.Row="0"
                                  Grid.ColumnSpan="3" AlternationCount="{Binding NeedleCleanDevParam.SheetDevs.Count}"
                        ItemsSource="{Binding NeedleCleanDevParam.SheetDevs}"
                         ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                       HorizontalAlignment="Center"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton  Grid.Row="0"
                                           IsChecked="{Binding EnableAssistanceInterval.Value, Mode=TwoWay}"
                                           Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.NCEnableClickCommand}"
                                           CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                                    <CheckBox Grid.Row="1" Width="150" Margin="30 5 0 5" 
                                            Style="{StaticResource CheckButtonStyle}"
                                            IsEnabled="{Binding EnableAssistanceInterval.Value}"  
                                            IsChecked="{Binding CleaningAssistanceInterval[0].Value,Mode=TwoWay}"
                                            Content="{Binding (ItemsControl.AlternationIndex),
                                            RelativeSource={RelativeSource Mode=TemplatedParent},
                                            Converter={StaticResource NCSheetDevCountToStrConverter},ConverterParameter=1}"
                                            Foreground="White"
                                            FontSize="24"                                                              
                                            HorizontalAlignment="Center"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.NCEnableClickCommand}"
                                            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                                    <CheckBox  Grid.Row="2" Width="150" Margin="30 5 0 5"                             
                                            Style="{StaticResource CheckButtonStyle}"                                                      
                                            IsEnabled="{Binding EnableAssistanceInterval.Value}"
                                            IsChecked="{Binding CleaningAssistanceInterval[1].Value,Mode=TwoWay}"
                                            Content="{Binding (ItemsControl.AlternationIndex),
                                            RelativeSource={RelativeSource Mode=TemplatedParent},
                                            Converter={StaticResource NCSheetDevCountToStrConverter},ConverterParameter=2}"
                                            Foreground="White"
                                            FontSize="24"                                                              
                                            HorizontalAlignment="Center"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.NCEnableClickCommand}"
                                            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="2"  Content=" Check &#x0a;Contact &#x0a; Count"
                            Foreground="White"
                            FontWeight="Bold"
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="16"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="2"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="1" Content="Limit" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ToggleButton  Grid.Column="3" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].EnableContactCount.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].EnableContactCount.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="5" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].EnableContactCount.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <TextBox Grid.Column="3" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableContactCount.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].ContactLimit.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableContactCount.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].ContactLimit.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableContactCount.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].ContactLimit.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="2"  Content=" Check &#x0a; Cycle &#x0a; Count"
                            Foreground="White"
                            FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="16"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="2"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="1" Content="Limit" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ToggleButton  Grid.Column="3" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCycleCount.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCycleCount.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="5" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCycleCount.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <TextBox Grid.Column="3" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableCycleCount.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].CycleLimit.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="1" Width="150" Margin="5"  
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableCycleCount.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].CycleLimit.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="1" Width="150" Margin="5"  
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableCycleCount.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].CycleLimit.Value}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="3" Content="Overdrive &#x0a;   Mode"
                            Foreground="White"
                            FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="12"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="3"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="OD Mode" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="12.5"/>
                    <Label Grid.Column="2" Grid.Row="1" Content="Value" Foreground="White"
                           IsEnabled="True"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="2" Content="Limit(%)" Foreground="White"
                           IsEnabled="True"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ComboBox  Grid.Column="3" Width="150" Margin="15,5,0,5" 
                               ItemsSource="{Binding Source={StaticResource NC_OverdriveType}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[0].OverdriveType.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="4" Width="150" Margin="15,5,0,5" 
                               ItemsSource="{Binding Source={StaticResource NC_OverdriveType}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[1].OverdriveType.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="5" Width="150" Margin="15,5,0,5" 
                               ItemsSource="{Binding Source={StaticResource NC_OverdriveType}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[2].OverdriveType.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBox Grid.Column="3" Grid.Row="1" Width="150" Margin="5" 
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].Overdrive.Value}"
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].OverdriveType.Value, 
                                    Converter={StaticResource EnumBooleanConverter}, 
                                    ConverterParameter={x:Static needleCleanerModuleParameter:NC_OverdriveType.NC_OD}}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="1" Width="150" Margin="5" 
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].Overdrive.Value}"
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].OverdriveType.Value, 
                                    Converter={StaticResource EnumBooleanConverter}, 
                                    ConverterParameter={x:Static needleCleanerModuleParameter:NC_OverdriveType.NC_OD}}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="1" Width="150" Margin="5" 
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].Overdrive.Value}"
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].OverdriveType.Value,
                                    Converter={StaticResource EnumBooleanConverter}, 
                                    ConverterParameter={x:Static needleCleanerModuleParameter:NC_OverdriveType.NC_OD}}"
                               FontSize="24"                               
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <TextBox Grid.Column="3" Grid.Row="2"  Width="150" Margin="5"                            
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].OverdriveType.Value, 
                                    Converter={StaticResource EnumBooleanConverter}, 
                                    ConverterParameter={x:Static needleCleanerModuleParameter:NC_OverdriveType.PROBING_OD}}"
                               FontSize="24"                               
                               HorizontalAlignment="Center"   
                               Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"
                               MaxLength="3" >
                        <TextBox.Text>
                            <Binding Path="NeedleCleanDevParam.SheetDevs[0].RelativeOdRatio.Value" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:DoubleRangeRule Min="0" Max="100"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <TextBox Grid.Column="4" Grid.Row="2"  Width="150" Margin="5"                            
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].OverdriveType.Value, 
                                    Converter={StaticResource EnumBooleanConverter}, 
                                    ConverterParameter={x:Static needleCleanerModuleParameter:NC_OverdriveType.PROBING_OD}}"
                               FontSize="24"                               
                               HorizontalAlignment="Center"
                               Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"
                               MaxLength="3">
                        <TextBox.Text>
                            <Binding Path="NeedleCleanDevParam.SheetDevs[1].RelativeOdRatio.Value" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:DoubleRangeRule Min="0" Max="100"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="2"  Width="150" Margin="5"                             
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].OverdriveType.Value, 
                                    Converter={StaticResource EnumBooleanConverter}, 
                                    ConverterParameter={x:Static needleCleanerModuleParameter:NC_OverdriveType.PROBING_OD}}"
                               FontSize="24"                              
                               HorizontalAlignment="Center"
                               Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"
                               MaxLength="3">
                        <TextBox.Text>
                            <Binding Path="NeedleCleanDevParam.SheetDevs[2].RelativeOdRatio.Value" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:DoubleRangeRule Min="0" Max="100"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.52*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.ColumnSpan="2" Content="Contact Method" HorizontalAlignment="Center"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="17"/>
                    <ComboBox  Grid.Column="2" Width="150" Margin="5" 
                               ItemsSource="{Binding Source={StaticResource NC_SCRUB_Direction}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[0].ScrubDirection.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="3" Width="150" Margin="5" 
                               ItemsSource="{Binding Source={StaticResource NC_SCRUB_Direction}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[1].ScrubDirection.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="4" Width="150" Margin="5" 
                               ItemsSource="{Binding Source={StaticResource NC_SCRUB_Direction}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[2].ScrubDirection.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.52*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.ColumnSpan="2" Content="Scrub Length" HorizontalAlignment="Center"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="17"/>
                    <TextBox  Grid.Column="2" Width="150" Margin="5"
                              Text="{Binding NeedleCleanDevParam.SheetDevs[0].ScrubLength.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox  Grid.Column="3" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[1].ScrubLength.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox  Grid.Column="4" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[2].ScrubLength.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.52*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.ColumnSpan="2" Content="Overdrive Limit" HorizontalAlignment="Center"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="17"/>
                    <TextBox  Grid.Column="2" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[0].OverdriveLimit.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox  Grid.Column="3" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[1].OverdriveLimit.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox  Grid.Column="4" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[2].OverdriveLimit.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.52*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.ColumnSpan="2" Content="Focusing Interval" HorizontalAlignment="Center"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="17"/>
                    <ComboBox  Grid.Column="2" Width="150" Margin="5" FontSize="13"                            
                               ItemsSource="{Binding Source={StaticResource NC_FocusingInterval}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[0].FocusInterval.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="3" Width="150" Margin="5" FontSize="13"  
                               ItemsSource="{Binding Source={StaticResource NC_FocusingInterval}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[1].FocusInterval.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ComboBox  Grid.Column="4" Width="150" Margin="5" FontSize="13"  
                               ItemsSource="{Binding Source={StaticResource NC_FocusingInterval}}"
                               SelectedItem="{Binding NeedleCleanDevParam.SheetDevs[2].FocusInterval.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NCSequenceChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.05*"/>
                        <ColumnDefinition Width="0.15*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.RowSpan="4"  Content="  Soft&#x0a;Contact &#x0a; Mode"
                            Foreground="White"
                            FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontSize="16"/>
                    <GridSplitter Grid.Column="1" Grid.RowSpan="4"
                            HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"
                              Background="White" 
                              ShowsPreview="True"
                              Width="2"
                              />
                    <Label Grid.Column="2" Grid.Row="0" Content="Enable" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="1" Content="Speed" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="2" Content="Accel" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <Label Grid.Column="2" Grid.Row="3" Content="Origin" Foreground="White"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                            FontWeight="Bold"
                            FontSize="14"/>
                    <ToggleButton  Grid.Column="3" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[0].EnableNcSoftTouch.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="4" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[1].EnableNcSoftTouch.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton  Grid.Column="5" 
                                   IsChecked="{Binding NeedleCleanDevParam.SheetDevs[2].EnableNcSoftTouch.Value, Mode=TwoWay}"
                                   Command="{Binding NCEnableClickCommand}"
                                   CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <TextBox Grid.Column="3" Grid.Row="1" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].InclineSpeed.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>                        
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="1"  Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].InclineSpeed.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="1"  Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].InclineSpeed.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="3" Grid.Row="2"  Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].InclineAccel.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="2"  Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].InclineAccel.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="2" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].InclineAccel.Value}"
                               FontSize="24"                               
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="3" Grid.Row="3" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[0].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[0].InclineOrigin.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="4" Grid.Row="3" Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[1].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[1].InclineOrigin.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Column="5" Grid.Row="3"  Width="150" Margin="5" 
                             IsEnabled="{Binding NeedleCleanDevParam.SheetDevs[2].EnableNcSoftTouch.Value}"
                             Text="{Binding NeedleCleanDevParam.SheetDevs[2].InclineOrigin.Value}"
                               FontSize="24"                                                              
                               HorizontalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.52*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1.05*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.ColumnSpan="2" Content="Z Clearance" HorizontalAlignment="Center"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="17"/>
                    <TextBox  Grid.Column="2" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[0].Clearance.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox  Grid.Column="3" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[1].Clearance.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox  Grid.Column="4" Width="150" Margin="5" 
                              Text="{Binding NeedleCleanDevParam.SheetDevs[2].Clearance.Value}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
                <Separator Margin="4" Background="White"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="9*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ToggleButton Grid.Row="0" Grid.Column="0" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Right"
                              IsChecked="{Binding NeedleCleanDevParam.PinAlignBeforeCleaning.Value, Mode=TwoWay}"
                              Command="{Binding NCEnableClickCommand}"
                              CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <ToggleButton Grid.Row="1" Grid.Column="0" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Right"
                              IsChecked="{Binding NeedleCleanDevParam.PinAlignAfterCleaning.Value, Mode=TwoWay}"
                              Command="{Binding c}"
                              CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <Label Grid.Row="0" Grid.Column="1" Content="Enable Pin Alignment before Needle Cleaning" Foreground="White" FontWeight="Bold" FontSize="17"/>
                    <Label Grid.Row="1" Grid.Column="1" Content="Enable Pin Alignment after Needle Cleaning" Foreground="White" FontWeight="Bold" FontSize="17"/>
                </Grid>
                <Separator Margin="4" Background="White"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
