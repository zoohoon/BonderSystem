<UserControl x:Class="SoakingRecipeSettingView.SoakingRecipeSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SoakingRecipeSettingView"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cui="clr-namespace:CUI;assembly=CUI"
             xmlns:converter="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:NodeConverter="clr-namespace:NodeConverter;assembly=NodeConverter"
              xmlns:param="clr-namespace:RecipeEditorControl.RecipeEditorParamEdit;assembly=RecipeEditorControl"
             mc:Ignorable="d" 
             d:DesignHeight="960" d:DesignWidth="1280">
    <UserControl.Resources>
        <ResourceDictionary>
            <NodeConverter:ParamToSourceConverter x:Key="SoakingParamToSourceConverter" />

            <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#CCC" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#BBB" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="0.1"/>
                        <GradientStop Color="#EEE" Offset="0.9"/>
                        <GradientStop Color="#FFF" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="DarkGray" />

            <!-- Border Brushes -->

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#444" Offset="0.0"/>
                        <GradientStop Color="#888" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

            <!-- Miscellaneous Brushes -->
            <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

            <Style x:Key="CheckButtonStyle" TargetType="CheckBox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"  
                                      Width="32" 
                                      Height="32" 
                                      CornerRadius="0" 
                                      Background="{StaticResource NormalBrush}"
                                      BorderThickness="1">
                                        <Path 
                                        Width="14" Height="12" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="{StaticResource GlyphBrush}"
                                        StrokeThickness="2"
                                        Data="M 0 5 L 3 10 10 0" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                                </Trigger>-->
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--<ControlTemplate x:Key="TextBoxErrorTemplate">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        -->
            <!--<Image Height="16" Margin="0,0,5,0" 
                    Source="Assets/warning_48.png"/>-->
            <!--
                        <AdornedElementPlaceholder x:Name="Holder"/>
                    </StackPanel>
                    <Label Foreground="Red" Content="{Binding ElementName=Holder, 
               Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                </StackPanel>
            </ControlTemplate>-->

            <!--<ObjectDataProvider x:Key ="NC_CleaningType" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_CleaningType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>-->

            <!--<ObjectDataProvider x:Key ="NC_FocusingInterval" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_FocusingInterval"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key ="NC_SCRUB_Direction" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_SCRUB_Direction"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key ="NC_OverdriveType" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="needleCleanerModuleParameter:NC_OverdriveType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>-->

            <!--<converter:EnumMatchToBooleanConverter x:Key="EnumBooleanConverter"/>-->

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SettingControlStyle;component/SettingViewStyleDictionaly.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="#131313">
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>-->

        <!--<Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>-->

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Label Content="Heating Setup" Grid.Column="0" Grid.Row="0"
               Foreground="White"
               FontWeight="Bold"
               FontSize="24"
               Height="42"/>
        
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <Label Content="Soaking Mode [ON: Status Soaking, OFF: Event Soaking]" Height="30" FontSize="15" VerticalAlignment="Center" Foreground="Yellow"/>
            <ToggleButton x:Name="StatusSoakingEnable" Grid.Column="0" Width="70" Height="30" IsChecked="{Binding ShowStatusSoaking}" IsEnabled="{Binding IsToggleBtnEnabled}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusSoakingToggleOnCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusSoakingToggleOffCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ToggleButton>
        </StackPanel>        

        <ComboBox AutomationProperties.AutomationId="cmbEventSoakingFilter"
                  Grid.Column="1" Grid.Row="1" Visibility="{Binding ComboBoxVisibility}"
                  FontSize="24" Width="270" Height="45" 
                  ItemsSource="{Binding EventSoakingTypelist}" HorizontalAlignment="Right" VerticalAlignment="Center"
                  SelectedItem="{Binding SelectedItem,Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="DropDownClosed">
                    <i:InvokeCommandAction Command="{Binding DropDownClosedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="BorderBrush" Value="White"></Setter>
                    <Setter Property="BorderThickness" Value="0.55"/>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>

        <!--<StackPanel Grid.Column="2" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal">
                <Label Content="Elapsed Time" Foreground="White" FontSize="14" VerticalAlignment="Center"></Label>
                <TextBox VerticalAlignment="Center" Width="100" IsReadOnly="True"/>
            </StackPanel>
        </StackPanel>-->

       
        <TabControl Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="3" 
                    SelectedIndex="{Binding TabControlSelectedIndex}"  Visibility="{Binding EventNAutoSoakVisibility}" >

            <TabControl.Resources>

                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="grid">
                                    <Border 
                              Name="Border"
                              Background="#FF8C00"
                              BorderBrush="Black" 
                              BorderThickness="1,1,1,1" 
                              CornerRadius="6,6,0,0" >
                                        <TextBlock x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Text="{TemplateBinding Header}"
                                    Margin="12,2,12,2"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="ContentSite" Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>

            </TabControl.Resources>

            <TabItem AutomationProperties.AutomationId="tiEventSoaking"
                     Header="Event Soaking">
                <param:UcRecipeEditorParamEdit Grid.Row="1" Background="Black" DataContext="{Binding RecipeEditorParamEdit}"/>
            </TabItem>
            <TabItem AutomationProperties.AutomationId="tiAutoSoaking"
                     Header="Auto Soaking">
                <param:UcRecipeEditorParamEdit Grid.Row="1" Background="Black" DataContext="{Binding RecipeEditorParamEdit}"/>
            </TabItem>
            <TabItem AutomationProperties.AutomationId="tiCommonOption"
                     Header="Common">
                <param:UcRecipeEditorParamEdit Grid.Row="1" Background="Black" DataContext="{Binding RecipeEditorParamEdit}"/>
            </TabItem>
            <!--<TabItem Header="Auto Soaking">
                <param:UcRecipeEditorParamEdit Background="Black" DataContext="{Binding RecipeEditorParamEdit}"/>
            </TabItem>-->

        </TabControl>
        <Grid Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="3" Visibility="{Binding StatusSoakVisibility}"  >
            <param:UcRecipeEditorParamEdit Grid.Row="1" Background="Black" DataContext="{Binding RecipeEditorParamEdit}"/>
            <Grid  HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0">
                <cui:Button 
                    Content="Status Soak Setting" FontSize="18" Foreground="White" Height="42" Width="200" Margin="180, 10, 5 ,5"
                    Command="{Binding StatusSoakingSetupCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    Style="{DynamicResource NormalTypeCUIButtonStyle}"
                    
                />
            </Grid>
        </Grid>

    </Grid>
</UserControl>
