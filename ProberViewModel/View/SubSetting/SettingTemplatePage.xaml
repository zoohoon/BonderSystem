<UserControl x:Class="SettingTemplateView.SettingTemplatePage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:SettingTemplateView"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:conv="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:aniScroll="clr-namespace:UcAnimationScrollViewer;assembly=UcAnimationScrollViewer"
             xmlns:account="clr-namespace:AccountModule;assembly=AccountModule"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             d:DesignHeight="800" d:DesignWidth="1024">
    <UserControl.Resources>
        <ResourceDictionary>
            <conv:BoolToVisibleOrCollapsedConverter x:Key="BtoV_VoOrCo" />
            <conv:BoolToVisibleOrHiddenConverter x:Key="BtoV_VoOrHi" />
            <conv:MaskingMultiConverterWithBoolVal x:Key="MaskingMultiConverterWithBoolVal"/>
            <conv:MaskingVisiblilityMultiConverterWithVisibility x:Key="MaskingVisiblilityMultiConverterWithVisibility"/>
            <conv:LockingColorChangerUsingMasking x:Key="LockingColorChangerUsingMasking"/>

            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

            <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="ClearBtnStyleBorder" Background="Transparent">
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Name="SearchIcon" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,
                                          13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="White"
                                          Stretch="Fill"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="ClearBtnStyleBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="SearchIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="ClearBtnStyleBorder" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="ClearBtnStyleBorder" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="UpButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="UpButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect" Color="LightGray" ShadowDepth="10" Softness="0.5"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                        <Path Data="M1,21H23L12,2" Fill="White" Name="TryAngleIcon"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DwButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="DwButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="10"
                                    Softness="0.5"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                        <Path Data="M1,2H23L12,21"
                                          Fill="White" Name="TryAngleIcon"
                                          />
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Unloaded" >
            <i:InvokeCommandAction Command="{Binding ControlUnloadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80*"/>
            <ColumnDefinition Width="240*"/>
        </Grid.ColumnDefinitions>

        <Border BorderThickness="1" BorderBrush="White"/>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="16*"/>
                <RowDefinition Height="16*"/>
                <RowDefinition Height="144*"/>
                <RowDefinition Height="16*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" BorderThickness="1" BorderBrush="White"/>
            <StackPanel Grid.Row="0" Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <Viewbox Margin="0 0 0 0"
                         Width="40" VerticalAlignment="Center"
                         HorizontalAlignment="Center">
                    <Path Data="{Binding Icon}" Fill="DeepSkyBlue"
                                  Stretch="Fill"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                </Viewbox>

                <Label Content="{Binding SettingName}" VerticalContentAlignment="Center"
                   HorizontalContentAlignment="Center"
                   FontSize="24"
                   Foreground="White"/>

            </StackPanel>
            <Border Grid.Row="1" BorderThickness="1" BorderBrush="White"/>
            <Grid Grid.Row="1" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0"
                         Foreground="White"
                         materialDesign:HintAssist.Hint="Search"
                         VerticalContentAlignment="Center"
                         HorizontalContentAlignment="Center"
                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="24"
                    Margin="0 8 0 8"/>
                <Button Grid.Column="1"
                        Margin="0 8 0 8"
                        Visibility="{Binding IsSearchDataClearButtonVisible, Converter={StaticResource BtoV_VoOrCo}}"
                        Command="{Binding ClearSearchDataCommand}"
                        Style="{StaticResource ClearButtonStyle}">
                </Button>
            </Grid>

            <Border Grid.Row="2" BorderThickness="1" BorderBrush="White"/>
            <aniScroll:AnimationScrollViewer x:Name="svCategoryView"
                          Grid.Row="2"
                          VerticalScrollBarVisibility="Hidden"
                          HorizontalScrollBarVisibility="Hidden">
                <ListBox x:Name="SettingViewlistbox" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Disabled"
                         ItemsSource="{Binding SettingInfoCollection}"
                         SelectedItem="{Binding SelectedSettingViewInfo}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <i:InvokeCommandAction Command="{Binding CategoryChangedCommand}"
                                                   />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Style.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MaskingMultiConverterWithBoolVal}">
                                            <Binding Path="IsEnabled"/>
                                            <Binding Path="MaskingLevel"/>
                                            <Binding Source="{x:Static account:AccountManager.CurrentUserInfo}" Path="UserLevel"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Value="False">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MaskingMultiConverterWithBoolVal}">
                                            <Binding Path="IsEnabled"/>
                                            <Binding Path="MaskingLevel"/>
                                            <Binding Source="{x:Static account:AccountManager.CurrentUserInfo}" Path="UserLevel"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Value="Visible">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MaskingVisiblilityMultiConverterWithVisibility}">
                                            <Binding Path="Visibility"/>
                                            <Binding Path="MaskingLevel"/>
                                            <Binding Source="{x:Static account:AccountManager.CurrentUserInfo}" Path="UserLevel"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="Hidden">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MaskingVisiblilityMultiConverterWithVisibility}">
                                            <Binding Path="Visibility"/>
                                            <Binding Path="MaskingLevel"/>
                                            <Binding Source="{x:Static account:AccountManager.CurrentUserInfo}" Path="UserLevel"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Value="Collapsed">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MaskingVisiblilityMultiConverterWithVisibility}">
                                            <Binding Path="Visibility"/>
                                            <Binding Path="MaskingLevel"/>
                                            <Binding Source="{x:Static account:AccountManager.CurrentUserInfo}" Path="UserLevel"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding Name}"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="8"  HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="8*"/>
                                        <ColumnDefinition Width="80*"/>
                                    </Grid.ColumnDefinitions>
                                    <Viewbox Margin="0"
                                    Width="24">
                                        <Path Data="{Binding Icon}" Fill="DeepSkyBlue"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                    </Viewbox>
                                    <Label Grid.Column="1" Content="{Binding Name}" ToolTip="{Binding CategoryID}"
                                   />
                                </Grid>
                                
                                <Viewbox x:Name="vb_lockimg" 
                                 Width="20" Height="20" 
                                 VerticalAlignment="Center" HorizontalAlignment="Right" 
                                 Margin="32 0"
                                 >
                                    <Canvas Width="24" Height="24">
                                        <Canvas.Effect>
                                            <DropShadowEffect Color="Green" Direction="90" Opacity="1" BlurRadius="2" ShadowDepth ="3"></DropShadowEffect>
                                        </Canvas.Effect>
                                        <Path Data="M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z" 
                                              >
                                            <Path.Fill>
                                                <MultiBinding Converter="{StaticResource LockingColorChangerUsingMasking}">
                                                    <Binding Path="MaskingLevel"/>
                                                    <Binding Source="{x:Static account:AccountManager.CurrentUserInfo}" Path="UserLevel"/>
                                                </MultiBinding>
                                            </Path.Fill>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                            </Grid>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="vb_lockimg" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Visibility" TargetName="vb_lockimg" Value="Hidden"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </aniScroll:AnimationScrollViewer>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0"
                            Margin="12"
                            Opacity="0.5"
                            Style="{StaticResource UpButtonStyle}"
                            Click="CategoryUpBtnClick"/>

                <Button Grid.Column="2"
                            Margin="12"
                            Opacity="0.5"
                            Style="{StaticResource DwButtonStyle}"
                            Click="CategoryDwBtnClick"/>

            </Grid>
        </Grid>

        <Border Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
        <aniScroll:AnimationScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Hidden"
                                x:Name="svSettingView"
                                VerticalScrollBarVisibility="Hidden">
            <ContentControl Content="{Binding SelectedView}"/>
        </aniScroll:AnimationScrollViewer>

        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160*"/>
                <ColumnDefinition Width="24*"/>
            </Grid.ColumnDefinitions>
       

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="80*"/>
                    <RowDefinition Height="96*"/>
                    <RowDefinition Height="80*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80*"/>
                        <RowDefinition Height="80*"/>
                        <RowDefinition Height="80*"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0"
                            Margin="16"
                            Opacity="0.5"
                            Style="{StaticResource UpButtonStyle}"
                            Click="PageUpBtnClick"
                            Command="{Binding UpButtonProcCommand}"
                            Visibility="{Binding UpDownBtnVisibility, 
                        Converter={StaticResource BtoV_VoOrCo}}"
                            />

                    <Button Grid.Row="2"
                            Margin="16"
                            Opacity="0.5"
                            Style="{StaticResource DwButtonStyle}"
                            Click="PageDwBtnClick"
                            Command="{Binding DwButtonProcCommand}"
                            Visibility="{Binding UpDownBtnVisibility,
                        Converter={StaticResource BtoV_VoOrCo}}"
                            />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
