<UserControl x:Class="GPCardChangeMainPageView.UcGPCardChangeMainPage_DRAX"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:UcDisplayPort="clr-namespace:UcDisplayPort;assembly=UcDisplayPort"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:MahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:GPCardChangeMainPageView"
             xmlns:ipogoptenum="clr-namespace:ProberInterfaces.CardChange;assembly=ProberInterfaces"
             xmlns:view="clr-namespace:ProberViewModel.View"
             mc:Ignorable="d" 
             d:DesignHeight="892" d:DesignWidth="1280" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <local:PogoAlignPointConverter x:Key="PogoAlignPointConvert" />
        <local:EllipseInputFill x:Key="EllipseInputFill"/>
        <local:EllipseInputStroke x:Key="EllipseInputStroke"/>
        <local:InputStringConvert x:Key="InputStringConvert"/>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <UcDisplayPort:DisplayPort Grid.Column="0" Width="890" Height="890"
                                   x:Name="displayport" 
                                   StageSupervisor="{Binding StageSupervisor}"
                                   AssignedCamera="{Binding AssignedCamera}"
                                   TargetRectangleWidth="{Binding PatternWidth}" 
                                   TargetRectangleHeight="{Binding PatternHeight}"                  
                                   UseUserControlFunc="PTRECT"
                                   EnalbeClickToMove="{Binding EnableClickToMove}"/>
            <TabControl Grid.Column="1" BorderThickness="1" BorderBrush="Black" Width="auto"  Height="auto" Background="Black" SelectedIndex="{Binding SelectedTabIndex}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TabClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=SelectedItem.Header}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabItem Background="DimGray" BorderThickness="1" BorderBrush="Black"  Header="Fiducial Mark">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="0.7*"/>
                            <RowDefinition Height="2.5*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="1.5*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <UniformGrid Grid.Row="0" Columns="2">
                            <Button Content="CARD" Command="{Binding CardSettingCommand}" IsEnabled="{Binding CARDSetupBtnEnable}"/>
                            <Button Content="POGO" Command="{Binding PogoSettingCommand}" IsEnabled="{Binding POGOSetupBtnEnable}"/>
                            <!--<Button Content="POD" Command="{Binding PodSettingCommand}" IsEnabled="{Binding PodSetupBtnEnable}"/>-->
                        </UniformGrid>

                        <GroupBox Grid.Row="1" Header="PogoAlign option" Padding="3">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <RadioButton GroupName="SelectPogoAlign" Padding="0" FontSize="20" Margin="5" Command="{Binding SelectPogoAlign4PCommand}" IsEnabled="{Binding CARDSetupBtnEnable}" Foreground="White" VerticalContentAlignment="Center"
                                             IsChecked="{Binding PogoAlignPoint, Mode=TwoWay, Converter={StaticResource PogoAlignPointConvert}, ConverterParameter={x:Static ipogoptenum:EnumPogoAlignPoint.POINT_4}}">4 Point</RadioButton>
                                    <RadioButton GroupName="SelectPogoAlign" Padding="0" FontSize="20" Margin="5" Command="{Binding SelectPogoAlign3PCommand}" IsEnabled="{Binding CARDSetupBtnEnable}" Foreground="White" VerticalContentAlignment="Center"
                                             IsChecked="{Binding PogoAlignPoint, Mode=TwoWay, Converter={StaticResource PogoAlignPointConvert}, ConverterParameter={x:Static ipogoptenum:EnumPogoAlignPoint.POINT_3}}">3 Point</RadioButton>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Grid.Row="2" Header="Mark" Padding="3">
                            <ScrollViewer Grid.Row="2">
                                <ScrollViewer.Resources>
                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">40</sys:Double>
                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">40</sys:Double>
                                </ScrollViewer.Resources>
                                <ListBox ItemsSource="{Binding MarkPositionList}" SelectedItem="{Binding SelectedMarkPosition}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding SelectedMarkPosiongChangedCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Padding" Value="1"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemTemplate>
                                        <ItemContainerTemplate>
                                            <Border BorderBrush="White" BorderThickness="1">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Grid.Column="0" Content="+" Command="{Binding RegisterPatternCommand}" IsEnabled="{Binding ButtonEnable}" FontWeight="Bold" FontSize="20" Width="50" Height="40" Margin="5" VerticalAlignment="Center"/>
                                                    <Button Grid.Column="0" Content="POS" Command="{Binding RegisterPosCommand}" IsEnabled="{Binding ButtonEnable}" FontWeight="Bold" FontSize="15" Width="50" Height="40" Margin="5" VerticalAlignment="Center"/>
                                                    <TextBlock Grid.Column ="1" Text="{Binding Description}" VerticalAlignment="Center" Foreground="White" Margin="10 0 0 0" Width="300"/>
                                                </StackPanel>
                                            </Border>
                                        </ItemContainerTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ScrollViewer>
                        </GroupBox>

                        <UniformGrid Grid.Row="3" Columns="2">
                            <GroupBox Header="Z" Padding="3">
                                <UniformGrid Columns="2">
                                    <UniformGrid Columns="1" Rows="2">
                                        <Button Command="{Binding RaiseZCommand}">
                                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-up-bold-outline_Black.png"/>
                                        </Button>
                                        <Button Command="{Binding DropZCommand}">
                                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-down-bold-outline_Black.png"/>
                                        </Button>
                                    </UniformGrid>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Slider Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" TickPlacement="BottomRight" TickFrequency="1" Minimum="1" Maximum="3" Value="{Binding ZTickValue}"/>
                                        <Label Grid.Row="1" Content="{Binding ZDistanceValue}" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                                    </Grid>
                                </UniformGrid>
                            </GroupBox>
                            <GroupBox Header="Light" Padding="3">
                                <MahAppsControls:MetroAnimatedSingleRowTabControl  Background="Transparent">

                                    <MahAppsControls:MetroTabItem Background="DimGray" BorderThickness="1" BorderBrush="Black" Header="Current" MahAppsControls:ControlsHelper.HeaderFontSize="16">
                                        <UniformGrid Columns="2">
                                            <UniformGrid Columns="1" Rows="2">
                                                <RepeatButton Command="{Binding IncreaseLightIntensityCommand}">
                                                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-up-bold-outline_Black.png"/>
                                                </RepeatButton>
                                                <RepeatButton Command="{Binding DecreaseLightIntensityCommand}">
                                                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-down-bold-outline_Black.png"/>
                                                </RepeatButton>
                                            </UniformGrid>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="59*"/>
                                                    <RowDefinition Height="6*"/>
                                                    <RowDefinition Height="43*"/>
                                                    <RowDefinition Height="43*"/>
                                                </Grid.RowDefinitions>
                                                <Slider Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" TickPlacement="BottomRight" TickFrequency="1" Minimum="0" Maximum="1" Value="{Binding LightTickValue}"/>
                                                <Label Grid.Row="2" Content="{Binding SelectedLightType}" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                                                <Label Grid.Row="3" Content="{Binding LightValue}" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                                            </Grid>
                                        </UniformGrid>
                                    </MahAppsControls:MetroTabItem>
                                    <MahAppsControls:MetroTabItem Background="DimGray" BorderThickness="1" FontSize="10" BorderBrush="Black" Header="ModelFinder" MahAppsControls:ControlsHelper.HeaderFontSize="16">
                                        <UniformGrid Rows="2">
                                            <Button Content="Set Model Lights" Command="{Binding SetMFModelLightsCommand}"/>
                                            <Button Content="Set Model Child Lights" Command="{Binding SetMFChildLightsCommand}"/>

                                        </UniformGrid>
                                    </MahAppsControls:MetroTabItem>


                                </MahAppsControls:MetroAnimatedSingleRowTabControl>

                            </GroupBox>
                        </UniformGrid>

                        <Grid Grid.Row="4">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <RepeatButton Grid.Row="0" Grid.Column="0" FontSize="20" Command="{Binding PatternWidthPlusCommand}">
                                <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-split-vertical.png"/>
                            </RepeatButton>

                            <RepeatButton Grid.Row="0" Grid.Column="1" FontSize="20" Command="{Binding PatternWidthMinusCommand}">
                                <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-collapse-horizontal.png"/>
                            </RepeatButton>

                            <!--<Button FontSize="20" Command="{Binding FocusingCommand}">
                <Image Source="pack://application:,,,/ImageResourcePack;component/Images/Focusing.png"/>
            </Button>-->

                            <RepeatButton Grid.Row="1" Grid.Column="0" FontSize="20" Command="{Binding PatternHeightPlusCommand}">
                                <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-split-horizontal.png"/>
                            </RepeatButton>

                            <RepeatButton Grid.Row="1" Grid.Column="1" FontSize="20" Command="{Binding PatternHeightMinusCommand}">
                                <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-collapse-vertical.png"/>
                            </RepeatButton>

                        </Grid>
                        <!--<UniformGrid Grid.Row="3" Rows="2" Columns="3">
                <RepeatButton FontSize="20" Command="{Binding PatternWidthPlusCommand}">
                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-split-vertical.png"/>
                </RepeatButton>
                <RepeatButton FontSize="20" Command="{Binding PatternWidthMinusCommand}">
                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-collapse-horizontal.png"/>
                </RepeatButton>

                -->
                        <!--<Button FontSize="20" Command="{Binding FocusingCommand}">
                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/Focusing.png"/>
                </Button>-->
                        <!--

                <RepeatButton FontSize="20" Command="{Binding PatternHeightPlusCommand}">
                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-split-horizontal.png"/>
                </RepeatButton>
                <RepeatButton FontSize="20" Command="{Binding PatternHeightMinusCommand}">
                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-collapse-vertical.png"/>
                </RepeatButton>
            </UniformGrid>-->

                        <Grid Grid.Row="5" >
                            <Button Content="Align" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1"  FontSize="50" Command="{Binding AlignCommand}"/>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Background="DimGray" BorderThickness="1" BorderBrush="Black"  Header="CC Setting">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.0*"/>
                            <RowDefinition Height="2.6*"/>
                            <RowDefinition Height="3.2*"/>
                        </Grid.RowDefinitions>
                        <GroupBox Grid.Row="0" Header="Motion" Padding="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="5*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="2" Margin="0,-5,0,0" Orientation="Horizontal">
                                    <Label  Foreground="Orange" FontWeight="Bold" FontSize="15" Padding="0" VerticalAlignment="Center">Z :</Label>
                                    <Label Foreground="Orange" FontSize="15" Padding="0" VerticalAlignment="Center" Content="{Binding ZActualPos}"></Label>
                                </StackPanel>
                                <UniformGrid Grid.Column="4" Columns="0" Grid.Row="1" Margin="0, 0, -10, 0" >
                                    <UniformGrid   Rows="2">
                                        <Button Command="{Binding Manual_ZUPCommand}">
                                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-up-bold-outline_Black.png"/>
                                        </Button>
                                        <Button Command="{Binding Manual_ZDownCommand}">
                                            <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-down-bold-outline_Black.png"/>
                                        </Button>
                                    </UniformGrid>

                                </UniformGrid>
                                <Grid Grid.Column="5" Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2*"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <Slider Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" TickPlacement="BottomRight" TickFrequency="1" Minimum="1" Maximum="3" Value="{Binding Manual_ZTickValue}"/>
                                    <Label Grid.Row="1" Content="{Binding Manual_ZDistanceValue}" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                                </Grid>

                                <!--<StackPanel Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Margin="0,-5,0,0" Orientation="Horizontal">
                                <Label  Foreground="White" FontSize="15" Padding="0" VerticalAlignment="Top">PZ :</Label>
                                <Label Foreground="White" FontSize="15" Padding="0" VerticalAlignment="Top" Content="{Binding PZActualPos}"></Label>
                            </StackPanel>
                            <UniformGrid Grid.Column="2" Grid.Row="1" >
                                <UniformGrid  Rows="2">
                                    <Button Command="{Binding Manual_PZUPCommand}">
                                        <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-up-bold-outline_Black.png"/>
                                    </Button>
                                    <Button Command="{Binding Manual_PZDownCommand}">
                                        <Image Source="pack://application:,,,/ImageResourcePack;component/Images/arrow-down-bold-outline_Black.png"/>
                                    </Button>
                                </UniformGrid>

                            </UniformGrid>
                            <Grid Grid.Column="3" Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Slider Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" TickPlacement="BottomRight" TickFrequency="1" Minimum="1" Maximum="3" Value="{Binding Manual_PZTickValue}"/>
                                <Label Grid.Row="1" Content="{Binding Manual_PZDistanceValue}" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                            </Grid>-->
                                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.7*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Label Foreground="LightPink" FontWeight="Bold" Grid.Row="0" Content="LOADER" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Margin="5"/>
                                    <Button Background="LightPink" FontWeight="Bold" Grid.Row="1" Content="LD_LoadMove" Command="{Binding MoveToLoaderLoadCommand}"/>
                                    <Button Background="LightPink" FontWeight="Bold" Grid.Row="2"  Content="LD_ArmExtend" Command="{Binding MoveToArmExtendCommand}"/>
                                    <Button Background="LightPink" FontWeight="Bold" Grid.Row="3"  Content="LD_ArmRetract" Command="{Binding MoveToArmRetractCommand}"/>
                                </Grid>
                                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.7*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Label Foreground="Orange" FontWeight="Bold" Grid.Row="0" Content="STAGE" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Margin="5"/>
                                    <Button Background="Orange" FontWeight="Bold" Grid.Row="1" Content="Card Align Pos" Command="{Binding MoveToCardAlignPosCommand}"/>
                                    <Button Background="Orange" FontWeight="Bold" Grid.Row="2"  Content="Z Cleared Pos" Command="{Binding MoveToZClearedCommand}"/>
                                    <Button Background="Orange" FontWeight="Bold" Grid.Row="3" Content="Docking Pos" Command="{Binding MoveToCardDockPosCommand}"/>

                                </Grid>
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Row="1" Header="IO" Padding="0">
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="1.5*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Column="0" Grid.Row="0" BorderThickness="1" Margin="1">
                                        <Grid Width="125" Height="60">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.7*"/>
                                                <RowDefinition Height="1.2*"/>
                                            </Grid.RowDefinitions>


                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Door" ToolTip="{Binding Path=Key}" Foreground="White"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="12" Padding="0" Margin="0,2,0,0" />

                                            <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="White">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="10,0,100,25"  RadiusX="10" RadiusY="10" />
                                                </Path.Data>
                                            </Path>
                                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                <Ellipse  Width="20" Height="20" Margin="0,0,0,5" Fill="{Binding Path=IsDoorOpen , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=IsDoorOpen , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                <Label Foreground="Black" HorizontalAlignment="Center"  Margin="0,0,0,10" Content="{Binding Path=IsDoorOpen , Converter={StaticResource InputStringConvert}}"></Label>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="0" Grid.Row="1" BorderThickness="1" Margin="1">
                                        <Grid Width="125" Height="60">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.7*"/>
                                                <RowDefinition Height="1.2*"/>
                                            </Grid.RowDefinitions>


                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Pod Up" Foreground="White"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="12" Padding="0" Margin="0,2,0,0" />

                                            <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="White">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="10,0,100,25"  RadiusX="10" RadiusY="10" />
                                                </Path.Data>
                                            </Path>
                                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                <Ellipse  Width="20" Height="20" Margin="0,0,0,5" Fill="{Binding Path=IsCardPodUP , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=IsCardPodUP , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                <Label Foreground="Black" HorizontalAlignment="Center"  Margin="0,0,0,10" Content="{Binding Path=IsCardPodUP , Converter={StaticResource InputStringConvert}}"></Label>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="0" Grid.Row="2" BorderThickness="1" Margin="1">
                                        <Grid Width="125" Height="60">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.7*"/>
                                                <RowDefinition Height="1.2*"/>
                                            </Grid.RowDefinitions>


                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Pod Vac" Foreground="White"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="12" Padding="0" Margin="0,2,0,0" />

                                            <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="White">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="10,0,100,25"  RadiusX="10" RadiusY="10" />
                                                </Path.Data>
                                            </Path>
                                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                <Ellipse  Width="20" Height="20" Margin="0,0,0,5" Fill="{Binding Path=IsCardPodVac , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=IsCardPodVac , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                <Label Foreground="Black" HorizontalAlignment="Center"  Margin="0, 0, 0, 10" Content="{Binding Path=IsCardPodVac , Converter={StaticResource InputStringConvert}}"></Label>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="0" Grid.Row="3" BorderThickness="1" Margin="1">
                                        <Grid Width="125" Height="60">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.7*"/>
                                                <RowDefinition Height="1.2*"/>
                                            </Grid.RowDefinitions>


                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Tester Vac" Foreground="White"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="12" Padding="0" Margin="0,2,0,0" />

                                            <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="White">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="10,0,100,25"  RadiusX="10" RadiusY="10" />
                                                </Path.Data>
                                            </Path>
                                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                <Ellipse  Width="20" Height="20" Margin="0,0,0,5" Fill="{Binding Path=IsTesterVac , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=IsTesterVac , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                <Label Foreground="Black" HorizontalAlignment="Center"  Margin="0,0,0,10" Content="{Binding Path=IsTesterVac , Converter={StaticResource InputStringConvert}}"></Label>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="0" Grid.Row="4" BorderThickness="1" Margin="1">
                                        <Grid Width="125" Height="60">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.7*"/>
                                                <RowDefinition Height="1.2*"/>
                                            </Grid.RowDefinitions>


                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Pogo Vac" Foreground="White"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="12" Padding="0" Margin="0,2,0,0" />

                                            <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="White">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="10,0,100,25"  RadiusX="10" RadiusY="10" />
                                                </Path.Data>
                                            </Path>
                                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                <Ellipse  Width="20" Height="20" Margin="0,0,0,5" Fill="{Binding Path=IsPogoVac , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=IsPogoVac , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                <Label Foreground="Black" HorizontalAlignment="Center"  Margin="0,0,0,10" Content="{Binding Path=IsPogoVac , Converter={StaticResource InputStringConvert}}"></Label>
                                            </StackPanel>
                                        </Grid>
                                    </Border>

                                </Grid>
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Button Background="Beige" FontWeight="Bold" Foreground="Black"  Grid.Row="0" Grid.Column="0" Content="Door Open" Command="{Binding DoorOpenCommand}"/>
                                    <Button Background="Beige" FontWeight="Bold" Foreground="Black"  Grid.Row="0" Grid.Column="1" Content="Door Close" Command="{Binding DoorCloseCommand}"/>
                                    <Button Background="DeepSkyBlue" FontWeight="Bold" Foreground="Black" Grid.Row="1" Grid.Column="0" Content="Pod UP" Command="{Binding PodUpCommand}"/>
                                    <Button Background="DeepSkyBlue" FontWeight="Bold" Foreground="Black"  Grid.Row="1" Grid.Column="1" Content="Pod Down" Command="{Binding PodDownCommand}"/>
                                    <Button Background="GreenYellow" FontWeight="Bold" Foreground="Black"  Grid.Row="2" Grid.Column="0" Content="Pod Vac ON" Command="{Binding PodVacOnCommand}"/>
                                    <Button Background="GreenYellow" FontWeight="Bold" Foreground="Black"  Grid.Row="2" Grid.Column="1" Content="Pod Vac OFF" Command="{Binding PodVacOffCommand}"/>
                                    <Button Background="Purple" FontWeight="Bold" Foreground="Black"  Grid.Row="3" Grid.Column="0" Content="Tester Vac ON" Command="{Binding TesterVacOnCommand}"/>
                                    <Button Background="Purple" FontWeight="Bold" Foreground="Black"  Grid.Row="3" Grid.Column="1" Content="Tester Vac OFF" Command="{Binding TesterVacOffCommand}"/>
                                    <Button Background="Yellow" FontWeight="Bold" Foreground="Black"  Grid.Row="4" Grid.Column="0" Content="Pogo Vac ON" Command="{Binding PogoVacOnCommand}"/>
                                    <Button Background="Yellow" FontWeight="Bold" Foreground="Black"  Grid.Row="4" Grid.Column="1" Content="Pogo Vac OFF" Command="{Binding PogoVacOffCommand}"/>
                                </Grid>
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Row="2" Header="ParamSetting" Padding="0">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                                <TextBlock Text="Card Contact Pos Z:  " Foreground="White"/>
                                <TextBlock Text="{Binding CardContactPosZ}" Foreground="White" Width="40"/>
                            </StackPanel>-->
                                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                                    <TextBlock  FontWeight="Bold" Text="Card ID : " FontSize="15" Foreground="AliceBlue" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock  FontWeight="Bold" Text="{Binding CardID}" FontSize="15" Foreground="GreenYellow" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                                    <TextBlock  FontWeight="Bold" Text="Card Load POS ->" FontSize="15" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock  FontWeight="Bold" Text="{Binding AlignPosStr}" FontSize="15" Foreground="GreenYellow" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                    <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" FontSize="15" FontWeight="Bold" Text="Matched POS   ->" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock  FontWeight="Bold" Text="{Binding DockPosStr}" FontSize="15" Foreground="GreenYellow" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0">
                                    <TextBlock Text="Card Center Offset X1 :  " FontWeight="Bold" FontSize="14" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding CardCenterOffsetX1}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardCenterOffsetX1TextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBlock Text="         Y1 :  " FontWeight="Bold" FontSize="14" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardCenterOffsetY1}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardCenterOffsetY1TextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0">
                                    <TextBlock Text="Card Center Offset X2 :     " FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardCenterOffsetX2}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardCenterOffsetX2TextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBlock Text="          Y2 :  " FontWeight="Bold" FontSize="14" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardCenterOffsetY2}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardCenterOffsetY2TextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="0" >
                                    <TextBlock Text="Card Pod Center X :  " FontSize="15" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardPodCenterX}"  >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardPodCenterXTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBlock Text="          Y:  " FontWeight="Bold" FontSize="15" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardPodCenterY}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardPodCenterYTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="0" >
                                    <TextBlock Text="Card Load Z Limit :   "  FontWeight="Bold" Foreground="White" VerticalAlignment="Center" FontSize="15"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardLoadZLimit}"    >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardLoadZLimitTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="0" >
                                    <TextBlock Text="Card Load Z Interval ( ㎛ ) :     "  FontWeight="Bold" Foreground="White" VerticalAlignment="Center" FontSize="15"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardLoadZInterval}"    >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardLoadZIntervalTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="0" >
                                    <TextBlock Text="Card Unload Z Offset ( ㎛ ) :     "  FontWeight="Bold" Foreground="White" VerticalAlignment="Center" FontSize="15"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding CardUnloadZOffset}"    >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding CardUnloadZOffsetTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>

                                <!--<StackPanel Orientation="Horizontal" Grid.Row="9" Grid.Column="0" >
                                <TextBlock Text="Pattern Focusing Range ( ㎛ ) :     "  FontWeight="Bold" Foreground="White" VerticalAlignment="Center" FontSize="15"/>
                                <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding PatternFocusingRange}"    >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding PatternFocusingRangeTextBoxClickCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </StackPanel>-->

                                <StackPanel Orientation="Horizontal" Grid.Row="9" Grid.Column="0" >
                                    <TextBlock Text="Pattern Retry Count :     "  FontWeight="Bold" Foreground="White" VerticalAlignment="Center" FontSize="15"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding PatternRetryCount}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding PatternRetryCountTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>


                                <StackPanel Orientation="Horizontal" Grid.Row="10" Grid.Column="0" >
                                    <TextBlock Text="Docking Z Offset ( ㎛ ) :     "  FontWeight="Bold" Foreground="White" VerticalAlignment="Center" FontSize="15"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding DockOffsetZ}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DockOffsetZTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>


                                <StackPanel Orientation="Horizontal" Grid.Row="11" Grid.Column="0" >
                                    <TextBlock Text="Undocking Z Offset ( ㎛ ) :     " FontSize="15"  FontWeight="Bold" Foreground="White" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="0" Foreground="White" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding UndockOffsetZ}"   >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding UndockOffsetZTextBoxClickCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>


                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
        <Grid>
            <view:ScreenLock DataContext="{Binding SelectedStage}" Visibility="{Binding SelectedStage.LockMode}"/>
        </Grid>
    </Grid>
</UserControl>
