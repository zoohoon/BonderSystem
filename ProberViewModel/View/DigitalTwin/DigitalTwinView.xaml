<UserControl x:Class="ProberViewModel.View.DigitalTwinView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:pi="clr-namespace:ProberInterfaces;assembly=ProberInterfaces"
             xmlns:templateservice="clr-namespace:DataTemplateService;assembly=DataTemplateService"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:pvm="clr-namespace:ProberViewModel"
             xmlns:pvmd="clr-namespace:ProberViewModel.Data"
             xmlns:hjc="clr-namespace:HexagonJogControl;assembly=HexagonJogControl"
             xmlns:ljc="clr-namespace:LightJog;assembly=LightJog"
             xmlns:MapView="clr-namespace:MapView;assembly=MapView"
             xmlns:dutviewer="clr-namespace:DutViewer;assembly=DutViewer"
             xmlns:dutviewervm="clr-namespace:DutViewer.ViewModel;assembly=DutViewer"
             xmlns:needle="clr-namespace:NeedleCleanViewer;assembly=NeedleCleanViewer"
             xmlns:ucdutviewer="clr-namespace:ucDutViewer;assembly=ucDutViewer"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ProberViewModel.View"
             x:Name="UCdt"
             mc:Ignorable="d" 
             d:DesignHeight="940" d:DesignWidth="1280">

    <UserControl.Resources>
        <ResourceDictionary>

            <Style x:Key="ContentTextBox" TargetType="TextBox">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="18" />
                <Setter Property="MinWidth" Value="45"/>
            </Style>

            <!-- MapView Template -->
            <DataTemplate x:Key="MapViewTemplate" DataType="{x:Type pi:IWaferObject}" >
                <MapView:ucWaferMapviewer Grid.RowSpan="2" Margin="4" 
                    Lockable="True"
                    WaferObject="{Binding }" 
                    UnderDutDices="{Binding DataContext.Probing.ProbingProcessStatus.UnderDutDevs,
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                    Mode=FindAncestor}}"      
                    CursorXIndex="{Binding DataContext.StageSupervisor.WaferObject.CurrentMXIndex,
                    Mode=TwoWay, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl},
                    Mode=FindAncestor}}" 
                    CursorYIndex="{Binding DataContext.StageSupervisor.WaferObject.CurrentMYIndex,
                    Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type UserControl},
                    Mode=FindAncestor}}"
                    CoordinateManager="{Binding DataContext.CoordManager, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                    Mode=FindAncestor}}"
                    EnalbeClickToMove="{Binding DataContext.WaferObject.MapViewStageSyncEnable, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                    Mode=FindAncestor}}"
                    RenderMode="{Binding DataContext.WaferObject.MapViewControlMode, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                    Mode=FindAncestor}}"
                    StageSyncEnalbe="{Binding DataContext.WaferObject.MapViewStageSyncEnable, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                    Mode=FindAncestor}}"
                    StepLabel="{Binding DataContext.WaferObject.MapViewStepLabel, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                    Mode=FindAncestor}}"
                    CurCamera="{Binding DataContext.CurCam, Mode=OneWay, 
                    RelativeSource={RelativeSource AncestorType={x:Type UserControl},
                    Mode=FindAncestor}}" 
                    />
            </DataTemplate>

            <!-- DutView Template -->
            <DataTemplate x:Key="DutViewTemplate" DataType="{x:Type dutviewervm:DutViewerViewModel}" >
                <dutviewer:UcDutViewer />
            </DataTemplate>

            <!-- Displayport Template -->
            <DataTemplate x:Key="DisplayViewTemplate" DataType="{x:Type pi:IDisplayPort}" >
                <ContentControl x:Name="DisPlay" Content="{Binding ''}"/>
            </DataTemplate>

            <!-- RecipeEditor Template -->
            <DataTemplate x:Key="RecipeEditTemplate" DataType="{x:Type pvm:VmRecipeEditorMainPage}">
                <pvm:UcRecipeEditorMainPage/>
            </DataTemplate>

            <!-- NCView Template -->
            <DataTemplate x:Key="NeedleCleanViewTemplate" DataType="{x:Type needle:NeedleCleanViewModel}">
                <needle:NeedleCleanView/>
            </DataTemplate>

            <!--DutView Template-->
            <DataTemplate x:Key="DutViewerTemplate" DataType="{x:Type pi:IProbeCard}" >
                <ucdutviewer:ucDUTviewer DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"/>
            </DataTemplate>

            <templateservice:TemplateSelector x:Key="ViewTargetTemplateSelector" 
                                              MapViewDataTemplate="{StaticResource MapViewTemplate}"
                                              DutViewDataTemplate="{StaticResource DutViewTemplate}"
                                              DisplayViewDataTemplate="{StaticResource DisplayViewTemplate}"
                                              RecipeEditDataTemplate="{StaticResource RecipeEditTemplate}"
                                              NeedleCleanDataTemplate="{StaticResource NeedleCleanViewTemplate}"
                                              DutViewerDataTemplate="{StaticResource DutViewerTemplate}"/>

            <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />

            <local:FocusingRangeValidationRule x:Key="FocusingRangeValidationRule" />
            <local:LightRangeValidationRule x:Key="LightRangeValidationRule" />

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                    <ContentControl Width="600" Height="600" Content="{Binding MainViewTarget}" ContentTemplateSelector="{StaticResource ViewTargetTemplateSelector}"/>
                </Border>

                <Border HorizontalAlignment="Right" VerticalAlignment="Top" Margin="1" BorderThickness="0.6" BorderBrush="WhiteSmoke">
                    <Grid>
                        <ContentControl  Width="200" Height="200" Content="{Binding MiniViewTarget}" ContentTemplateSelector="{StaticResource ViewTargetTemplateSelector}"/>

                        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Width="48" Height="48" Background="Black" Foreground="White" 
                            Command="{Binding ViewSwapCommand}"
                            Visibility="{Binding MiniViewSwapVisibility}">
                            <materialDesign:PackIcon Kind="ArrowExpand" Height="42" Width="42"/>
                        </Button>
                    </Grid>
                </Border>
            </Grid>

            <Grid Grid.Row="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                    <ComboBox Margin="5" 
                                          ItemsSource="{Binding StageCamList}"
                                          SelectedValue="{Binding SelectedCam}"
                                          Foreground="WhiteSmoke"
                                          DisplayMemberPath="CamType"
                                          SelectedValuePath="CamType"/>
                                </Border>
                            </Grid>

                            <!-- &#xa;Grab -->

                            <Grid Grid.Row="1">
                                <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                    <StackPanel Orientation="Horizontal">
                                        <Button Content="Continuous" FontSize="14" Width="85" Command="{Binding StartGrabCommand}"/>
                                        <Button Content="Stop Grab" FontSize="14" Width="85" Command="{Binding StopGrabCommand}"/>
                                        <Button Content="Single Grab" FontSize="14" Width="85" Command="{Binding SingleGrabCommand}"/>
                                    </StackPanel>
                                </Border>
                            </Grid>

                            <Grid Grid.Row="2">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">

                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">

                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="ROI X (um): " Margin="-5" VerticalAlignment="Center" FontSize="12" Foreground="White"/>
                                                <TextBlock Foreground="White" VerticalAlignment="Center">
                                                <Run Text="{Binding CurCam_ROI_X}"/>
                                                </TextBlock>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="ROI Y (um): " Margin="-5" VerticalAlignment="Center" FontSize="12" Foreground="White"/>
                                                <TextBlock Foreground="White" VerticalAlignment="Center">
                                                <Run Text="{Binding CurCam_ROI_Y}"/>
                                                </TextBlock>
                                            </StackPanel>

                                        </StackPanel>

                                    </Border>
                                </Grid>

                                <Grid Grid.Column="1">
                                    <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">

                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">

                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Die Size X (um): " Margin="-11" VerticalAlignment="Center" FontSize="12" Foreground="White"/>
                                                <TextBlock Foreground="White" VerticalAlignment="Center">
                                                    <Run Text="{Binding dieSizeX}"/>
                                                </TextBlock>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Die Size Y (um): " Margin="-11" VerticalAlignment="Center" FontSize="12" Foreground="White"/>
                                                <TextBlock Foreground="White" VerticalAlignment="Center">
                                                    <Run Text="{Binding dieSizeY}"/>
                                                </TextBlock>
                                            </StackPanel>

                                        </StackPanel>

                                    </Border>
                                </Grid>
                            </Grid>

                        </Grid>

                        <Grid Grid.Row="1">
                            <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                <Viewbox>
                                    <!-- Light Jog -->
                                    <ljc:UcLightJog Margin="5" Width="250" Height="100"
                                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                                DataContext="{Binding LightJog}"
                                                Visibility="{Binding LightJogVisibility}"/>
                                </Viewbox>
                            </Border>
                        </Grid>
                    </Grid>

                    <Grid Grid.Column="1">
                        <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                            <Viewbox Width="250" Height="250">
                                <!-- Motion Jog -->
                                <hjc:UcHexagonJog Margin="5"
                                                  DataContext="{Binding MotionJog}" 
                                                  AssignedCamera="{Binding DataContext.CurCam, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                  IsEnabled="{Binding DataContext.MotionJogEnabled, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                  Visibility="{Binding DataContext.MotionJogVisibility, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"/>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <Grid Grid.Column="1">
            <Border Grid.Row="1" Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Border BorderThickness="2" BorderBrush="White">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Output : " Foreground="White" Height="50"  VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <TextBox Text="{Binding OutputFilePath}" Width="400" Height="50" TextWrapping="Wrap" Foreground="White" IsEnabled="False" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <Button Command="{Binding OpenOutputPathCommand}" Content="OPEN" Width="60" Height="50" FontSize="14"/>
                            </StackPanel>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="1">
                        <TabControl Background="Black" SelectedIndex="{Binding SeletedTabControlIndex}">
                            <!-- WAFER -->
                            <TabItem Header="WAFER">
                                <StackPanel Orientation="Vertical">

                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Column="0">
                                            <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="User X Coord : " 
                                                    HorizontalAlignment="Center" 
                                                    VerticalAlignment="Center" 
                                                    FontSize="14" 
                                                    Foreground="White"/>
                                                    <TextBox Style="{StaticResource ContentTextBox}"
                                                             VerticalAlignment="Center"
                                                             HorizontalAlignment="Center"
                                                             MinWidth="50"
                                                             Text="{Binding TargetUserIndex.XIndex}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                </StackPanel>
                                            </Border>
                                        </Grid>

                                        <Grid Grid.Column="1">

                                            <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="User Y Coord : " 
                                                           HorizontalAlignment="Center" 
                                                           VerticalAlignment="Center" 
                                                           FontSize="14" 
                                                           Foreground="White"/>
                                                    <TextBox Style="{StaticResource ContentTextBox}"
                                                             VerticalAlignment="Center" 
                                                             HorizontalAlignment="Center"
                                                             MinWidth="50"
                                                             Text="{Binding TargetUserIndex.YIndex}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                                <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                </StackPanel>
                                            </Border>
                                        </Grid>

                                        <Grid Grid.Column="2">
                                            <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Content="ADD" Command="{Binding AddScanDieCommand}" Width="55" Height="55"/>
                                                    <Button Content="DELETE" Command="{Binding DeleteScanDieCommand}" Width="55" Height="55"/>
                                                    <Button Content="CLEAR" Command="{Binding ClearScanDieCommand}" Width="55" Height="55"/>
                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                    </Grid>

                                    <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                        <ListView ItemsSource="{Binding TargetUserIndexs}" Height="200" SelectedItem="{Binding SelectedTargetUserIndex}">
                                            <ListView.View>
                                                <GridView>
                                                    <!-- X Index Column -->
                                                    <GridViewColumn Header="X Index" Width="Auto">
                                                        <GridViewColumn.DisplayMemberBinding>
                                                            <Binding Path="XIndex" />
                                                        </GridViewColumn.DisplayMemberBinding>
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>

                                                    <!-- Y Index Column -->
                                                    <GridViewColumn Header="Y Index" Width="Auto">
                                                        <GridViewColumn.DisplayMemberBinding>
                                                            <Binding Path="YIndex" />
                                                        </GridViewColumn.DisplayMemberBinding>
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </Border>

                                    <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid Grid.Column="0">
                                                <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                    <UniformGrid Rows="3" Columns="3" Width="200" VerticalAlignment="Center" HorizontalAlignment="Center">

                                                        <!-- top left -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.UpperLeft}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M11,5.35L5.35,11L5,5L11,5.35Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- up -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Up}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M12,2.5L8,7H16L12,2.5M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- top right -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.UpperRight}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M18.65,11L13,5.35L19,5L18.65,11Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- left -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Left}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M7,8L2.5,12L7,16V8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- Center -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Center}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M11,7A2,2 0 0,0 9,9V15A2,2 0 0,0 11,17H13A2,2 0 0,0 15,15V14H13V15H11V9H13V10H15V9A2,2 0 0,0 13,7H11Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- right -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Right}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M17,8V16L21.5,12L17,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- bottom left -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.LowerLeft}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M5.35,13L11,18.65L5,19L5.35,13Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- down -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Down}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M8,17L12,21.5L16,17H8Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                        <!-- bottom right -->
                                                        <Button Command="{Binding MoveToWaferPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.LowerRight}" Width="48" Height="48">
                                                            <Button.Content>
                                                                <Viewbox Width="48" Height="48">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M13,18.65L18.65,13L19,19L13,18.65Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Button.Content>
                                                        </Button>

                                                    </UniformGrid>
                                                </Border>
                                            </Grid>

                                            <Grid Grid.Column="1">

                                                <StackPanel Orientation="Vertical">

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Amout of overlap X (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding AmoutOfOverlap_X}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Amout of overlap Y (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding AmoutOfOverlap_Y}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Extension Area X (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding ExtensionArea_X}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Extension Area Y (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding ExtensionArea_Y}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Sleep (ms) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding millisecondsTimeoutAfterChuckMove}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </StackPanel>

                                                    <Button Content="SCAN" Command="{Binding WaferDieScanCommand}" CommandParameter="{x:Static pvmd:LocationEnum.UpperLeft}" Width="55" Height="55"/>

                                                </StackPanel>

                                            </Grid>
                                        </Grid>
                                    </Border>

                                </StackPanel>
                            </TabItem>

                            <!-- PIN -->
                            <TabItem Header="PIN">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Vertical">
                                        <Grid ShowGridLines="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid Grid.Column="0">
                                                <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Dut No. : " 
                                                               HorizontalAlignment="Right" 
                                                               VerticalAlignment="Center" 
                                                               FontSize="18" 
                                                               Foreground="White"/>
                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                                 VerticalAlignment="Center" 
                                                                 MinWidth="100"
                                                                 Text="{Binding TargetDutNo}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </StackPanel>
                                                </Border>
                                            </Grid>

                                            <Grid Grid.Column="1">
                                                <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Button Content="ADD" Command="{Binding AddScanDutCommand}" Width="55" Height="55"/>
                                                        <Button Content="DELETE" Command="{Binding DeleteScanDutCommand}" Width="55" Height="55"/>
                                                        <Button Content="CLEAR" Command="{Binding ClearScanDutCommand}" Width="55" Height="55"/>
                                                        <Button Content="ALL" Command="{Binding AddScanDutAllCommand}" Width="55" Height="55"/>
                                                    </StackPanel>
                                                </Border>
                                            </Grid>
                                        </Grid>

                                        <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                            <ListView ItemsSource="{Binding TargetDutNos}" Height="100" SelectedItem="{Binding SelectedTargetDutNo}">
                                                <ListView.View>
                                                    <GridView>
                                                        <GridViewColumn Header="Dut No." Width="Auto" DisplayMemberBinding="{Binding}" />
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </Border>

                                        <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="0">
                                                    <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                                        <UniformGrid Rows="3" Columns="3" Width="200" VerticalAlignment="Center" HorizontalAlignment="Center">

                                                            <!-- top left -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.UpperLeft}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M11,5.35L5.35,11L5,5L11,5.35Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- up -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Up}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M12,2.5L8,7H16L12,2.5M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- top right -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.UpperRight}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M18.65,11L13,5.35L19,5L18.65,11Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- left -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Left}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M7,8L2.5,12L7,16V8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- Center -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Center}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M11,7A2,2 0 0,0 9,9V15A2,2 0 0,0 11,17H13A2,2 0 0,0 15,15V14H13V15H11V9H13V10H15V9A2,2 0 0,0 13,7H11Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- right -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Right}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M17,8V16L21.5,12L17,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- bottom left -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.LowerLeft}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M5.35,13L11,18.65L5,19L5.35,13Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- down -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.Down}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M8,17L12,21.5L16,17H8Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                            <!-- bottom right -->
                                                            <Button Command="{Binding MoveToPinPositionCommand}" CommandParameter="{x:Static pvmd:LocationEnum.LowerRight}" Width="48" Height="48">
                                                                <Button.Content>
                                                                    <Viewbox Width="48" Height="48">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="Black" Data="M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M13,18.65L18.65,13L19,19L13,18.65Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Button.Content>
                                                            </Button>

                                                        </UniformGrid>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="1">

                                                    <StackPanel Orientation="Vertical">

                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="Amout of overlap X (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding AmoutOfOverlap_X}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="Amout of overlap Y (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding AmoutOfOverlap_Y}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="Extension Area X (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding ExtensionArea_X}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="Extension Area Y (um) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding ExtensionArea_Y}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="Sleep (ms) : " 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" 
                                                       FontSize="18" 
                                                       Foreground="White"/>
                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                         Margin="-20,0,0,0"
                                                         VerticalAlignment="Center" 
                                                         Text="{Binding millisecondsTimeoutAfterChuckMove}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </StackPanel>

                                                        <ToggleButton Style="{StaticResource MetroFlatToggleButton}" Margin="2" Content="Pin Height Manual Mode" Width="Auto"
                                                              IsChecked="{Binding PinHeightManualMode, Mode=TwoWay}"/>

                                                        <Button Content="SCAN" Command="{Binding CardDutScanCommand}" CommandParameter="{x:Static pvmd:LocationEnum.UpperLeft}" Width="55" Height="55">
                                                        </Button>
                                                    </StackPanel>

                                                </Grid>
                                            </Grid>
                                        </Border>

                                        <Border Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="1.3*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="0">

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>

                                                    <Grid Grid.Row="0">
                                                        <GroupBox>

                                                            <GroupBox.Header>
                                                                <Grid Height="Auto">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="0">
                                                                        <Label Content="Focusing" Foreground="White" FontSize="14" Margin="0"/>
                                                                    </Grid>

                                                                    <Grid Grid.Column="1">

                                                                        <CheckBox Content="Enable" 
                             Foreground="White" 
                             Background="LightGray" 
                             BorderBrush="Black" 
                             FontSize="14" 
                             Margin="0" 
                             IsChecked="{Binding FocusingEnable}" />
                                                                        <!--<CheckBox Content="Enable" Foreground="White" FontSize="14" Margin="0" IsChecked="{Binding FocusingEnable}" />-->
                                                                    </Grid>
                                                                </Grid>
                                                            </GroupBox.Header>

                                                            <Grid>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>

                                                                <Grid Grid.Column="0">
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <Label Content="Range : "
                                                                               HorizontalAlignment="Left" 
                                                                               VerticalAlignment="Center" 
                                                                               Foreground="White" Margin="-10,0,0,0"/>
                                                                        <TextBox Style="{StaticResource ContentTextBox}"
                                                                                 VerticalAlignment="Center"
                                                                                 MinWidth="50" 
                                                                                 Margin="-10,0,0,0">
                                                                            <TextBox.Text>
                                                                                <Binding Path="FocusingRange" UpdateSourceTrigger="PropertyChanged">
                                                                                    <Binding.ValidationRules>
                                                                                        <local:FocusingRangeValidationRule/>
                                                                                    </Binding.ValidationRules>
                                                                                </Binding>
                                                                            </TextBox.Text>
                                                                            <i:Interaction.Triggers>
                                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                                           CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                </i:EventTrigger>
                                                                            </i:Interaction.Triggers>
                                                                        </TextBox>
                                                                    </StackPanel>
                                                                </Grid>

                                                                <Grid Grid.Column="1">
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <Label Content="Interval : "
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center" 
                        Foreground="White" Margin="-10,0,0,0"/>
                                                                        <TextBox Style="{StaticResource ContentTextBox}"
                          VerticalAlignment="Center"
                          MinWidth="50" Margin="-10,0,0,0"
                          Text="{Binding FocusingInterval}">
                                                                            <i:Interaction.Triggers>
                                                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                </i:EventTrigger>
                                                                            </i:Interaction.Triggers>
                                                                        </TextBox>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </GroupBox>
                                                    </Grid>

                                                    <Grid Grid.Row="1">
                                                        <GroupBox Header="Advanced">
                                                            <StackPanel>
                                                                <RadioButton Content="Not use" Foreground="White"
                                                                             IsChecked="{Binding SelectedOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:AdvancedOption.NotUse}}" />
                                                                <RadioButton Content="Reg. Pin" Foreground="White" 
                                                                             IsChecked="{Binding SelectedOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:AdvancedOption.RegPin}}" />
                                                                <RadioButton Content="Reg. Key" Foreground="White" 
                                                                            IsChecked="{Binding SelectedOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:AdvancedOption.RegKey}}" />
                                                                <RadioButton Content="Reg. Pin &amp; Key" Foreground="White" 
                                                                            IsChecked="{Binding SelectedOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:AdvancedOption.RegPinAndKey}}" />
                                                                <!--<RadioButton Content="Pin Per Dut" Foreground="White"
                                                                             IsChecked="{Binding SelectedOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:AdvancedOption.PinPerDut}}" />-->
                                                            </StackPanel>
                                                        </GroupBox>
                                                    </Grid>
                                                </Grid>

                                                <Grid Grid.Column="1">
                                                    <GroupBox>

                                                        <GroupBox.Header>
                                                            <Grid Height="Auto">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>

                                                                <Grid Grid.Column="0">
                                                                    <Label Content="Light" Foreground="White" FontSize="14" Margin="0"/>
                                                                </Grid>

                                                                <Grid Grid.Column="1">
                                                                    <CheckBox Content="Enable" 
                                                                                Foreground="White" 
                                                                                Background="LightGray" 
                                                                                BorderBrush="Black" 
                                                                                FontSize="14" 
                                                                                Margin="0" 
                                                                                IsChecked="{Binding LightEnable}" />
                                                                </Grid>
                                                            </Grid>
                                                        </GroupBox.Header>

                                                        <Grid>

                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>

                                                            <Grid Grid.Row="0">

                                                                <StackPanel Orientation="Vertical">
                                                                    <GroupBox Header="COAXIAL">

                                                                        <StackPanel Orientation="Horizontal">
                                                                            <Label Content="S - E : "
                                                            VerticalAlignment="Center" 
                                                            FontSize="18" 
                                                            Foreground="White" Margin="-10,0,0,0"/>

                                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                              VerticalAlignment="Center" 
                                                              MinWidth="50"
                                                              Margin="-10,0,0,0">
                                                                                <TextBox.Text>
                                                                                    <Binding Path="COAXIAL_LightStart" UpdateSourceTrigger="PropertyChanged">
                                                                                        <Binding.ValidationRules>
                                                                                            <local:LightRangeValidationRule/>
                                                                                        </Binding.ValidationRules>
                                                                                    </Binding>
                                                                                </TextBox.Text>
                                                                                <i:Interaction.Triggers>
                                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                    </i:EventTrigger>
                                                                                </i:Interaction.Triggers>
                                                                            </TextBox>

                                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                              VerticalAlignment="Center" 
                                                              MinWidth="50">
                                                                                <TextBox.Text>
                                                                                    <Binding Path="COAXIAL_LightEnd" UpdateSourceTrigger="PropertyChanged">
                                                                                        <Binding.ValidationRules>
                                                                                            <local:LightRangeValidationRule/>
                                                                                        </Binding.ValidationRules>
                                                                                    </Binding>
                                                                                </TextBox.Text>
                                                                                <i:Interaction.Triggers>
                                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                    </i:EventTrigger>
                                                                                </i:Interaction.Triggers>
                                                                            </TextBox>

                                                                            <Label Content="Interval : "
VerticalAlignment="Center" 
FontSize="18"
Foreground="White" Margin="-10,0,0,0"/>
                                                                            <TextBox Style="{StaticResource ContentTextBox}"
  VerticalAlignment="Center" 
  MinWidth="50" Margin="-10,0,0,0"
  Text="{Binding COAXIAL_LightInterval}">
                                                                                <i:Interaction.Triggers>
                                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                    </i:EventTrigger>
                                                                                </i:Interaction.Triggers>
                                                                            </TextBox>
                                                                        </StackPanel>
                                                                    </GroupBox>

                                                                    <GroupBox Header="AUX">

                                                                        <StackPanel Orientation="Horizontal">
                                                                            <Label Content="S - E : "
                                                            VerticalAlignment="Center" 
                                                            FontSize="18" 
                                                            Foreground="White" Margin="-10,0,0,0"/>

                                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                              VerticalAlignment="Center" 
                                                              MinWidth="50"
                                                              Margin="-10,0,0,0">
                                                                                <TextBox.Text>
                                                                                    <Binding Path="AUX_LightStart" UpdateSourceTrigger="PropertyChanged">
                                                                                        <Binding.ValidationRules>
                                                                                            <local:LightRangeValidationRule/>
                                                                                        </Binding.ValidationRules>
                                                                                    </Binding>
                                                                                </TextBox.Text>
                                                                                <i:Interaction.Triggers>
                                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                    </i:EventTrigger>
                                                                                </i:Interaction.Triggers>
                                                                            </TextBox>

                                                                            <TextBox Style="{StaticResource ContentTextBox}"
                                                              VerticalAlignment="Center" 
                                                              MinWidth="50">
                                                                                <TextBox.Text>
                                                                                    <Binding Path="AUX_LightEnd" UpdateSourceTrigger="PropertyChanged">
                                                                                        <Binding.ValidationRules>
                                                                                            <local:LightRangeValidationRule/>
                                                                                        </Binding.ValidationRules>
                                                                                    </Binding>
                                                                                </TextBox.Text>
                                                                                <i:Interaction.Triggers>
                                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                    </i:EventTrigger>
                                                                                </i:Interaction.Triggers>
                                                                            </TextBox>

                                                                            <Label Content="Interval : "
VerticalAlignment="Center" 
FontSize="18"
Foreground="White" Margin="-10,0,0,0"/>
                                                                            <TextBox Style="{StaticResource ContentTextBox}"
  VerticalAlignment="Center" 
  MinWidth="50" Margin="-10,0,0,0"
  Text="{Binding AUX_LightInterval}">
                                                                                <i:Interaction.Triggers>
                                                                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                                                                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                                    </i:EventTrigger>
                                                                                </i:Interaction.Triggers>
                                                                            </TextBox>
                                                                        </StackPanel>
                                                                    </GroupBox>

                                                                </StackPanel>
                                                            </Grid>

                                                        </Grid>
                                                    </GroupBox>
                                                </Grid>
                                            </Grid>
                                        </Border>

                                    </StackPanel>
                                </StackPanel>
                            </TabItem>

                            <!-- Simul -->
                            <TabItem Header="Simul">

                                <StackPanel Orientation="Vertical">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Border Grid.Row="0" Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                            <StackPanel Orientation="Horizontal">
                                                <StackPanel Orientation="Vertical">

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Server IP : " VerticalAlignment="Center"/>
                                                        <Label Content="{Binding VirtualConnector.m_serverIP}" VerticalAlignment="Center" MinWidth="200" MinHeight="30" Background="White" Foreground="Black"/>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Server Port : " VerticalAlignment="Center"/>
                                                        <TextBox Text="{Binding VirtualConnector.m_serverPort}" VerticalAlignment="Center" MinWidth="200" MinHeight="30" Background="White" Foreground="Black"/>
                                                    </StackPanel>

                                                </StackPanel>

                                                <Button Command="{Binding ServerStartCommand}" Content="Server Start" FontSize="14" Width="100" FontWeight="Bold"/>
                                                <Button Command="{Binding ServerDisconnectCommand}" Content="Server Disconnect" FontSize="14" Width="100" FontWeight="Bold"/>
                                            </StackPanel>
                                        </Border>

                                        <Border Grid.Row="1" Margin="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                                            <GroupBox Header="Commands">
                                                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">

                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                        <Label Content="X step"/>
                                                        <TextBox Text="{Binding XStep}" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                        <Label Content="Y step"/>
                                                        <TextBox Text="{Binding YStep}" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                                    </StackPanel>

                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                        <Label Content="Z step"/>
                                                        <TextBox Text="{Binding ZStep}" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                                    </StackPanel>

                                                    <Button Content="Move" Command="{Binding VirtualMoveCommand}"/>


                                                    <CheckBox Content="Show probing status" Foreground="White" 
                                                      IsChecked="{Binding VirtualConnector.IsVirtualProbing, Mode=OneWay}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Checked" >
                                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.VirtualProbingCommand, ElementName=UCdt}" CommandParameter="{x:Static s:Boolean.TrueString}"/>
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="Unchecked" >
                                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.VirtualProbingCommand, ElementName=UCdt}" CommandParameter="{x:Static s:Boolean.FalseString}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="1.6" ScaleY="1.6" />
                                                        </CheckBox.LayoutTransform>
                                                    </CheckBox>

                                                </StackPanel>
                                            </GroupBox>
                                        </Border>

                                        <Border Grid.Row="2" BorderBrush="DarkGray" BorderThickness="1">
                                            <ListBox x:Name="LogListBox" Grid.Row="1" ItemsSource="{Binding VirtualConnector.SimulCommandPrcoessedlist}" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Mode=OneWay}" Foreground="White"/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Border>

                                    </Grid>
                                </StackPanel>


                            </TabItem>

                        </TabControl>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
