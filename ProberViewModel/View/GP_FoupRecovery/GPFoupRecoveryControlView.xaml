<UserControl x:Class="ProberViewModel.GPFocupRecoveryControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:foup3d="clr-namespace:FoupMainControl"
             xmlns:local="clr-namespace:ProberViewModel"
             xmlns:iop="clr-namespace:IOPanelControl;assembly=IOPanelControl"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="960" d:DesignWidth="1800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
                <ResourceDictionary Source="/SettingControlStyle;component/SettingViewStyleDictionaly.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="DefaultBtn" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard AutoReverse="True" RepeatBehavior="Forever" x:Key="FlashingButtonSB">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" >
                    <EasingColorKeyFrame KeyTime="0" Value="#FFDDDDDD"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF1D1D1D">
                        <EasingColorKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut"/>
                        </EasingColorKeyFrame.EasingFunction>
                    </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>

            <Style x:Key="ItemsStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="Height" Value="40" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>

                            <DockPanel LastChildFill="True" Background="Aquamarine">
                                <Viewbox VerticalAlignment="Stretch">
                                    <Image DockPanel.Dock="Left"/>
                                </Viewbox>
                            </DockPanel>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style> 
            <local:SelectedIndexToBoolConverter x:Key="SelectedIndexToBoolConverter" />
            <local:SelectedItemToBooleanConverter x:Key="SelectedItemToBooleanConverter" />
            <local:BooleanToInverseConverter x:Key="BooleanToInverseConverter" />
            <local:EllipseInputFill x:Key="EllipseInputFill"/>
            <local:EllipseInputStroke x:Key="EllipseInputStroke"/>
            <local:InputStringColor x:Key="InputStringColor"/>
            <local:InputStringConvert x:Key="InputStringConvert"/>
            <local:IsActiveBrushConvert x:Key="IsActiveBrushConvert"/>
            <local:RectGreenFill x:Key="RectGreenFill"/>
            <local:RectRedFill x:Key="RectRedFill"/>
            <local:RectOrangeFill x:Key="RectOrangeFill"/>
            <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <local:BooleanToMaxWidthConverter x:Key="BooleanToMaxWidthConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.3*"/>
            <ColumnDefinition Width="1.55*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.3*"/>
                <RowDefinition Height="0.7*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="1.5*"/>
            </Grid.RowDefinitions>
            <!-- Foup Select -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1.3*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <Label Content="Cassette Number : " FontWeight="DemiBold" Padding="0"/>
                    <ComboBox Width="40" Background="Black" ItemsSource="{Binding FoupCount}" SelectedItem="{Binding SelectedFoup, Mode=TwoWay , TargetNullValue=''}" HorizontalAlignment="Left" Padding="0" Height="30" Margin="0,15,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="1">
                    <Label Content="State :" FontWeight="DemiBold" Padding="0"/>
                    <Label Content="{Binding SelectedFoupModule.ModuleState.State}" HorizontalAlignment="Left" Padding="0"  FontWeight="DemiBold"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="2">
                    <Label Padding="0" Content="Cassette ID :" FontWeight="DemiBold"/>
                    <Label Padding="0" Content="{Binding SelectedFoupCassetteID}" HorizontalAlignment="Left" FontWeight="DemiBold"/>
                </StackPanel>
            </Grid>
            <Border Grid.Row="1" Padding="20" BorderThickness="3" BorderBrush="White" Margin="12">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="0" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.AlarmLamp, Converter={StaticResource RectRedFill}, ConverterParameter=0}" Stroke="DimGray" ></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15" >ALARM</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="1" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.BusyLamp, Converter={StaticResource RectOrangeFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">BUSY</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="2" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.ReserveLamp, Converter={StaticResource RectGreenFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">RESERVED</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="3" Margin="-10">
                        <Rectangle Width="30"  Height="50" Fill="{Binding SelectedFoupModule.foupInfo.AutoLamp, Converter={StaticResource RectOrangeFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">AUTO</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="4" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.LoadLamp, Converter={StaticResource RectGreenFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">LOAD</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="5" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.UnloadLamp, Converter={StaticResource RectRedFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">UNLOAD</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="6" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.PlacementLamp, Converter={StaticResource RectGreenFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">PLACEMENT</Label>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="7" Margin="-10">
                        <Rectangle Width="30" Height="50" Fill="{Binding SelectedFoupModule.foupInfo.PresenceLamp, Converter={StaticResource RectGreenFill}, ConverterParameter=0}" Stroke="DimGray"></Rectangle>
                        <Label Padding="0" Margin="5" HorizontalAlignment="Center" Foreground="White" FontSize="15">PRESENCE</Label>
                    </StackPanel>

                </Grid>
            </Border>
            <foup3d:Foup12Inch DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"   Height="800" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Grid.Row="2" Grid.RowSpan="2"   />
            <!-- Sensor -->
        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="0.3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TabControl  BorderThickness="0" Padding="0" Background="Black"  SelectedIndex="{Binding SeletedTabIndex , Mode=TwoWay}"  >
                <TabItem x:Name="LoadTab" Header="Load" IsEnabled="{Binding SeletedTabIndex, Converter={StaticResource SelectedIndexToBoolConverter}, ConverterParameter=0}" Background="DimGray" HorizontalAlignment="Right" Visibility="Visible" BorderThickness="0" BorderBrush="White"  >
                   
                </TabItem>
                <TabItem x:Name="UnLoadTab" Header="Unload" IsEnabled="{Binding SeletedTabIndex, Converter={StaticResource SelectedIndexToBoolConverter}, ConverterParameter=1}" Background="DimGray" HorizontalAlignment="Right" BorderThickness="0" BorderBrush="White" >
                    
                </TabItem>

            </TabControl>
            <Grid Background="Black"  Margin="0,43,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="0.2*"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Grid.Column="0"
                Header="Sequence List" Margin="8, 0, 8, 0"
                      Foreground="White"
                      FontSize="15"
                      FontWeight="Bold"                      
                              >
                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="LoadSequenceListBox" Grid.Column="0"  Background="#333333" FontSize="20" ItemsSource="{Binding SelectedFoupModule.ProcManager.SelectedProcedureStateMaps}"
                                      SelectedIndex="{Binding CurIndex, Mode=OneWay}"  Margin="0,0,-2,0" >
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="1"/>
                                    <Setter Property="Foreground" Value="Orange"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate >
                                    <Grid Margin="0"> <!--MouseMove="Grid_MouseMove" MouseLeave="Grid_MouseLeave">-->
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2.3*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"  FontSize="20" 
                                    Text="{Binding Path=Procedure.Caption}"/>
                                        <TextBlock Grid.Column="1"  FontSize="20" 
                                    Text="{Binding Path=ProcedureStateEnum}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Background="#333333" Margin="0,0,-2,0"  >
                            <Grid x:Name="InputGrid" Visibility="Visible">
                               <Grid.RowDefinitions>
                                   <RowDefinition Height="0.5*"/>
                                   <RowDefinition Height="1*"/>
                                   <RowDefinition Height="0.5*"/>
                                   <RowDefinition Height="1*"/>
                               </Grid.RowDefinitions>
                               <Label VerticalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center" Padding="0" Foreground="YellowGreen" FontSize="18" Visibility="Visible">REQUIRED INPUT IO</Label>
                               <Border BorderThickness="0" Grid.Row="1" BorderBrush="YellowGreen" Visibility="Visible">
                                    <Grid  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" VerticalAlignment="Center">
                                        <ItemsControl ItemsSource="{Binding CurProcedure.Behavior.RequiredInputs}"  Margin="0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Border BorderThickness="3" Margin="2" BorderBrush="YellowGreen">
                                                        <Grid Width="110" Height="60">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="1*"/>
                                                                <RowDefinition Height="1.2*"/>
                                                            </Grid.RowDefinitions>


                                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=Alias}" ToolTip="{Binding Path=Key}" Foreground="YellowGreen"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="13" Padding="0" Margin="0,2,0,0" />

                                                            <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="YellowGreen">
                                                                <Path.Data>
                                                                    <RectangleGeometry Rect="10,0,90,25"  RadiusX="10" RadiusY="10" />
                                                                </Path.Data>
                                                            </Path>
                                                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                                <Ellipse  Width="20" Height="20" Margin="0" Fill="{Binding Path=Value , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=Value , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                                <Label Foreground="{Binding Path=Value, Converter={StaticResource InputStringColor}}" HorizontalAlignment="Center"  Margin="0,-5,0,4.5" Content="{Binding Path=Value , Converter={StaticResource InputStringConvert}}"></Label>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>

                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </Grid>
                            </Border>
                               <Label VerticalContentAlignment="Center" Grid.Row="2" HorizontalAlignment="Center" Padding="0" Foreground="Orange" FontSize="18" Visibility="Visible">CURRENT INPUT IO</Label>
                               <Border BorderThickness="0" Grid.Row="3" BorderBrush="Orange" Visibility="Visible">
                                   <Grid  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" VerticalAlignment="Center">
                                    <ItemsControl ItemsSource="{Binding CurProcedure.Behavior.Inputs}"  Margin="0">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderThickness="3" Margin="2" BorderBrush="Orange">
                                                    <Grid Width="110" Height="60">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="1*"/>
                                                            <RowDefinition Height="1.2*"/>
                                                        </Grid.RowDefinitions>


                                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=Alias}" ToolTip="{Binding Path=Key}" Foreground="Orange"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="13" Padding="0" Margin="0,2,0,0" />

                                                        <Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="Orange">
                                                            <Path.Data>
                                                                <RectangleGeometry Rect="10,0,90,25"  RadiusX="10" RadiusY="10" />
                                                            </Path.Data>
                                                        </Path>
                                                        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                            <Ellipse  Width="20" Height="20" Margin="0" Fill="{Binding Path=Value , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=Value , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                                <Label Foreground="{Binding Path=Value, Converter={StaticResource InputStringColor}}" HorizontalAlignment="Center"  Margin="0,-5,0,4.5" Content="{Binding Path=Value , Converter={StaticResource InputStringConvert}}"></Label>
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>

                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                               </Border>
                            </Grid>
                        </Grid>
                        <!--<ListBox  Grid.Column="1" Width="350" Background="#333333" FontSize="20" ItemsSource="{Binding SelectedFoupModule.ProcManager.SelectedProcedureStateMaps}" 
                                      SelectedItem="{Binding SelectedLoadProcedure}" Margin="0,0,-2,0">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="1"/>
                                    <Setter Property="Foreground" Value="Orange"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,2">
                                        <TextBlock Foreground="White" FontSize="20" 
                                    Text="{Binding Path=ProcedureStateEnum}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>-->
                    </Grid>
                </GroupBox>
                <GroupBox   Grid.Row="1"
                    Header="Sequence Control"
                    Margin="8, 0, 8, 0"
                    Foreground="White"
                    FontSize="12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Margin="2.5,5,2.5,2.5"  
                                        Command="{Binding SequencesFastPrevCammand}" HorizontalAlignment="Stretch" Grid.Column="0"   >
                            <Button.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Viewbox Grid.Row="0" >
                                        <materialDesign:PackIcon Kind="SkipBackward" Foreground="Black" Width="24" Height="24"/>
                                    </Viewbox>
                                    <TextBlock Margin="0,4,0,2" FontSize="15" Grid.Row="1" 
                                                TextAlignment="Center" FontWeight="Bold"
                                                Text="Fast Prev"
                                    />
                                </Grid>
                            </Button.Content>
                        </Button>
                        <Button Margin="2.5,5,2.5,2.5"  
                                        Command="{Binding SequencesPrevCammand}" HorizontalAlignment="Stretch" Grid.Column="1"   >
                            <Button.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Viewbox Grid.Row="0" >
                                        <materialDesign:PackIcon Kind="SkipPrevious" Foreground="Black" Width="24" Height="24"/>
                                    </Viewbox>
                                    <TextBlock Margin="0,4,0,2" FontSize="15" Grid.Row="1" 
                                                TextAlignment="Center" FontWeight="Bold"
                                                Text="Prev"
                                    />
                                </Grid>
                            </Button.Content>
                        </Button>
                        <Button Margin="2.5,5,2.5,2.5"
                                        Command="{Binding SequencesContinueCammand}"  HorizontalAlignment="Stretch" Grid.Column="2"  >

                            <Button.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Viewbox Grid.Row="0" >
                                        <materialDesign:PackIcon Kind="SkipNext" Foreground="Black" Width="24" Height="24"/>
                                    </Viewbox>
                                    <TextBlock Margin="0,4,0,2" FontSize="15" Grid.Row="1" 
                                                TextAlignment="Center" FontWeight="Bold"
                                                Text="Next"
                                    />
                                </Grid>
                            </Button.Content>
                        </Button>
                        <Button Margin="2.5,5,2.5,2.5"
                                        Command="{Binding SequencesFaseContinueCammand}"  HorizontalAlignment="Stretch" Grid.Column="3"  >

                            <Button.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Viewbox Grid.Row="0" >
                                        <materialDesign:PackIcon Kind="SkipForward" Foreground="Black" Width="24" Height="24"/>
                                    </Viewbox>
                                    <TextBlock Margin="0,4,0,2" FontSize="15" Grid.Row="1" 
                                                TextAlignment="Center" FontWeight="Bold"
                                                Text="Fast Next"
                                    />
                                </Grid>
                            </Button.Content>
                        </Button>
                    </Grid>
                </GroupBox>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="1" Margin="0,43,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.2*"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="INPUT" Foreground="White" FontSize="15" FontWeight="Bold" Margin="8, 0, 8, 0">
                    <ScrollViewer Grid.Row="0" Margin="0">
                        <Grid  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible">
                            <ItemsControl ItemsSource="{Binding SelectedFoupModule.Inputs}"  Margin="0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="1" Margin="1" BorderBrush="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}">
                                            <Grid Width="110" Height="60">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="1*"/>
                                                    <RowDefinition Height="1.2*"/>
                                                </Grid.RowDefinitions>


                                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=Alias}" ToolTip="{Binding Path=Key}" Foreground="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="13" Padding="0" Margin="0,2,0,0" />

                                                <Path StrokeThickness="2" Fill="LightGray" Grid.Column="0" Grid.Row="1" Stroke="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}">
                                                    <Path.Data>
                                                        <RectangleGeometry Rect="10,0,90,25"  RadiusX="10" RadiusY="10" />
                                                    </Path.Data>
                                                </Path>
                                                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                    <Ellipse  Width="20" Height="20" Margin="0" Fill="{Binding Path=Value , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=Value , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                    <Label Foreground="{Binding Path=Value, Converter={StaticResource InputStringColor}}" HorizontalAlignment="Center"  Margin="0,-5,0,4.5" Content="{Binding Path=Value , Converter={StaticResource InputStringConvert}}"></Label>
                                                </StackPanel>
                                            </Grid>
                                        </Border>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </ScrollViewer>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="OUTPUT" Foreground="White" FontSize="15" FontWeight="Bold" Margin="8, 0, 8, 0" Visibility="Visible">
                  
                    <ScrollViewer Grid.Row="0" Margin="0">
                        <Grid  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" IsEnabled="{Binding IsEngineerModeChecked}">
                            <ItemsControl ItemsSource="{Binding SelectedFoupModule.Outputs}"  Margin="0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="1" Margin="1" BorderBrush="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}">
                                            <Grid Width="110" Height="60">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="1*"/>
                                                    <RowDefinition Height="1.2*"/>
                                                </Grid.RowDefinitions>


                                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=Alias}" ToolTip="{Binding Path=Key}" Foreground="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}"  TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                                           TextAlignment="Center" FontWeight="Bold" FontSize="13" Padding="0" Margin="0,2,0,0" />

                                                <!--<Path StrokeThickness="2" Fill="Silver" Grid.Column="0" Grid.Row="1" Stroke="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}">
                                                    <Path.Data>
                                                        <RectangleGeometry Rect="10,0,90,25"  RadiusX="10" RadiusY="10" />
                                                    </Path.Data>
                                                </Path>-->
                                                <ToggleButton   BorderThickness="2"   Margin="-2" Background="Silver" Grid.Column="0" Grid.Row="1"   BorderBrush="{Binding Path=IsActive.Value , Converter={StaticResource IsActiveBrushConvert}}" IsChecked="{Binding Path=Value}" >
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Checked">
                                                            <i:InvokeCommandAction Command="{Binding OutputOnCommand}"/>
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="Unchecked">
                                                            <i:InvokeCommandAction Command="{Binding OutputOffCommand}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </ToggleButton>
                                                <!--<StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="15,-7,0,0"  >

                                                    <Ellipse  Width="20" Height="20" Margin="0" Fill="{Binding Path=Value , Converter={StaticResource EllipseInputFill}}" Stroke="{Binding Path=Value , Converter={StaticResource EllipseInputStroke}}" StrokeThickness="2" ></Ellipse>
                                                    <Label Foreground="Black" HorizontalAlignment="Center"  Margin="0,-5,0,4.5" Content="{Binding Path=Value , Converter={StaticResource InputStringConvert}}"></Label>
                                                </StackPanel>-->
                                            </Grid>
                                        </Border>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </ScrollViewer>
                </GroupBox>
                <Grid Grid.Row="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width="0.7*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="0" Margin="15,0,0,0" VerticalAlignment="Center">
                        <Label  VerticalAlignment="Center" Content="To control the OUTPUT ," FontSize="15" Padding="0"  Margin="0"/>
                        <Label  VerticalAlignment="Center" Content="Engineer mode must be ON." FontSize="15" Padding="0"  Margin="0"/>
                    </StackPanel>
                    <ToggleButton  VerticalAlignment="Center" Grid.Column="1" AutomationProperties.AutomationId="tglCassetteAutoLock" 
                                       Margin="0" Padding="0" IsChecked="{Binding IsEngineerModeChecked, Mode=TwoWay}">
                    </ToggleButton>
                    <Button Margin="0,10,25,10"
                                        Command="{Binding SequencesRefreshCammand}"  HorizontalAlignment="Stretch" Grid.Column="2" Visibility="{Binding IsEngineerModeChecked, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        <Button.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Viewbox Grid.Row="0" >
                                    <materialDesign:PackIcon Kind="Refresh" Foreground="Black" Width="24" Height="24"/>
                                </Viewbox>
                                <TextBlock Margin="0,4,0,2" FontSize="12" Grid.Row="1" 
                                                TextAlignment="Center" FontWeight="Bold"
                                                Text="Refresh"
                                    />
                            </Grid>
                        </Button.Content>
                    </Button>

                </Grid>
            </Grid>

            <GroupBox   Grid.Row="1" Grid.ColumnSpan="2"
                    Header="Error Message"
                    Margin="8"
                    Foreground="White"
                    FontSize="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>

                    </Grid.RowDefinitions>
                    <Border Grid.Row="1" BorderThickness="1" BorderBrush="White">
                        <Grid>
                            <ListBox x:Name="LogListBox" Grid.Row="1" ItemsSource="{Binding FoupRecoveryErrorLogBuffer}" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Mode=OneWay}" Foreground="White"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Border>

                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>
