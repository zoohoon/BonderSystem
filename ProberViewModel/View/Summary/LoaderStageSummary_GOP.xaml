<UserControl x:Class="LoaderStageSummaryViewModule.LoaderStageSummary_GOP"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LoaderStageSummaryViewModule"
             xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:MahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cui="clr-namespace:CUI;assembly=CUI"
             xmlns:pi="clr-namespace:ProberInterfaces;assembly=ProberInterfaces"
             xmlns:pie="clr-namespace:ProberInterfaces.Enum;assembly=ProberInterfaces"
             xmlns:pim="clr-namespace:ProberInterfaces.PMI;assembly=ProberInterfaces"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:aniScroll="clr-namespace:UcAnimationScrollViewer;assembly=UcAnimationScrollViewer"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesignNameSpace="matrerial"
             mc:Ignorable="d" x:Name="window"
             d:DesignHeight="450" d:DesignWidth="1280" MaxHeight="1080" MaxWidth="1920">

    <UserControl.Resources>

        <ObjectDataProvider x:Key="getDataFromPMIRemoteTriggerEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="pie:PMIRemoteTriggerEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="getDataFromLotMode" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="pi:LotModeEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <local:NullToStringConverter x:Key="NullToStringConv"/>
        <local:LotIDToStringConverter x:Key="LotIDToStringConv"/>
        <local:WaferExistToBrushConverter x:Key="WaferExistToBrushConv"/>
        <local:TabSizeConverter x:Key="tabSizeConverter" />
        <local:DataSourceToLastItemConverter x:Key="DataSourceToLastItemConv"/>
        <local:AlignStateToForegroundConverter x:Key="AlignStateToForegroundConv"/>
        <local:PadCountToForegroundConverter x:Key="PadCountToForegroundConv"/>
        <local:PadCountToTextConverter x:Key="PadCountToTextConv"/>
        <local:CellSelectedToBrushConverter x:Key="CellSelectedToBrushConv"/>
        <local:CellSelectedToBorderThicknessConverter x:Key="CellSelectedToBorderThicknessConv"/>
        <local:StageMovelockBackgroundConverter x:Key="StageMovelockBackgroundConv"/>
        <local:StageMovelockVisibleConverter x:Key="StageMovelockVisibleConv"/>

        <local:PmiTypeToTextConverter x:Key="PmiTypeToTextConv"/>
        <local:LotsettingsDataToForegroundConverter x:Key="LotsettingsDataToForegroundConv"/>
        <local:PMIDataToForegroundConverter x:Key="PMIDataToForegroundConv"/>
        <local:CellSelectedToBrushConverter_LotSettings x:Key="CellSelectedToBrushConv_LotSettings"/>
        <local:CellSelectedToBorderThicknessConverter_LotSettings x:Key="CellSelectedToBorderThicknessConv_LotSettings"/>
        <local:CellSelectedToBrush_AssingedStageConverter x:Key="CellSelectedToBrush_AssingedStageConv"/>
        <local:Text_CellSelectedToBrush_AssingedStageConverter x:Key="Text_CellSelectedToBrush_AssingedStageConv"/>
        <local:BTNEnableState_DepnedsFoupStateConverter x:Key="BTNEnableState_DepnedsFoupStateConv"/>
        <local:BTNEnableState_DependsFoupStateMultiConverter x:Key="BTNEnableState_DependsFoupStateMultiConv"/>
        <local:LotSettingsStages_DepnedsFoupStateConverter x:Key="LotSettingsStages_DepnedsFoupStateConv"/>
        <local:StageviewLotsettingsOrangeConverter x:Key="StageviewLotsettingsOrangeConv"/>
        <local:StageviewLotsettingsPuppleConverter x:Key="StageviewLotsettingsPuppleConv"/>
        <local:StageviewLotsettingsRedConverter x:Key="StageviewLotsettingsRedConv"/>

        <local:LotStatetoTeachPinBtnEnableConverter x:Key="LotStatetoTeachPinBtnEnableConv"/>

        <!--<local:StageModeToEnabledConverter x:Key="StageModeToEnabledConv"/>-->
        <local:StageModeToEnabledConverter x:Key="StageModeToEnabledConv"/>
        
        <local:StageModeToVisibilityConverter x:Key="StageModeToVisibilityConv"/>

        <local:StageAssignedToVisibilityConverter x:Key="StageAssignedToVisibilityConv"/>
        <local:StageModeToForegroundConverter x:Key="StageModeToForegroundConv"/>
        <local:SelectedItemTransferConverter x:Key="SelectedItemTransferConv"/>
        <local:LotLauncherStartBtnEnableConverter x:Key="LotLauncherStartBtnEnableConv"/>
        <local:TesterGridAvaliableToVisibilityConverter x:Key="TesterGridAvaliableToVisibilityConv"/>
        <local:TesterConnectedToBrushConverter x:Key="TesterConnectedToBrushConv"/>
        <local:EnumDescriptionConverter x:Key="EnumDescriptionConv"/>
        <local:SlotNameLengthAdjustConverter x:Key="SlotNameLengthAdjustConv"/>
        <local:OCRStringToVisibilityConverter x:Key="OCRStringToVisibilityConv"/>
        <local:PMIFlagToForegroundConverter x:Key="PMIFlagToForegroundConv"/>
        <local:LayoutModeToVisibilityConverter x:Key="LayoutModeToVisibilityConv"/>

        <local:StageLotDataToFormattedTextConverter x:Key="StageLotDataToFormattedTextConv"/>

        <vc:StageStateToValueTextConverter x:Key="StageStateToValueTextConverter" />
        <vc:StageStateToValueConverter x:Key="StageStateToValueConverter" />
        <vc:StageLockToValueTextConverter x:Key="StageLockToValueTextConverter" />
        <vc:FoupLotStateValueConverter x:Key="FoupLotStateValueConverter" />
        <vc:StageErrorStateToVisibilityConvertet x:Key="StageErrorStateToVisibilityConvertet"/>
        <vc:AlignStateToPathFillConverter x:Key="AlignStateToPathFillConv"/>
        <vc:AlignStateToPathDataConverter x:Key="AlignStateToPathDataConv"/>
        <vc:WaferOntheChuckToColorConverter x:Key="WaferOntheChuckToColorConv"/>
        <vc:CellObjectForeGroundConverter x:Key="CellObjectForeGroundConv"/>

        <vc:ScanStateValueConverter x:Key="ScanStateValueConverter" />
        <vc:EnumGPLoaderWaferStatusTextColorConverter x:Key="EnumGPLoaderWaferStatusTextColorConverter" />
        <vc:EnumGPLoaderWaferStatusandTypeColorConverter x:Key="EnumGPLoaderWaferStatusandTypeColorConverter" />
        <vc:EnumSlotTextConverter x:Key="EnumSlotTextConverter" />
        <vc:EnumSlotTextConverter2 x:Key="EnumSlotTextConverter2" />
        <vc:EnumSlotTextConverter3 x:Key="EnumSlotTextConverter3" />

        <vc:TimeVisibiltyConvert x:Key="TimeVisibiltyConvert" />
        <vc:GridWidthConvert x:Key="GridWidthConvert" />
        <vc:WaferRecoveryVisibiltyConvert x:Key="WaferRecoveryVisibiltyConvert" />
        
        <vc:GPLotStateToStringConverter1 x:Key="BtoVConv1" />
        <vc:GPLotStateToStringConverter2 x:Key="BtoVConv2" />
        <vc:GPLotStateToStringConverter3 x:Key="BtoVConv3" />
        <vc:GPLotStateToStringConverter4 x:Key="BtoVConv4" />
        <vc:GPLotStateToStringConverter5 x:Key="BtoVConv5" />
        <vc:StageLoaderErrorStateCon x:Key="StageLoaderErrorStateConv"/>
        <vc:ViewTargetConverter x:Key="ViewTargetConverter"/>

        <vc:WaferStatusToValueConverter x:Key="StatusToColorConv" />
        <vc:CardStatusToValueConverter x:Key="CardStatusToColorConv" />

        <vc:EnumStageWaferStatusTextConverter x:Key="WaferStatusToTextConv" />
        <vc:EnumStageCardStatusTextConverter x:Key="CardStatusToTextConv" />

        <vc:EventBadgeBackGroundBrushConverter x:Key="EventBadgeBackGroundBrushConv"/>
        <vc:EventBadgeForeGroundBrushConverter x:Key="EventBadgeForeGroundBrushConv"/>

        <vc:ListBoxIndexConverter x:Key="ListBoxIndexConv"/>
        <vc:ForcedDoneStateTextConverter x:Key="ForcedDoneToTextConv" />

        <!--<vc:EnumBooleanConverter x:Key="EnumBooleanConv"/>-->
        <vc:EnumToBooleanConverter x:Key="EnumToBooleanConv"/>

        <vc:CassetteIDValueConverter x:Key="CassetteIDValueConv" />

        <vc:EventCodeEnumToBoolConverter x:Key="EventCodeEnumToBoolConverter"/>

        <vc:IndexConverterToInt x:Key="IndexConverter"/>
        <vc:MonitoringCheckIndexConverter x:Key="MonitoringCheckIndexConverter"/>

        <local:EnumExcludeUndefinedConverter x:Key="EnumExcludeUndefinedConv"/>
        <local:EnumConverter x:Key="EnumConv"/>
        <vc:DeviceLabelBorderConverter x:Key="DeviceLabelBorderConv"/>
        <vc:InverseBooleanConverter x:Key="InverseBoolToVisConv"/>
        <vc:CassetteTypeConverter x:Key="CassetteTypeConv"/>
        
        <BitmapImage x:Key="Background.Lock" UriSource="pack://application:,,,/ImageResourcePack;component/Images/SemicsBackground1_2.png"/>

        <SolidColorBrush x:Key="SelectedLayoutBrush" Color="#FFED7D31"/>

        <Style x:Key="DefaultBtn" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StatusLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="DimGray"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="DimGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Width" Value="120"/>
        </Style>

        <Style x:Key="FoupModuleNameLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Width">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource tabSizeConverter}">
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,
            AncestorType={x:Type TabControl}}" />
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,
            AncestorType={x:Type TabControl}}" Path="ActualWidth" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="myListViewStyle">
            <Style.Resources>
                <!-- Background of selected item when focussed -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LimeGreen" />
                <!-- Background of selected item when not focussed -->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Green" />
            </Style.Resources>
        </Style>

        <Style x:Key="ON_OFF_ToggleBtn" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0.26" Duration="0"/>
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2"/>
                            </Storyboard>
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0.26" Duration="0:0:0.3"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="80" Margin="0,5,0,5">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-10">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"
                                                         Duration="0" To="50" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"
                                                         Duration="0" To="-10" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Rectangle x:Name="Track"
                                                    HorizontalAlignment="Left" Height="25"
                                                    Stroke="{x:Null}" 
                                                   VerticalAlignment="Top" Width="65" 
                                                   RadiusY="7.5" RadiusX="7.5"
                                                   Opacity="0.56"/>
                                <TextBlock  x:Name="TrackText"
                                                    VerticalAlignment="Center"
                                                    Foreground="Black"
                                                    FontSize="18"/>

                                <Grid x:Name="ThumbHolder"
                                  HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Ellipse x:Name="RippleThumb"
                                         Fill="{DynamicResource PrimaryHueLightBrush}"
                                         Height="15" Width="15"
                                         IsHitTestVisible="False"
                                         Opacity="0.26"
                                         Margin="0"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"
                                         RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                        <Ellipse x:Name="Thumb"
                                             Fill="#FFFAFAFA" Stroke="Gray" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Width="25" Height="25"
                                             Margin="0,0,0,0"
                                             RenderTransformOrigin="0.5,0.5"
                                             Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                        </Ellipse>
                                    </AdornerDecorator>
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                                  Margin="{TemplateBinding Padding}"
                                                  x:Name="ContentPresenter"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  FlowDirection="LeftToRight"/>
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Grid.RenderTransform>
                                </Grid>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <!--<Setter TargetName="Thumb" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />-->
                                <Setter TargetName="Track" Property="Fill" Value="White" />
                                <Setter TargetName="Track" Property="Opacity" Value="0.80" />
                                <Setter TargetName="TrackText" Property="Text" Value="On" />
                                <Setter TargetName="TrackText" Property="HorizontalAlignment" Value="Left" />
                                <Setter TargetName="TrackText" Property="Margin" Value="10 0 0 0" />
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.OnContent)}" />
                                <Setter TargetName="ContentPresenter" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.OnContentTemplate)}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter TargetName="Track" Property="Fill" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="Track" Property="Opacity" Value="0.50" />
                                <Setter TargetName="TrackText" Property="Text" Value="Off" />
                                <Setter TargetName="TrackText" Property="HorizontalAlignment" Value="Right" />
                                <Setter TargetName="TrackText" Property="Margin" Value="0 0 10 0" />
                                <!-- Need to set Foreground to Background here instead of hardcoded PrimaryHueMidBrush -->
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ShowRipple}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HideRipple}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Fill" Value="#BDBDBD" />
                                <Setter TargetName="Track" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity=".12" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UpButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="UpButtonBorderStyle" Background="#333333">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray"
                                    ShadowDepth="5"
                                    Softness="0"/>
                                </Border.BitmapEffect>
                            </Border>
                            <Viewbox Margin="8">
                                <Path Data="M1,21H23L12,2" Fill="White" Name="TryAngleIcon"/>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DwButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="DwButtonBorderStyle" Background="#333333">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="5"
                                    Softness="0"/>
                                </Border.BitmapEffect>
                            </Border>
                            <Viewbox Margin="8">
                                <Path Data="M1,2H23L12,21" Fill="White" Name="TryAngleIcon"/>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="ListItemHoverFill" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF1FBFF" Offset="0"/>
            <GradientStop Color="#FFD5F1FE" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="MahApps.Metro.Brushes.Badged.DisabledBackgroundBrush" Color="Transparent"/>

        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Gold"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

        <!--<Style x:Key="MyContainer" TargetType="{x:Type ListViewItem}">

            <Style.Triggers>
                
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Blue" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
                    <Setter Property="BorderBrush" Value="#FF98DDFB" />
                    -->
        <!--<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                    <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                    <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />-->
        <!--
                </Trigger>
                
            </Style.Triggers>
        </Style>-->

        <ControlTemplate x:Key="ExampleButton" TargetType="{x:Type Button}">
            <Grid>
                <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                        BorderBrush="Transparent" 
                        BorderThickness="1" x:Name="Border" Margin="26,-15">
                    <ContentPresenter />
                </Border>
                <Viewbox Margin="5">
                    <Path Name="SearchIcon" Data="M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M14,21A2,2 0 0,1 12,23A2,2 0 0,1 10,21" 
                              Fill="White"
                              Stretch="Fill"/>
                </Viewbox>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                    <Setter TargetName="SearchIcon" Property="Data" Value="M20.12 14.46L18 16.59L15.88 14.46L14.46 15.88L16.59 18L14.46 20.12L15.88 21.54L18 19.41L20.12 21.54L21.54 20.12L19.41 18L21.54 15.88M12 2C10.9 2 10 2.9 10 4C10 4.1 10 4.19 10 4.29C7.12 5.14 5 7.82 5 11V17L3 19V20H12.35C12.12 19.36 12 18.68 12 18C12 14.69 14.69 12 18 12C18.34 12 18.67 12.03 19 12.09V11C19 7.82 16.88 5.14 14 4.29C14 4.19 14 4.1 14 4C14 2.9 13.11 2 12 2M10 21C10 22.11 10.9 23 12 23C12.66 23 13.28 22.67 13.65 22.13C13.33 21.79 13.05 21.41 12.81 21Z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>

    <Grid VerticalAlignment="Stretch">

        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding SettingGridLength}"/>
            <ColumnDefinition Width="{Binding CellsGridLength}"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0" Grid.ColumnSpan="2"
                Margin="3" BorderThickness="1" BorderBrush="White">

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">

                <Label FontSize="16" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" HorizontalAlignment="Center" Foreground="White" Margin="-10">
                    <TextBlock Text="Layout"/>
                </Label>

                <Button Command="{Binding SummaryLayoutChangeCommand}" 
                        CommandParameter="{x:Static pi:GPSummaryLayoutModeEnum.SETTING}"
                        Width="45" Height="30" Background="Black">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <!-- Default Content value -->
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Path Data="M6.75,0.50400001 C6.75,11.369533 6.75,22.171315 6.75,33.288112 6.75,40.776204 6.75,47.593447 6.75,54.937999 M0.75,54.625 C24.27264,54.625 47.53135,54.625 71,54.625 74.02271,54.625 76.75983,54.625 79.625,54.625 M0.5,1 C24.02264,1 47.28135,1 70.75,1 73.77271,1 76.50983,1 79.375,1 M79.375,0.50000001 C79.375,11.403658 79.375,22.243342 79.375,33.399146 79.375,40.913513 79.375,47.754676 79.375,55.124999 M0.75,0.50000001 C0.75,11.403658 0.75,22.243342 0.75,33.399146 0.75,40.913513 0.75,47.754676 0.75,55.124999" 
                          Fill="#FFF4F4F5" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Top" 
                          Height="25" 
                          Stretch="Fill" 
                          Stroke="White" 
                          Width="30"/>
                                </Setter.Value>
                            </Setter>
                            <!-- Triggered values -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.SETTING}">
                                    <Setter Property="BorderBrush" Value="{StaticResource SelectedLayoutBrush}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.BOTH}">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.CELLS}">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Command="{Binding SummaryLayoutChangeCommand}" 
                    CommandParameter="{x:Static pi:GPSummaryLayoutModeEnum.BOTH}"   
                    Width="45" Height="30" Background="Black">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <!-- Default Content value -->
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Path Data="M30.999001,0.67500001 C30.999001,11.540533 30.999001,22.342315 30.999001,33.459112 30.999001,40.947204 30.999001,47.764447 30.999001,55.108999 M0.75000055,54.625 C24.272641,54.625 47.531351,54.625 71.000001,54.625 74.022711,54.625 76.759831,54.625 79.625001,54.625 M0.50000055,1 C24.022641,1 47.281351,1 70.750001,1 73.772711,1 76.509831,1 79.375001,1 M79.375001,0.50000001 C79.375001,11.403658 79.375001,22.243342 79.375001,33.399146 79.375001,40.913513 79.375001,47.754676 79.375001,55.124999 M0.75000055,0.50000001 C0.75000055,11.403658 0.75000055,22.243342 0.75000055,33.399146 0.75000055,40.913513 0.75000055,47.754676 0.75000055,55.124999" 
                                        Fill="#FFF4F4F5" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Top" 
                                        Height="25" 
                                        Stretch="Fill" 
                                        Stroke="White" 
                                        Width="30"/>
                                </Setter.Value>
                            </Setter>

                            <!-- Triggered values -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.SETTING}">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.BOTH}">
                                    <Setter Property="BorderBrush" Value="{StaticResource SelectedLayoutBrush}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.CELLS}">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Command="{Binding SummaryLayoutChangeCommand}" 
                        CommandParameter="{x:Static pi:GPSummaryLayoutModeEnum.CELLS}"           
                        Width="45" Height="30" Background="Black">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <!-- Default Content value -->
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Path Data="M73.375,0.68599999 C73.375,11.551533 73.375,22.353316 73.375,33.470113 73.375,40.958205 73.375,47.775449 73.375,55.120001 M0.75,54.625 C24.27264,54.625 47.53135,54.625 71,54.625 74.02271,54.625 76.75983,54.625 79.625,54.625 M0.5,0.99999999 C24.02264,0.99999999 47.28135,0.99999999 70.75,0.99999999 73.77271,0.99999999 76.50983,0.99999999 79.375,0.99999999 M79.375,0.5 C79.375,11.403658 79.375,22.243342 79.375,33.399146 79.375,40.913513 79.375,47.754676 79.375,55.124999 M0.75,0.5 C0.75,11.403658 0.75,22.243342 0.75,33.399146 0.75,40.913513 0.75,47.754676 0.75,55.124999" 
                          Fill="#FFF4F4F5" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Top" 
                          Height="25" 
                          Stretch="Fill" 
                          Stroke="White" 
                          Width="30"/>
                                </Setter.Value>
                            </Setter>

                            <!-- Triggered values -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.SETTING}">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.BOTH}">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedLayoutMode}" Value="{x:Static pi:GPSummaryLayoutModeEnum.CELLS}">
                                    <Setter Property="BorderBrush" Value="{StaticResource SelectedLayoutBrush}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedLayoutMode, Converter={StaticResource LayoutModeToVisibilityConv}}">
                    <Slider BorderBrush="White" BorderThickness="1"
                        Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        FlowDirection="LeftToRight"
                        IsSnapToTickEnabled="True"
                        TickPlacement="TopLeft"
                        Width="270"
                        TickFrequency="20" Minimum="0" Maximum="1920" Value="{Binding SettingLayoutLength}"/>
                    <Border BorderBrush="{x:Null}">
                        <TextBlock Text="{Binding SettingLayoutLength}" Foreground="White" FontSize="12"
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </StackPanel>

            </StackPanel>

        </Border>

        <Grid Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch">

            <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="3" BorderThickness="2" BorderBrush="White" >
                <MahAppsControls:MetroAnimatedSingleRowTabControl 
                    SelectedIndex="{Binding SelectedTabIndex}" 
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled">

                    <MahAppsControls:MetroAnimatedSingleRowTabControl.Resources>
                        <SolidColorBrush x:Key="AccentColorBrush" Color="#9370d8"/>
                        <SolidColorBrush x:Key="HighlightBrush" Color="#7260b5"/>
                    </MahAppsControls:MetroAnimatedSingleRowTabControl.Resources>

                    <!-- Foup Information-->
                    <MahAppsControls:MetroTabItem AutomationProperties.AutomationId="tiFoupInformation"
                        Header="Foup Information" BorderThickness="1" BorderBrush="Black"
                        MahAppsControls:ControlsHelper.HeaderFontSize="20"
                        MahAppsControls:ControlsHelper.HeaderMargin="8"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <Grid Background="#333333"
                              Margin="8"
                              HorizontalAlignment="Center" >
                            <ListView VirtualizingPanel.IsContainerVirtualizable="True"
                                      VirtualizingPanel.IsVirtualizing="True"
                                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                                      Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" x:Name="FoupListView" 
                                      ItemsSource="{Binding LoaderModule.Foups}" Background="#FF1C1C1F" VerticalAlignment="Stretch"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                      Focusable="False" 
                                      MinWidth="30"  MinHeight="40"
                                      Margin="-1, 0, 0, 0">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                        <!--<WrapPanel Orientation="Horizontal"></WrapPanel>-->
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="{Binding ScanState, Converter={StaticResource ScanStateValueConverter}}" BorderThickness="1" Width="350" >
                                            <Grid>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <!--<Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>-->

                                                <Image Width="64" Height="46" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                                    <Image.Source>
                                                        <BitmapImage UriSource="./Resources/FOUP.png"/>
                                                    </Image.Source>
                                                </Image>

                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" >
                                                    <Label Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center"  VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    <Label Content="{Binding CassetteType}" ContentStringFormat="[{0}]" FontSize="15" HorizontalAlignment="Center"  VerticalAlignment="Top"
                                                           Style="{StaticResource FoupModuleNameLabelStyle}" Foreground="#9370d8" >
                                                        <Label.Visibility>
                                                            <MultiBinding Converter="{StaticResource CassetteTypeConv}">
                                                                <Binding Path="CassetteType"/>
                                                                <Binding Path="DataContext.TriggerForStartConfirm" RelativeSource="{RelativeSource AncestorType=ListView}" />
                                                            </MultiBinding>
                                                        </Label.Visibility>
                                                    </Label>
                                                    <Label Content="{Binding CassetteID, Converter={StaticResource CassetteIDValueConv}}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center"  VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                </StackPanel>

                                                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Right">
                                                    <Label Content="{Binding LotState}"  FontSize="18" Foreground="{Binding LotState, Converter={StaticResource FoupLotStateValueConverter}}" FontWeight="Bold"  VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    <CheckBox VerticalAlignment="Top" HorizontalAlignment="Right" Background="White" IsChecked="{Binding IsLotEnd ,Mode=TwoWay}" IsEnabled="{Binding IsLotEndEnable,Mode=TwoWay}" >
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                        </CheckBox.LayoutTransform>
                                                    </CheckBox>
                                                </StackPanel>

                                                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <Label Content="Start Time : " FontSize="11.5" FontWeight="Bold"   VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    <Label Content="{Binding LotStartTimeStr}" FontSize="11.5" FontWeight="Bold"  VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                </StackPanel>

                                                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <Label Content="End Time  : " FontSize="11.5" FontWeight="Bold"   VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    <Label Content="{Binding LotEndTimeStr}" FontSize="11.5" FontWeight="Bold"  VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                </StackPanel>

                                                <Grid Grid.Row="3" Background="#FF1C1C1F" >

                                                    <ListView x:Name="SlotListView" 
                                                              Grid.Column="0"   
                                                              HorizontalAlignment="Center" 
                                                              ItemsSource="{Binding Slots}" 
                                                              Background="#FF1C1C1F" 
                                                              Focusable="False" 
                                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                              ScrollViewer.VerticalScrollBarVisibility="Disabled">

                                                        <ListView.ItemContainerStyle>
                                                            <Style TargetType="ListViewItem">
                                                                <!--<Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                <Setter Property="VerticalContentAlignment" Value="Center" />-->
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </Style>
                                                        </ListView.ItemContainerStyle>

                                                        <ListView.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Vertical" />
                                                            </ItemsPanelTemplate>
                                                        </ListView.ItemsPanel>

                                                        <ListView.ItemTemplate>

                                                            <DataTemplate>

                                                                <Border BorderThickness="1" Width="330" Height="26">

                                                                    <Border.BorderBrush>
                                                                        <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusandTypeColorConverter}">
                                                                            <Binding Path="WaferStatus"/>
                                                                            <Binding Path="WaferState"/>
                                                                            <Binding Path="WaferObj"/>
                                                                        </MultiBinding>
                                                                    </Border.BorderBrush>

                                                                    <Grid>

                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <Border Grid.Column="0" BorderBrush="Gray" BorderThickness="1" Opacity="0.3"/>
                                                                        <Border Grid.Column="1" BorderBrush="Gray" BorderThickness="1" Opacity="0.3"/>
                                                                        <Border Grid.Column="2" BorderBrush="Gray" BorderThickness="1" Opacity="0.3"/>
                                                                        <Border Grid.Column="3" BorderBrush="Gray" BorderThickness="1" Opacity="0.3"/>
                                                                        <!--<Border Grid.Column="3" BorderBrush="Gray" BorderThickness="1" Opacity="0.3"/>-->

                                                                        <!-- PMI -->
                                                                        <Border Grid.Column="0" BorderBrush="{x:Null}">
                                                                            <TextBlock 
                                                                                   Text="PMI" TextTrimming="CharacterEllipsis"
                                                                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                   Padding="3"
                                                                                   FontSize="12" 
                                                                                   Foreground="{Binding WaferObj.DoPMIFlag, Converter={StaticResource PMIFlagToForegroundConv}}">
                                                                            </TextBlock>
                                                                        </Border>

                                                                        <!-- Slot Name -->
                                                                        <Border Grid.Column="1" BorderBrush="{x:Null}" Width="Auto">
                                                                            <TextBlock Padding="3"
                                                                                   Text="{Binding Name, Converter={StaticResource SlotNameLengthAdjustConv}}" TextTrimming="CharacterEllipsis"
                                                                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                   FontSize="12" Foreground="White"/>
                                                                        </Border>

                                                                        <!-- PROCESSED STATUS or CurrHolder -->

                                                                        <Border Grid.Column="2" BorderBrush="{x:Null}" MinWidth="105">
                                                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                   Padding="3"
                                                                                   TextTrimming="CharacterEllipsis"
                                                                                   FontSize="12">

                                                                                <TextBlock.Foreground>
                                                                                    <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusandTypeColorConverter}">
                                                                                        <Binding Path="WaferStatus"/>
                                                                                        <Binding Path="WaferState"/>
                                                                                        <Binding Path="WaferObj"/>
                                                                                    </MultiBinding>
                                                                                </TextBlock.Foreground>

                                                                                <TextBlock.Text>
                                                                                    <MultiBinding Converter="{StaticResource EnumSlotTextConverter3}">
                                                                                        <Binding Path="WaferStatus"/>
                                                                                        <Binding Path="WaferState"/>
                                                                                        <Binding Path="WaferObj"/>
                                                                                    </MultiBinding>
                                                                                </TextBlock.Text>

                                                                            </TextBlock>
                                                                        </Border>



                                                                        <!-- OCR -->
                                                                        <Border Grid.Column="3" BorderBrush="{x:Null}" MinWidth="100">
                                                                            <TextBlock Visibility="{Binding WaferObj.OCR.Value, Converter={StaticResource OCRStringToVisibilityConv}}"
                                                                                   TextTrimming="CharacterEllipsis"
                                                                                   Padding="3"
                                                                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                   Text="{Binding WaferObj.OCR.Value}"
                                                                                   FontSize="12">

                                                                                <TextBlock.Foreground>
                                                                                    <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusandTypeColorConverter}">
                                                                                        <Binding Path="WaferStatus"/>
                                                                                        <Binding Path="WaferState"/>
                                                                                        <Binding Path="WaferObj"/>
                                                                                    </MultiBinding>
                                                                                </TextBlock.Foreground>

                                                                            </TextBlock>
                                                                        </Border>

                                                                        <!--<Label Grid.Column="0" Width="Auto" 
                                                                               Content="PMI"
                                                                               FontSize="12" Foreground="White" Height="24" Margin="0,0,0,0" />-->

                                                                        <!--<Label Grid.Column="1" HorizontalContentAlignment="Left"
                                                                               Content="{Binding Name}"
                                                                               FontSize="12" Foreground="White" Height="24" Margin="0,0,0,0" />-->

                                                                        <!--<Label Grid.Column="2" VerticalContentAlignment="Center" VerticalAlignment="Center" FontSize="12" Width="200" Height="23" Margin="0,0,0,0">
                                                                            <Label.Foreground>
                                                                                <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusTextColorConverter}">
                                                                                    <Binding Path="WaferStatus"/>
                                                                                    <Binding Path="WaferState"/>
                                                                                </MultiBinding>
                                                                            </Label.Foreground>
                                                                            
                                                                            <Label.Content>
                                                                                <MultiBinding Converter="{StaticResource EnumSlotTextConverter2}">
                                                                                    <Binding Path="WaferStatus"/>
                                                                                    <Binding Path="WaferState"/>
                                                                                    <Binding Path="WaferObj"/>
                                                                                </MultiBinding>
                                                                            </Label.Content>
                                                                            
                                                                        </Label>-->

                                                                        <!--<StackPanel Orientation="Horizontal">
                                                                            <Label  VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Name}" FontSize="12" Foreground="White" Width="80" Height="23" Padding="5" Margin="0" />
                                                                            <Label  VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="12" Width="200" Height="23" Margin="0,0,0,0">
                                                                                <Label.Foreground>
                                                                                    <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusTextColorConverter}">
                                                                                        <Binding Path="WaferStatus"/>
                                                                                        <Binding Path="WaferState"/>
                                                                                    </MultiBinding>
                                                                                </Label.Foreground>
                                                                                <Label.Content>
                                                                                    <MultiBinding Converter="{StaticResource EnumSlotTextConverter2}">
                                                                                        <Binding Path="WaferStatus"/>
                                                                                        <Binding Path="WaferState"/>
                                                                                        <Binding Path="WaferObj"/>
                                                                                    </MultiBinding>
                                                                                </Label.Content>
                                                                            </Label>
                                                                        </StackPanel>-->
                                                                    </Grid>
                                                                </Border>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>
                                                    </ListView>

                                                </Grid>

                                                <StackPanel Grid.Row="5" Orientation="Vertical" >
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Label Grid.Column="0" Content="Allocated Cell Number : " FontSize="13" FontWeight="Bold"   VerticalAlignment="Top" HorizontalAlignment="Right" 
                                                           Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                        <Label Grid.Column="1" Content="{Binding AllocatedCellInfo}" FontSize="13" FontWeight="Bold"  VerticalAlignment="Top" HorizontalAlignment="Left"
                                                           Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    </Grid>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </MahAppsControls:MetroTabItem>

                    <!-- LOT Option Setting -->
                    <MahAppsControls:MetroTabItem AutomationProperties.AutomationId="tiLOTOptionSetting" 
                                                  Header="LOT Option Setting"  BorderThickness="1" 
                                                  BorderBrush="Black"
                                                  MahAppsControls:ControlsHelper.HeaderFontSize="20"
                                                  MahAppsControls:ControlsHelper.HeaderMargin="8">

                        <Grid Background="#333333" Margin="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="122*"/>
                                <ColumnDefinition Width="621*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2.5*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!--<Border Grid.Row="0" BorderThickness="2" BorderBrush="WhiteSmoke">-->

                            <ListView x:Name="CellListView_LotLauncher" ItemsSource="{Binding Stages}"
                                              Grid.Row="0" BorderThickness="2"
                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                              ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                                              HorizontalContentAlignment="Stretch" 
                                              VerticalContentAlignment="Stretch" Grid.ColumnSpan="2" >

                                <ListView.ItemContainerStyle>

                                    <Style TargetType="{x:Type ListViewItem}">

                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="Padding" Value="4,1"/>
                                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>

                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                        </MultiTrigger>

                                                        <MultiTrigger>

                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>

                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                        </MultiTrigger>

                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                        </MultiTrigger>

                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>

                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Black"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border>

                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="White"></SolidColorBrush>
                                            </Border.BorderBrush>

                                            <Border.BorderThickness>
                                                <Thickness Top="1" Bottom="1" Left="1" Right="1."></Thickness>
                                            </Border.BorderThickness>

                                            <Grid>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <Grid Grid.Row="0">
                                                    <Grid Grid.Column="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="1*"/>
                                                            <ColumnDefinition Width="3*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border Grid.Column="0" BorderBrush="WhiteSmoke" BorderThickness="1"></Border>
                                                        <Border Grid.Column="0" BorderThickness="3" Margin="2"
                                                                BorderBrush="{Binding StageInfo.IsExcuteProgram, Mode=OneWay, Converter={StaticResource CellObjectForeGroundConv}}" ></Border>

                                                        <Label Grid.Column="0" Content="{Binding Index}" Padding="0,0,0,0"
                                                               Foreground="WhiteSmoke" FontSize="16"  
                                                               FontWeight="Bold"
                                                               VerticalContentAlignment="Center"
                                                               HorizontalContentAlignment="Center"/>

                                                        <Label Grid.Column="1" 
                                                               Content="{Binding StageMode}" Padding="5"
                                                               HorizontalContentAlignment="Center"
                                                               FontSize="11" 
                                                               Foreground="WhiteSmoke" 
                                                               FontWeight="Bold"/>
                                                        <Border Grid.Column="1"  BorderBrush="White" BorderThickness="1"></Border>
                                                    </Grid>
                                                </Grid>
                                                <Grid Grid.Row="1" IsEnabled="{Binding StageInfo.IsConnected}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Grid.Column="0" BorderBrush="WhiteSmoke" BorderThickness="0.5">
                                                        <StackPanel>
                                                            <Label
                                                                Grid.Column="0"
                                                                Content="Before Contact"
                                                                FontSize="15"
                                                                Foreground="Orange" 
                                                                FontWeight="Bold"
                                                                Margin="-5 5 -5 5"
                                                                HorizontalAlignment="Left"
                                                            />
                                                            <ToggleButton AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}tglStopBeforeContact_{0}}"
                                                                                  x:Name="CheckCloseToggle1"
                                                                                  Margin="10 0 0 5"
                                                                                  Grid.Column="0"
                                                                                  Style="{StaticResource ON_OFF_ToggleBtn}"
                                                                                  IsChecked="{Binding StopBeforeProbing}"
                                                                                  Height="40" Width="80"
                                                                                  IsEnabled="{Binding OnceStopBeforeProbing, Converter={StaticResource InverseBoolToVisConv}}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Checked">
                                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopBeforeProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                    <i:EventTrigger EventName="Unchecked">
                                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopBeforeProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </ToggleButton>
                                                            <Label
                                                                Grid.Column="0"
                                                                Content="One time"
                                                                FontSize="15"
                                                                Foreground="Orange" 
                                                                FontWeight="Bold"
                                                                Margin="-5 5 -5 5"
                                                                HorizontalAlignment="Left"
                                                            />
                                                            <ToggleButton x:Name="OnceStopBeforeToggle"
                                                                Margin="10 0 0 15"
                                                                Grid.Column="0"
                                                                Style="{StaticResource ON_OFF_ToggleBtn}"
                                                                IsChecked="{Binding OnceStopBeforeProbing}"
                                                                Height="40" Width="80"
                                                                IsEnabled="{Binding StopBeforeProbing, Converter={StaticResource InverseBoolToVisConv}}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Checked">
                                                                        <i:InvokeCommandAction Command="{Binding DataContext.OnceStopBeforeProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                    <i:EventTrigger EventName="Unchecked">
                                                                        <i:InvokeCommandAction Command="{Binding DataContext.OnceStopBeforeProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </ToggleButton>
                                                        </StackPanel>
                                                    </Border>
                                                </Grid>
                                                <Grid Grid.Row="2" IsEnabled="{Binding StageInfo.IsConnected}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Grid.Column="0" BorderBrush="WhiteSmoke" BorderThickness="0.5">
                                                        <StackPanel>
                                                            <Label
                                                                Grid.Column="0"
                                                                Content="After Probing"
                                                                FontSize="15"
                                                                Foreground="Orange" 
                                                                FontWeight="Bold"
                                                                Margin="-5 5 -5 5"
                                                                HorizontalAlignment="Left"
                                                            />
                                                            <ToggleButton AutomationProperties.AutomationId="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}tglStopAfterProbing_{0}}"
                                                                                  x:Name="CheckCloseToggle2"
                                                                                  Margin="10 0 0 5"
                                                                                  Grid.Column="0"
                                                                                  Style="{StaticResource ON_OFF_ToggleBtn}"
                                                                                  IsChecked="{Binding StopAfterProbing}"
                                                                                  Height="40" Width="80"
                                                                                  IsEnabled="{Binding OnceStopAfterProbing, Converter={StaticResource InverseBoolToVisConv}}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Checked">
                                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopAfterProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                    <i:EventTrigger EventName="Unchecked">
                                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopAfterProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </ToggleButton>
                                                            <Label
                                                                Grid.Column="0"
                                                                Content="One time"
                                                                FontSize="15"
                                                                Foreground="Orange" 
                                                                FontWeight="Bold"
                                                                Margin="-5 5 -5 5"
                                                                HorizontalAlignment="Left"
                                                            />
                                                            <ToggleButton x:Name="OnceStopAfterTogle"
                                                                Margin="10 0 0 15"
                                                                Grid.Column="0"
                                                                Style="{StaticResource ON_OFF_ToggleBtn}"
                                                                IsChecked="{Binding OnceStopAfterProbing}"
                                                                Height="40" Width="80"
                                                                IsEnabled="{Binding StopAfterProbing, Converter={StaticResource InverseBoolToVisConv}}">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Checked">
                                                                        <i:InvokeCommandAction Command="{Binding DataContext.OnceStopAfterProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                    <i:EventTrigger EventName="Unchecked">
                                                                        <i:InvokeCommandAction Command="{Binding DataContext.OnceStopAfterProbingCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </ToggleButton>
                                                        </StackPanel>
                                                    </Border>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                <StackPanel Orientation="Vertical" Grid.ColumnSpan="2">
                                    <CheckBox AutomationProperties.AutomationId="ContinueLotchk"
                                                      Content="Continue Lot" Background="White" Foreground="White" FontSize="17" Command="{Binding ContinueLotEnableCommand}" IsChecked="{Binding LoaderMaster.ContinueLotFlag,Mode=TwoWay}" VerticalContentAlignment="Center" Height="25" Padding="3,0,0,2"></CheckBox>
                                    <StackPanel Orientation="Horizontal" Margin="1,3">

                                        <Label Content="OCR Mode: " Margin="0" Padding="1" FontSize="15" FontWeight="Bold"
                                              VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Foreground="MediumPurple"/>
                                        <Label Content="{Binding LoaderModule.OCRConfig.Mode}" Margin="0" Padding="1" FontSize="15" FontWeight="Bold"
                                              VerticalContentAlignment="Center"  HorizontalContentAlignment="Left" Foreground="MediumPurple"/>
                                    </StackPanel>

                                    <GroupBox   Header="OCR Mode" FontSize="12" Foreground="White" Width="200" HorizontalAlignment="Left" BorderBrush="White" BorderThickness="1" Style="{DynamicResource GroupBoxForegroundStyle}" Margin="1,0,0,0" Height="188">
                                        <StackPanel Orientation="Vertical">
                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                                <RadioButton AutomationProperties.AutomationId="rdoOCRModeNormal"
                                                                     GroupName="OCRMode" IsChecked="True" Padding="0" FontSize="15" Margin="5" Command="{Binding NormalOCRModeCommand}"  Foreground="White" VerticalContentAlignment="Center">NORMAL</RadioButton>
                                                <RadioButton AutomationProperties.AutomationId="rdoOCRModeDebug"
                                                                     GroupName="OCRMode" Padding="0" FontSize="15"  Margin="5" Command="{Binding DebugOCRModeCommand}"  Foreground="White" VerticalContentAlignment="Center">DEBUG</RadioButton>
                                                <RadioButton AutomationProperties.AutomationId="rdoOCRModeNGGo"
                                                                     GroupName="OCRMode" Padding="0" FontSize="15"  Margin="5" Command="{Binding NG_GO_OCRModeCommand}"  Foreground="White" VerticalContentAlignment="Center">NG__GO</RadioButton>
                                                <RadioButton  GroupName="OCRMode" Padding="0" FontSize="15"  Margin="5" Command="{Binding ManualInput_OCRModeCommand}"  Foreground="White" VerticalContentAlignment="Center">MANUAL__INPUT</RadioButton>
                                            </StackPanel>
                                            <Button AutomationProperties.AutomationId="btnOCRModeSelect"
                                                            IsEnabled="True" Command="{Binding OCRModeSelectCommand}" 
                                                            Width="150"
                                                            HorizontalContentAlignment="Center"
                                                            HorizontalAlignment="Center" 
                                                            FontSize="24" FontWeight="Bold">
                                                <Button.Content>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock  Grid.Row="0" TextAlignment="Center" FontWeight="Bold" Text="Select"/>
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox>
                                    <!--<CheckBox Content="Forced LotEnd" Background="White" Foreground="White" FontSize="17" IsChecked="{Binding LoaderMaster.ForcedLotEndFlag,Mode=TwoWay}"></CheckBox>-->
                                    <!--<Button Content="Collect All Wafer" Background="Blue"  Width="150" HorizontalAlignment="Left"  Foreground="White" Command="{Binding CollectWaferCommand}"  ></Button>-->
                                </StackPanel>
                            </Grid>
                        </Grid>

                    </MahAppsControls:MetroTabItem>

                    <!-- LOT Setting -->
                    <MahAppsControls:MetroTabItem
                            Header="LOT Setting" BorderThickness="1" BorderBrush="Black"
                            MahAppsControls:ControlsHelper.HeaderFontSize="20"
                            MahAppsControls:ControlsHelper.HeaderMargin="8"
                            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden">

                        <Grid Background="#333333"
                              Margin="8"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <Grid>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5.8*"/>
                                        <RowDefinition Height="3.0*"/>
                                        <RowDefinition Height="1.2*"/>
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="2.3*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- FOUP -->
                                    <Border x:Name="BorderFoupView" Grid.Column="0" Grid.RowSpan="3" BorderBrush="WhiteSmoke" BorderThickness="1" Background="#FF1C1C1F" Margin="0,0,1,0">

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="92*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0">

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.7*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="0.7*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="1" Grid.Row="0">

                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                        <Image Width="32" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <Image.Source>
                                                                <BitmapImage UriSource="./Resources/FOUP.png"/>
                                                            </Image.Source>
                                                        </Image>
                                                        <Label Content="{Binding SelectedFoupObj.Name}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    </StackPanel>

                                                </Grid>

                                                <Grid Grid.Column="1" Grid.Row="1">
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                        <Label Content="LOT State : " FontSize="10" FontWeight="Bold"   
                                                                Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                        <Label Content="{Binding SelectedFoupObj.LotState}" FontSize="10" FontWeight="Bold"  VerticalAlignment="Top"
                                                                Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                    </StackPanel>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding ExistMultiFoup}">
                                                    <Button Width="Auto" Command="{Binding FoupIndexForLotChangeCommand}" CommandParameter="{x:Static pim:SELECT_DIRECTION.PREV}">
                                                        <Viewbox Width="32" Height="32">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="Black" Data="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Button>
                                                </Grid>

                                                <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding ExistMultiFoup}">
                                                    <Button Width="Auto" Command="{Binding FoupIndexForLotChangeCommand}" CommandParameter="{x:Static pim:SELECT_DIRECTION.NEXT}">
                                                        <Viewbox Width="32" Height="32">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="Black" Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Button>
                                                </Grid>

                                            </Grid>

                                            <!--<StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Image Width="32" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                    <Image.Source>
                                                        <BitmapImage UriSource="./Resources/FOUP.png"/>
                                                    </Image.Source>
                                                </Image>
                                                <Label Content="{Binding SelectedFoupObj.Name}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                            </StackPanel>-->

                                            <!--<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Label Content="LOT State : " FontSize="10" FontWeight="Bold"   
                                                                Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                                <Label Content="{Binding SelectedFoupObj.LotState}" FontSize="10" FontWeight="Bold"  VerticalAlignment="Top"
                                                                Style="{StaticResource FoupModuleNameLabelStyle}"/>
                                            </StackPanel>-->

                                            <StackPanel Grid.Row="1">
                                                <ListView HorizontalAlignment="Center" x:Name="SlotListView_LotSettings" 
                                                          ItemsSource="{Binding SelectedFoupObj.Slots}" 
                                                          SelectedItem="{Binding SelectedSlotForLot}"
                                                          Background="#FF1C1C1F" Focusable="False"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                          SelectionMode="Single">
                                                    
                                                    <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}"-->
                                                    <ListView.IsEnabled>
                                                        <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                            <Binding Path="SelectedFoupObj.LotState"/>
                                                            <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                            <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                        </MultiBinding>
                                                    </ListView.IsEnabled>

                                                    <ListView.ItemContainerStyle>
                                                        <Style TargetType="ListViewItem">
                                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </Style>
                                                    </ListView.ItemContainerStyle>

                                                    <ListView.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Vertical"/>
                                                        </ItemsPanelTemplate>
                                                    </ListView.ItemsPanel>
                                                    <ListView.ItemTemplate>

                                                        <DataTemplate>
                                                            <Border  BorderThickness="1" Width="200">

                                                                <Border.BorderBrush>
                                                                    <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusandTypeColorConverter}">
                                                                        <Binding Path="WaferStatus"/>
                                                                        <Binding Path="WaferState"/>
                                                                        <Binding Path="WaferObj"/>
                                                                    </MultiBinding>
                                                                </Border.BorderBrush>

                                                                <Grid VerticalAlignment="Center">

                                                                    <StackPanel Orientation="Horizontal">

                                                                        <CheckBox HorizontalAlignment="Left" Margin="10,0,0,0" IsEnabled="{Binding IsPreSelected, Mode=TwoWay}" IsChecked="{Binding IsPreSelected, Mode=TwoWay}">
                                                                            <i:Interaction.Triggers>
                                                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectedSlotItemChecked, ElementName=window}"  
                                                                                                CommandParameter="{Binding Index}"/>
                                                                                </i:EventTrigger>
                                                                            </i:Interaction.Triggers>
                                                                        </CheckBox>

                                                                        <Label HorizontalAlignment="Center" Content="{Binding Name}" FontSize="10" Foreground="White" Width="80" Height="22" Margin="-8">
                                                                            <i:Interaction.Triggers>
                                                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectedSlotItemChecked, ElementName=window}"  
                                                                                                CommandParameter="{Binding Index}"/>
                                                                                </i:EventTrigger>
                                                                            </i:Interaction.Triggers>
                                                                        </Label>

                                                                        <Label HorizontalAlignment="Left" FontSize="9" Padding="6" Width="102" Height="23" Margin="-8,1,1,1">

                                                                            <i:Interaction.Triggers>
                                                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectedSlotItemChecked, ElementName=window}"  
                                                                                                CommandParameter="{Binding Index}"/>
                                                                                </i:EventTrigger>
                                                                            </i:Interaction.Triggers>

                                                                            <Label.Foreground>
                                                                                <MultiBinding Converter="{StaticResource EnumGPLoaderWaferStatusTextColorConverter}">
                                                                                    <Binding Path="WaferStatus"/>
                                                                                    <Binding Path="WaferState"/>
                                                                                </MultiBinding>
                                                                            </Label.Foreground>
                                                                            <Label.Content>
                                                                                <MultiBinding Converter="{StaticResource EnumSlotTextConverter2}">
                                                                                    <Binding Path="WaferStatus"/>
                                                                                    <Binding Path="WaferState"/>
                                                                                    <Binding Path="WaferObj"/>
                                                                                </MultiBinding>
                                                                            </Label.Content>
                                                                        </Label>

                                                                    </StackPanel>
                                                                </Grid>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </StackPanel>

                                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Button Grid.Column="0" MinWidth="80" Content="Select All" 
                                                        Command="{Binding SlotSelectForLotCommand}" CommandParameter="{x:Static pie:EnumSelectType.SELECTALL}">
                                                    <!--IsEnabled="{Binding LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}"-->
                                                    <Button.IsEnabled>
                                                        <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                            <Binding Path="SelectedFoupObj.LotState"/>
                                                            <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                            <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                        </MultiBinding>
                                                    </Button.IsEnabled>
                                                </Button>

                                                <Button Grid.Column="1" MinWidth="80" Content="Deselect All" 
                                                        Command="{Binding SlotSelectForLotCommand}" CommandParameter="{x:Static pie:EnumSelectType.DESELCTEALL}">
                                                    <!--IsEnabled="{Binding LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}"-->
                                                    <Button.IsEnabled>
                                                        <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                            <Binding Path="SelectedFoupObj.LotState"/>
                                                            <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                            <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                        </MultiBinding>
                                                    </Button.IsEnabled>
                                                </Button>
                                            </StackPanel>

                                        </Grid>
                                    </Border>

                                    <!-- LOT INFO (EACH CELL) -->
                                    <Border Grid.Column="1" Grid.Row="0" BorderBrush="WhiteSmoke" BorderThickness="1" Background="black">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.9*"/>
                                                <RowDefinition Height="0.1*"/>
                                            </Grid.RowDefinitions>

                                            <ListView x:Name="CellListView_LotSetting" Grid.Row="0" 
                                                      ItemsSource="{Binding DataContext.SelectedFoupObj.LotSettings, ElementName=window}"
                                                      BorderThickness="3" 
                                                      SelectionMode="Multiple"
                                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                      ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                                                      HorizontalContentAlignment="Stretch"
                                                      VerticalContentAlignment="Stretch">

                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SelectedItemChangedonLotsettingCommand, ElementName=window}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                        <!--<Setter Property="Padding" Value="4,1"/>-->
                                                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                    <Border x:Name="Bd_LotSetting" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>

                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd_LotSetting" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd_LotSetting" Value="Transparent"/>
                                                                        </MultiTrigger>

                                                                        <MultiTrigger>

                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                            </MultiTrigger.Conditions>

                                                                            <Setter Property="Background" TargetName="Bd_LotSetting" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd_LotSetting" Value="Transparent"/>
                                                                        </MultiTrigger>

                                                                        <MultiTrigger>

                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                            </MultiTrigger.Conditions>

                                                                            <Setter Property="Background" TargetName="Bd_LotSetting" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd_LotSetting" Value="Transparent"/>
                                                                        </MultiTrigger>

                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>

                                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>

                                                    </Style>

                                                </ListView.ItemContainerStyle>

                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Columns="{Binding DataContext.CellColumn, ElementName=window}" Rows="{Binding DataContext.CellRow, ElementName=window}" Background="Black"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ListView.ItemTemplate>
                                                    <DataTemplate>

                                                        <Border>
                                                            <Border.BorderBrush>
                                                                <MultiBinding Converter="{StaticResource CellSelectedToBrushConv_LotSettings}">
                                                                    <Binding Path="SelectedItems" ElementName="CellListView_LotSetting" />
                                                                    <Binding Path="." />
                                                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.ChangedSelectedSettingItemsCount" />
                                                                </MultiBinding>
                                                            </Border.BorderBrush>

                                                            <Border.BorderThickness>
                                                                <MultiBinding Converter="{StaticResource CellSelectedToBorderThicknessConv_LotSettings}">
                                                                    <Binding Path="SelectedItems" ElementName="CellListView_LotSetting" />
                                                                    <Binding Path="." />
                                                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.ChangedSelectedSettingItemsCount" />
                                                                </MultiBinding>
                                                            </Border.BorderThickness>

                                                            <Grid>

                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0">

                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>

                                                                    <Grid Grid.Row="0">

                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="1*"/>
                                                                            <ColumnDefinition Width="1*"/>
                                                                            <ColumnDefinition Width="1*"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <Grid Grid.Column="0">
                                                                            <Border BorderBrush="WhiteSmoke" BorderThickness="1">
                                                                                <TextBlock Text="{Binding Index}" TextTrimming="CharacterEllipsis"
                                                                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                                       FontSize="14" FontWeight="UltraBold" Foreground="WhiteSmoke"
                                                                                       />
                                                                            </Border>
                                                                        </Grid>

                                                                        <Grid Grid.Column="1">

                                                                            <Border BorderBrush="WhiteSmoke" BorderThickness="1">
                                                                                <Viewbox Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                                                    <Canvas Width="16" Height="16">
                                                                                        <Path>
                                                                                            <Path.Style>
                                                                                                <Style TargetType="Path">

                                                                                                    <Setter Property="Stretch" Value="Uniform" />
                                                                                                    <Setter Property="Data" Value="M3,5A2,2 0 0,1 5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5C3.89,21 3,20.1 3,19V5M5,5V19H19V5H5M11,7H13A2,2 0 0,1 15,9V17H13V13H11V17H9V9A2,2 0 0,1 11,7M11,9V11H13V9H11Z"/>

                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Path=IsAssigned}" Value="True">
                                                                                                            <Setter Property="Fill" Value="Lime"/>
                                                                                                        </DataTrigger>
                                                                                                        <DataTrigger Binding="{Binding Path=IsAssigned}" Value="False">
                                                                                                            <Setter Property="Fill" Value="IndianRed"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Path.Style>
                                                                                        </Path>
                                                                                    </Canvas>
                                                                                </Viewbox>
                                                                            </Border>
                                                                        </Grid>

                                                                        <Grid Grid.Column="2">

                                                                            <Border BorderBrush="WhiteSmoke" BorderThickness="1">
                                                                                <Viewbox Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                                                    <Canvas Width="16" Height="16">
                                                                                        <Path>
                                                                                            <Path.Style>
                                                                                                <Style TargetType="Path">

                                                                                                    <Setter Property="Stretch" Value="UniformToFill" />
                                                                                                    <Setter Property="Data" Value="M9,7H11L12,12L13,7H15L13,17H11L9,7M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M5,5V19H19V5H5Z"/>

                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Path=IsVerified}" Value="True">
                                                                                                            <Setter Property="Fill" Value="Lime"/>
                                                                                                        </DataTrigger>
                                                                                                        <MultiDataTrigger>
                                                                                                            <MultiDataTrigger.Conditions>
                                                                                                                <Condition Binding="{Binding Path=IsVerified}" Value="False"/>
                                                                                                                <Condition Binding="{Binding Path=IsAssigned}" Value="True"/>
                                                                                                            </MultiDataTrigger.Conditions>
                                                                                                            <Setter Property="Fill" Value="Yellow"/>
                                                                                                        </MultiDataTrigger>
                                                                                                        <MultiDataTrigger>
                                                                                                            <MultiDataTrigger.Conditions>
                                                                                                                <Condition Binding="{Binding Path=IsVerified}" Value="False"/>
                                                                                                                <Condition Binding="{Binding Path=IsAssigned}" Value="False"/>
                                                                                                            </MultiDataTrigger.Conditions>
                                                                                                            <Setter Property="Fill" Value="IndianRed"/>
                                                                                                        </MultiDataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Path.Style>
                                                                                        </Path>
                                                                                    </Canvas>
                                                                                </Viewbox>
                                                                            </Border>
                                                                        </Grid>

                                                                    </Grid>

                                                                </Grid>

                                                                <!-- LotName -->
                                                                <Grid Grid.Row="1">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="4*"/>
                                                                        <ColumnDefinition Width="6*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                               FontWeight="UltraBold"  Foreground="White" 
                                                                               FontSize="12"
                                                                               Padding="1"
                                                                               Text="Lot name : " TextTrimming="CharacterEllipsis"/>
                                                                    <TextBlock Grid.Column="1"
                                                                               Foreground="White" 
                                                                               HorizontalAlignment="Left" 
                                                                               FontSize="12" 
                                                                               VerticalAlignment="Center"  
                                                                               TextTrimming="CharacterEllipsis"
                                                                               Text="{Binding LotName}"/>
                                                                </Grid>

                                                                <!-- OperatorName -->
                                                                <Grid Grid.Row="2">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="4*"/>
                                                                        <ColumnDefinition Width="6*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                               FontWeight="UltraBold"  Foreground="White" 
                                                                               FontSize="12"
                                                                               Padding="1"
                                                                               Text="Operator name : " TextTrimming="CharacterEllipsis"/>
                                                                    <TextBlock Grid.Column="1"
                                                                               Foreground="White" 
                                                                               HorizontalAlignment="Left" 
                                                                               FontSize="12" 
                                                                               VerticalAlignment="Center"  
                                                                               TextTrimming="CharacterEllipsis"
                                                                               Text="{Binding OperatorName}"/>
                                                                </Grid>

                                                                <!-- RecipeName -->
                                                                <Grid Grid.Row="3">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="4*"/>
                                                                        <ColumnDefinition Width="6*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                               FontWeight="UltraBold"  Foreground="White" 
                                                                               FontSize="12"
                                                                               Padding="1"
                                                                               Text="Device name : " TextTrimming="CharacterEllipsis"/>
                                                                    <TextBlock Grid.Column="1"
                                                                               Foreground="White" 
                                                                               HorizontalAlignment="Left" 
                                                                               FontSize="12" 
                                                                               VerticalAlignment="Center"  
                                                                               TextTrimming="CharacterEllipsis"
                                                                               Text="{Binding RecipeName}"/>
                                                                </Grid>

                                                                <!-- CP Mode -->
                                                                <Grid Grid.Row="4">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="4*"/>
                                                                        <ColumnDefinition Width="6*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                                               FontWeight="UltraBold"  Foreground="White" 
                                                                               FontSize="12"
                                                                               Padding="1"
                                                                               Text="CP Mode : " TextTrimming="CharacterEllipsis"/>
                                                                    <TextBlock Grid.Column="1"
                                                                               Foreground="White" 
                                                                               HorizontalAlignment="Left" 
                                                                               FontSize="12" 
                                                                               VerticalAlignment="Center"  
                                                                               TextTrimming="CharacterEllipsis"
                                                                               Text="{Binding LotMode, Converter={StaticResource EnumConv},Mode=TwoWay}"/>
                                                                </Grid>
                                                                
                                                            </Grid>

                                                        </Border>

                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>

                                            <Grid Grid.Row="1">

                                                <StackPanel  Grid.Column="1" Grid.ColumnSpan="3"  Orientation="Horizontal" HorizontalAlignment="Center">

                                                    <Button Grid.Column="0" MinWidth="80" MinHeight="35" Content="Select All" Command="{Binding CellSelectForLotCommand}" CommandParameter="{x:Static pie:EnumSelectType.SELECTALL}"/>
                                                    <Button Grid.Column="1" MinWidth="80" MinHeight="35" Content="Deselect All" Command="{Binding CellSelectForLotCommand}" CommandParameter="{x:Static pie:EnumSelectType.DESELCTEALL}"/>

                                                </StackPanel>
                                            </Grid>

                                        </Grid>
                                    </Border>

                                    <!-- LOT JOBS & Device List-->
                                    <Border Grid.Column="1" Grid.Row="1" BorderBrush="WhiteSmoke" BorderThickness="3" Margin="5,5,5,0">
                                        <Grid>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1*"/>
                                                <RowDefinition Height="10*"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>

                                            <Border BorderThickness="1" Margin="3,2,1,2" BorderBrush="White" Grid.Row="0" Background="#FF1C1C1F"/>
                                            <Border BorderThickness="1" BorderBrush="White" Grid.Row="1" Grid.Column="0" Margin="3,0,1,1" Background="#FF1C1C1F"/>
                                            <Border BorderThickness="1" BorderBrush="White" Grid.Row="1" Grid.Column="1" Margin="3,0,3,0" Background="#FF1C1C1F"/>

                                            <TextBlock Grid.Row="0" Grid.Column="0" Foreground="White" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center">Lot Jobs</TextBlock>


                                            <Border BorderThickness="1" Margin="3,2,3,2" BorderBrush="White" Grid.Row="0" Grid.Column="1"  Background="#FF1C1C1F">
                                                <TextBlock  Foreground="White" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0">Device List</TextBlock>
                                            </Border>

                                            <Border Grid.Row="1" Grid.Column="0">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="2*"/>
                                                        <RowDefinition Height="2*"/>
                                                        <RowDefinition Height="2*"/>
                                                        <RowDefinition Height="2*"/>
                                                    </Grid.RowDefinitions>

                                                    <!-- Lot name -->
                                                    <Grid Grid.Row="0">

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Grid Grid.Column="0">
                                                            <Label FontSize="15" >
                                                                <TextBlock Text="Lot name :" TextTrimming="CharacterEllipsis"/>
                                                            </Label>
                                                        </Grid>

                                                        <Grid Grid.Column="1" Background="Transparent">
                                                            <TextBox x:Name="tb_LOTID"
                                                                 FontSize="20" 
                                                                 Padding="0" 
                                                                 Foreground="White" 
                                                                 HorizontalAlignment="Center" 
                                                                 VerticalAlignment="Center"
                                                                 HorizontalContentAlignment="Center"
                                                                 VerticalContentAlignment="Center"
                                                                 materialDesign:TextFieldAssist.UnderlineBrush="Lime"
                                                                 materialDesign:HintAssist.Hint="Key in">
                                                                <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                                <TextBox.IsEnabled>
                                                                    <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                        <Binding Path="SelectedFoupObj.LotState"/>
                                                                        <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                        <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                                    </MultiBinding>
                                                                </TextBox.IsEnabled>
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown">
                                                                        <i:InvokeCommandAction  Command="{Binding DataContext.LotNameAssignonLotsettingCommand, ElementName=window}" 
                                                                                                     CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>

                                                        </Grid>

                                                    </Grid>

                                                    <!-- Operator name -->
                                                    <Grid Grid.Row="1">

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Grid Grid.Column="0">
                                                            <Label FontSize="15" >
                                                                <TextBlock Text="Operator name :" TextTrimming="CharacterEllipsis"/>
                                                            </Label>
                                                        </Grid>

                                                        <Grid Grid.Column="1" Background="Transparent">
                                                            <TextBox x:Name="tb_OperatorID"
                                                                 FontSize="20" 
                                                                 Padding="0" 
                                                                 Foreground="White" 
                                                                 HorizontalAlignment="Center" 
                                                                 VerticalAlignment="Center"
                                                                 HorizontalContentAlignment="Center"
                                                                 VerticalContentAlignment="Center"
                                                                 materialDesign:TextFieldAssist.UnderlineBrush="Lime"
                                                                 materialDesign:HintAssist.Hint="Key in">
                                                                <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                                <TextBox.IsEnabled>
                                                                    <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                        <Binding Path="SelectedFoupObj.LotState"/>
                                                                        <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                        <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                                    </MultiBinding>
                                                                </TextBox.IsEnabled>
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown">
                                                                        <i:InvokeCommandAction  Command="{Binding DataContext.OperatorNameAssignonLotsettingCommand, ElementName=window}" 
                                                                                                     CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </Grid>

                                                    </Grid>

                                                    <!-- Selected device -->
                                                    <Grid Grid.Row="2">

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Grid Grid.Column="0">
                                                            <Label FontSize="15" >
                                                                <TextBlock Text="Selected device :" TextTrimming="CharacterEllipsis"/>
                                                            </Label>

                                                        </Grid>

                                                        <Grid Grid.Column="1">
                                                            <TextBlock 
                                                                 FontSize="20" 
                                                                 Padding="0" 
                                                                 Foreground="White" 
                                                                 HorizontalAlignment="Center" 
                                                                 VerticalAlignment="Center"
                                                                 materialDesign:TextFieldAssist.UnderlineBrush="Lime"
                                                                 materialDesign:HintAssist.Hint="Key in"
                                                                 IsEnabled="False"
                                                                 Text="{Binding DataContext.strCurrentInputDevName, Mode=OneWay, ElementName=window}">
                                                                <!--<TextBlock Text="{Binding DataContext.strCurrentInputDevName, Mode=OneWay, ElementName=window}" TextTrimming="CharacterEllipsis"/>-->
                                                            </TextBlock>

                                                        </Grid>

                                                    </Grid>

                                                    <!-- CP Mode -->
                                                    <Grid Grid.Row="3">

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Grid Grid.Column="0">
                                                            <Label FontSize="15" >
                                                                <TextBlock Text="CP Mode :" TextTrimming="CharacterEllipsis"/>
                                                            </Label>

                                                        </Grid>

                                                        <Grid Grid.Column="1">
                                                            <ComboBox  Margin="8" Grid.Column="1"
                                                                       Style="{x:Null}"
                                                                       VerticalContentAlignment="Center"
                                                                       HorizontalContentAlignment="Center"
                                                                       Foreground="Black"
                                                                       FontSize="18"
                                                                       ItemsSource="{Binding Source={StaticResource getDataFromLotMode}, Converter={StaticResource EnumExcludeUndefinedConv}}"
                                                                       SelectedIndex="0"
                                                                       SelectedItem="{Binding DataContext.LotMode, Converter={StaticResource EnumConv}, Mode=TwoWay, ElementName=window}">
                                                                <ComboBox.IsEnabled>
                                                                <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                    <Binding Path="SelectedFoupObj.LotState"/>
                                                                    <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                    <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                                </MultiBinding>
                                                                </ComboBox.IsEnabled>
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Path=., Converter={StaticResource EnumConv},Mode=TwoWay}" />
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </Grid>
                                                    </Grid>
                                                    
                                                </Grid>
                                            </Border>

                                            <Grid Grid.Row="1" Grid.Column="1">

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="8*"/>
                                                    <RowDefinition Height="2*"/>
                                                </Grid.RowDefinitions>

                                                <aniScroll:AnimationScrollViewer x:Name="svViewer" Margin="8" Grid.Row="0" VerticalScrollBarVisibility="Hidden">

                                                    <ListView x:Name="DevList_LotSetting" ItemsSource="{Binding DataContext.DeviceNames, ElementName=window}" 
                                                           Background="Black" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                           SelectionMode="Single">
                                                        <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                        <ListView.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </ListView.IsEnabled>

                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="SelectionChanged">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.DeviceAssignonLotsettingCommand,ElementName=window}"  
                                                                    CommandParameter="{Binding ElementName=DevList_LotSetting, Path=SelectedItems}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>

                                                        <ListView.ItemContainerStyle>
                                                            <Style TargetType="{x:Type ListViewItem}">

                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                <Setter Property="Padding" Value="4,1"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                                <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>

                                                                                <MultiTrigger>
                                                                                    <MultiTrigger.Conditions>
                                                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                                                    </MultiTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="Bd" Value="#9370d8"/>
                                                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                                                    <Setter Property="Margin" Value="5,5,5,5"/>
                                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                                </MultiTrigger>

                                                                                <MultiTrigger>

                                                                                    <MultiTrigger.Conditions>
                                                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                                        <Condition Property="IsSelected" Value="True"/>
                                                                                    </MultiTrigger.Conditions>

                                                                                    <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                                                </MultiTrigger>

                                                                                <MultiTrigger>
                                                                                    <MultiTrigger.Conditions>
                                                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                                        <Condition Property="IsSelected" Value="True"/>
                                                                                    </MultiTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="Bd" Value="#9370d8"/>
                                                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                                                    <Setter Property="Margin" Value="5,5,5,5"/>
                                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                                </MultiTrigger>

                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                                </Trigger>

                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ListView.ItemContainerStyle>

                                                        <ListView.ItemTemplate>
                                                            <DataTemplate>
                                                                <Border>
                                                                    <Grid MinHeight="25" Margin="5">
                                                                        <Label Grid.Column="1" Margin="0" Content="{Binding}" Foreground="White" FontSize="12"/>
                                                                    </Grid>
                                                                </Border>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>
                                                    </ListView>

                                                </aniScroll:AnimationScrollViewer>

                                                <!-- Scroll buttons -->
                                                <Grid Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*"/>
                                                        <ColumnDefinition Width="1*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <!--<Button Grid.Column="0" Style="{StaticResource UpButtonStyle}" Click="CategoryUpBtnClick"/> 
                                                    <Button Grid.Column="1" Style="{StaticResource DwButtonStyle}" Click="CategoryDwBtnClick"/>-->

                                                    <Button Grid.Column="0" Click="CategoryUpBtnClick">
                                                        <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>
                                                        <Viewbox Width="24" Height="24">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="Black" Data="M1,21H23L12,2"/>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Button>

                                                    <Button Grid.Column="1" Click="CategoryDwBtnClick">
                                                        <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>
                                                        <Viewbox Width="24" Height="24">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="Black" Data="M1,2H23L12,21"/>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Button>

                                                </Grid>

                                            </Grid>

                                            <!--<ListView  x:Name="DevList_LotSetting" Grid.Row="1" Grid.Column="1" 
                                                                   ItemsSource="{Binding DataContext.DeviceNames, ElementName=window}" 
                                                                   Background="Black" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                                   SelectionMode="Single"
                                                                   ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                                   IsEnabled="{Binding LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">

                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.DeviceAssignonLotsettingCommand,ElementName=window}"  
                                                                    CommandParameter="{Binding ElementName=DevList_LotSetting, Path=SelectedItems}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}">

                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                        <Setter Property="Padding" Value="4,1"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        -->
                                            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
                                            <!--
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>

                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="#9370d8"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                                            <Setter Property="Margin" Value="5,5,5,5"/>
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </MultiTrigger>

                                                                        <MultiTrigger>

                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                            </MultiTrigger.Conditions>

                                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                                        </MultiTrigger>

                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="#9370d8"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                                            <Setter Property="Margin" Value="5,5,5,5"/>
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </MultiTrigger>

                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                        </Trigger>

                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListView.ItemContainerStyle>

                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border>
                                                            <Grid Margin="8" Height="25">
                                                                <Label Grid.Column="1" 
                                                                            Margin="0"
                                                                             Content="{Binding}" Foreground="White" FontSize="12">
                                                                </Label>
                                                            </Grid>
                                                        </Border>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>-->
                                        </Grid>
                                    </Border>

                                    <!-- ALLOCATER & LOT HANDLER-->
                                    <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Column="0">

                                            <GroupBox Header="Allocater" Grid.ColumnSpan="3" FontSize="12" Foreground="White" BorderThickness="1" Style="{DynamicResource GroupBoxForegroundStyle}" Margin="5,0,3,0">

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*"/>
                                                        <ColumnDefinition Width="1*"/>
                                                        <ColumnDefinition Width="1*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Button Grid.Column="0" Command="{Binding DataContext.AssignLotSettingCommand, ElementName=window}"
                                                            MinWidth="65" FontWeight="Bold" FontSize="10" Height="70"  
                                                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                                            BorderBrush="AntiqueWhite" BorderThickness="2">
                                                        <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}, ConverterParameter={Binding SelectedFoupObj}}">-->
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>
                                                        <Button.Content>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <materialDesign:PackIcon Height="40" Width="40" HorizontalAlignment="Center">

                                                                    <materialDesign:PackIcon.Style>
                                                                        <Style  TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                            <Setter Property="Kind" Value="CartPlus" />
                                                                        </Style>
                                                                    </materialDesign:PackIcon.Style>

                                                                </materialDesign:PackIcon>

                                                                <TextBlock  Grid.Row="1" Width="60"	HorizontalAlignment="Left" 	TextAlignment="Center" FontWeight="Bold" Text="Allocate"/>

                                                            </Grid>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Grid.Column="1" Command="{Binding DataContext.ClearLotSettingCommand, ElementName=window}" CommandParameter="{x:Static pie:EnumClearType.SELECTALL}"
                                                            MinWidth="65" FontWeight="Bold" FontSize="10" Height="70"  
                                                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                                            BorderBrush="AntiqueWhite" BorderThickness="2">
                                                        <!--IsEnabled="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>
                                                        <Button.Content>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <materialDesign:PackIcon Height="40" Width="40" HorizontalAlignment="Center">

                                                                    <materialDesign:PackIcon.Style>
                                                                        <Style  TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                            <Setter Property="Kind" Value="CartMinus" />
                                                                        </Style>
                                                                    </materialDesign:PackIcon.Style>

                                                                </materialDesign:PackIcon>

                                                                <TextBlock  Grid.Row="1" Width="60"	HorizontalAlignment="Left" 	TextAlignment="Center" FontWeight="Bold" Text="Clear&#xa;(Selected)"/>

                                                            </Grid>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Grid.Column="2"
                                                            Command="{Binding DataContext.ClearLotSettingCommand, ElementName=window}" CommandParameter="{x:Static pie:EnumClearType.ALL}"
                                                            MinWidth="65" FontWeight="Bold" FontSize="10" Height="70"  
                                                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                                            BorderBrush="AntiqueWhite" BorderThickness="2">
                                                        <!--="{Binding SelectedFoupObj.LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}">-->
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource BTNEnableState_DependsFoupStateMultiConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>

                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>
                                                        <Button.Content>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <materialDesign:PackIcon Height="40" Width="40" HorizontalAlignment="Center">

                                                                    <materialDesign:PackIcon.Style>
                                                                        <Style  TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                            <Setter Property="Kind" Value="CartOff" />
                                                                        </Style>
                                                                    </materialDesign:PackIcon.Style>

                                                                </materialDesign:PackIcon>

                                                                <TextBlock  Grid.Row="1" Width="60"	HorizontalAlignment="Left" 	TextAlignment="Center" FontWeight="Bold" Text="Clear&#xa;(All)"/>

                                                            </Grid>
                                                        </Button.Content>
                                                    </Button>
                                                </Grid>

                                            </GroupBox>

                                        </Grid>

                                        <Grid Grid.Column="1">

                                            <GroupBox Header="Lot Handler" Grid.ColumnSpan="3" FontSize="12" Foreground="White" BorderThickness="1" Style="{DynamicResource GroupBoxForegroundStyle}" Margin="5,0,3,0">

                                                <Grid>
                                                    <!--IsEnabled="{Binding LotState, Converter={StaticResource BTNEnableState_DepnedsFoupStateConv}}"-->

                                                    <Button Grid.Column="0" FontWeight="Bold" 
                                                                Command="{Binding DataContext.StartSelectedLot, ElementName=window}" 
                                                                FontSize="13" 
                                                                MinWidth="100" 
                                                                Height="70" 
                                                                HorizontalContentAlignment="Center" 
                                                                VerticalContentAlignment="Bottom" 
                                                                BorderBrush="AntiqueWhite" 
                                                                BorderThickness="2">
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource LotLauncherStartBtnEnableConv}">
                                                                <Binding Path="SelectedFoupObj.LotState"/>
                                                                <Binding Path="SelectedFoupObj.LotSettings"/>
                                                                <Binding Path="TriggerForStartConfirm"/>
                                                                <Binding Path="GemModuleRef.GemCommManagerRef.SecsCommInformData.ControlState"/>
                                                                <Binding Path="GemModuleRef.GemSysParamRef.ReceiveMessageType"/>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>

                                                        <Button.Content>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <materialDesign:PackIcon Height="40" Width="40" HorizontalAlignment="Center">

                                                                    <materialDesign:PackIcon.Style>
                                                                        <Style  TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                            <Setter Property="Kind" Value="Play" />
                                                                        </Style>
                                                                    </materialDesign:PackIcon.Style>

                                                                </materialDesign:PackIcon>

                                                                <TextBlock  Grid.Row="1" Width="60"	HorizontalAlignment="Left" 	TextAlignment="Center" FontWeight="Bold" Text="Lot Start"/>

                                                            </Grid>
                                                        </Button.Content>
                                                    </Button>

                                                    <!--<Button Grid.Column="1" FontWeight="Bold"
                                                                Command="{Binding DataContext.LotAbort, ElementName=window}" 
                                                                FontSize="13" 
                                                                MinWidth="100" 
                                                                Height="70" 
                                                                HorizontalContentAlignment="Center" 
                                                                VerticalContentAlignment="Bottom" 
                                                                BorderBrush="AntiqueWhite" 
                                                                BorderThickness="2"
                                                                IsEnabled="True">
                                                        <Button.Content>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <materialDesign:PackIcon Height="40" Width="60" HorizontalAlignment="Center">

                                                                    <materialDesign:PackIcon.Style>
                                                                        <Style  TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                            <Setter Property="Kind" Value="CloseOctagonOutline" />
                                                                        </Style>
                                                                    </materialDesign:PackIcon.Style>

                                                                </materialDesign:PackIcon>

                                                                <TextBlock  Grid.Row="1" Width="100" HorizontalAlignment="Left" 	TextAlignment="Center" FontWeight="Bold" Text="Lot Cancel"/>

                                                            </Grid>
                                                        </Button.Content>

                                                    </Button>-->

                                                </Grid>

                                            </GroupBox>

                                        </Grid>

                                    </Grid>

                                </Grid>

                            </Grid>
                        </Grid>

                    </MahAppsControls:MetroTabItem>

                    <!-- ViSION -->
                    <MahAppsControls:MetroTabItem AutomationProperties.AutomationId="tiVISION"
                                                  Header="VISION"  BorderThickness="1" 
                                                  BorderBrush="Black"
                                                  MahAppsControls:ControlsHelper.HeaderFontSize="20"
                                                  MahAppsControls:ControlsHelper.HeaderMargin="8">
                        <Grid Grid.Row="0" Grid.Column="1" Margin="4,0,0,0">
                            <Border Margin="8,8,4,8" BorderBrush="WhiteSmoke" BorderThickness="1" >
                                <Grid>
                                    <GroupBox Header="Streaming" FontSize="12" Foreground="White" Style="{DynamicResource GroupBoxForegroundStyle}"
                                            VerticalAlignment="Top" HorizontalAlignment="Right">
                                        <StackPanel Orientation="Horizontal">
                                            <!--<Button Content="Enable" Background="Orange"  Width="100"   Foreground="White" ></Button>
                                                    <Button Content="Disable" Background="Orange"  Width="100"  Foreground="White" ></Button>-->
                                            <Button AutomationProperties.AutomationId="btnStreamingOn"
                                                    Content="ON" Background="Orange"  Width="100"   Foreground="White" Command="{Binding StageStreamingOnOffCommand}" CommandParameter="{x:Static pi:StreamingModeEnum.STREAMING_ON}"></Button>
                                            <Button AutomationProperties.AutomationId="btnStreamingOff"
                                                    Content="OFF" Background="Orange"  Width="100"  Foreground="White" Command="{Binding StageStreamingOnOffCommand}" CommandParameter="{x:Static pi:StreamingModeEnum.STREAMING_OFF}"></Button>
                                        </StackPanel>
                                    </GroupBox>
                                    <Label Content="{Binding SelectedStage.StreamingMode}" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                           FontSize="24" Foreground="Yellow" FontWeight="DemiBold"/>

                                    <Border BorderBrush="DimGray" BorderThickness="2" 
                                            HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentControl Width="640" Height="640" 
                                        Margin="4" 
                                        VerticalAlignment="Center" HorizontalAlignment="Center"
                                        Content="{Binding DisplayPort}"/>
                                    </Border>
                                    <!--<ContentControl Width="570" Height="570" 
                                        Margin="0,8,8,8" 
                                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                        Content="{Binding DisplayPort, 
                                            Converter={StaticResource ViewTargetConverter}}" 
                                        />-->

                                    <Grid   Width="100" Height="150" 
                                Margin="8,20"
                                VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                Opacity="1" 
                                >
                                    </Grid>

                                    <!--<Button Width="120" Height="40" Style="{DynamicResource ControlButtonStyle}" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Left" 
                                Foreground="WhiteSmoke" Content="{Binding SelectedStage.StreamingMode}"
                                IsEnabled="{Binding SelectedStage.StreamingMode}"
                                Background="{Binding SelectedStage.StreamingMode, Converter={StaticResource ViewTargetConverter}}"
                                Command="{Binding StreamingCommand}"/>-->
                                </Grid>
                            </Border>

                            <Grid   Width="200" Height="200" 
                        Margin="8,20"
                        VerticalAlignment="Top" HorizontalAlignment="Right" 
                        Opacity="1" 
                        >
                                <ContentControl Visibility="{Binding LotOPModule.MiniVisible}"
                                    Opacity="0.7"
                                    Content="{Binding LotOPModule.MiniViewTarget,
                                    Converter={StaticResource ViewTargetConverter}}" 
                                    />

                            </Grid>
                        </Grid>
                    </MahAppsControls:MetroTabItem>
                    
                    <!-- Monitoring -->
                    <MahAppsControls:MetroTabItem
                            x:Name="MONITORING"
                            Header="Monitoing"  BorderThickness="1" 
                            BorderBrush="Black"
                            MahAppsControls:ControlsHelper.HeaderFontSize="20"
                            MahAppsControls:ControlsHelper.HeaderMargin="8">
                        <Grid
                        Background="#333333"
                        Margin="8"
                        >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1.5*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3*"/>
                            </Grid.RowDefinitions>

                            <!--<Border Grid.Row="0" BorderThickness="2" BorderBrush="WhiteSmoke">-->

                            <ListView x:Name="CellListView4" ItemsSource="{Binding Stages}" 
                          Grid.Row="0" BorderThickness="2"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                          ScrollViewer.VerticalScrollBarVisibility="Auto" 
                          HorizontalContentAlignment="Stretch" 
                          VerticalContentAlignment="Stretch" Grid.ColumnSpan="3" >

                                <ListView.ItemContainerStyle>

                                    <Style TargetType="{x:Type ListViewItem}">

                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="Padding" Value="4,1"/>
                                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>

                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                        </MultiTrigger>

                                                        <MultiTrigger>

                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>

                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                        </MultiTrigger>

                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                        </MultiTrigger>

                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>

                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Black"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="White">
                                            <Border.BorderThickness>
                                                <Thickness Top="1" Bottom="1" Left="1" Right="1."/>
                                            </Border.BorderThickness>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0">

                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Grid.Column="0" Grid.Row="1" BorderBrush="WhiteSmoke" BorderThickness="1"/>
                                                    <Border Grid.Column="0" BorderThickness="3" Margin="2"
                                                                BorderBrush="{Binding StageInfo.IsExcuteProgram, Converter={StaticResource CellObjectForeGroundConv}, Mode=OneWay}" />

                                                    <Label Grid.Column="0"  Content="{Binding Index}" Padding="0,0,0,0"
                                                               Foreground="WhiteSmoke" FontSize="13"  
                                                               FontWeight="Bold"
                                                               VerticalContentAlignment="Center"
                                                               HorizontalContentAlignment="Center"/>
                                                </Grid>

                                                <ListView x:Name="BehaviorListView" ItemsSource="{Binding MonitoringBehaviorList}" 
                                                          Grid.Row="1"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                          ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                                                          HorizontalContentAlignment="Stretch" 
                                                          VerticalContentAlignment="Stretch"
                                                          Visibility="{Binding StageInfo.IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <Border x:Name="bor" Grid.Column="0" BorderBrush="WhiteSmoke" BorderThickness="0.5" Margin="0 -7 0 -7" IsEnabled="{Binding IsError}">
                                                                <Label Grid.Column="0"
                                                                        Content="{Binding Name}"
                                                                        FontSize="14"
                                                                        Foreground="White"
                                                                        Width="Auto"
                                                                        Padding="0"
                                                                        FontWeight="Bold"
                                                                        HorizontalAlignment="Center"/>
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Setter Property="Background" Value="Green" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsError}" Value="True">
                                                                                <DataTrigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                                                To="Red" From="Black" Duration="0:0:0.5" AutoReverse="True"
                                                                                                RepeatBehavior="Forever" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.EnterActions>
                                                                                <DataTrigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                                                To="Green" From="Red" Duration="0:0:0.5" />
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.ExitActions>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="PreviewMouseDown">
                                                                        <i:InvokeCommandAction Command="{Binding DataContext.MonitoringCheckCommand, ElementName=window}" >
                                                                            <i:InvokeCommandAction.CommandParameter>
                                                                                <MultiBinding Converter="{StaticResource MonitoringCheckIndexConverter}">
                                                                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ListViewItem}, Mode=FindAncestor}" Converter="{StaticResource IndexConverter}"/>
                                                                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ListViewItem}, Mode=FindAncestor, AncestorLevel=2}" Converter="{StaticResource IndexConverter}"/>
                                                                                </MultiBinding>
                                                                            </i:InvokeCommandAction.CommandParameter>
                                                                        </i:InvokeCommandAction>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </MahAppsControls:MetroTabItem>

                </MahAppsControls:MetroAnimatedSingleRowTabControl>
            </Border>
        </Grid>

        <!-- CELLS -->
        <Grid Grid.Row="1" Grid.Column="1" MinWidth="200">

            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <!--<Border Grid.Row="0" BorderThickness="2" BorderBrush="WhiteSmoke">-->

            <ListView x:Name="CellListView" ItemsSource="{Binding Stages}" 
                          Grid.Row="0" BorderThickness="2" 
                          SelectionMode="{Binding CellListSelectionMode}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                          HorizontalContentAlignment="Stretch" 
                          VerticalContentAlignment="Stretch" >
                <!--PreviewMouseDown="CellListView_PreviewMouseDown">-->

                <!--<ListView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Red" />
                </ListView.Resources>-->

                <!--<ListView.Style>
                        <Style TargetType="{x:Type ListView}">
                            <Setter Property="BorderBrush" Value="White"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            -->
                <!-- here we go -->
                <!--
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Red"/>
                            </Style.Resources>
                        </Style>
                    </ListView.Style>-->

                <i:Interaction.Triggers>

                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  
                                                   CommandParameter="{Binding ElementName=CellListView, Path=SelectedItems}"/>
                    </i:EventTrigger>

                    <!--<i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding CellListViewPreviewMouseDown}"  
                                                   CommandParameter="{Binding ElementName=CellListView, Path=SelectedItems}"/>
                    </i:EventTrigger>-->

                    <!--<i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding CellListViewPreviewMouseDown}"  
                                                   CommandParameter="{Binding ElementName=CellListView, Path=SelectedItems}"/>
                    </i:EventTrigger>-->

                </i:Interaction.Triggers>

                <ListView.ItemContainerStyle>

                    <Style TargetType="{x:Type ListViewItem}">

                        <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ListBoxIndexConv}, StringFormat={}lvStage_{0}}"/>

                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                        </MultiTrigger>

                                        <MultiTrigger>

                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                        </MultiTrigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="IsSelected" Value="{Binding StageInfo.IsChecked}" />
                        <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>

                        <!--<Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Green" />
                                -->
                        <!--<Setter Property="Template" Value="{StaticResource SelectedTemplate}" />-->
                        <!--
                            </MultiTrigger>
                        </Style.Triggers>-->

                    </Style>
                </ListView.ItemContainerStyle>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="{Binding CellColumn}" Rows="{Binding CellRow}" Background="Black"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border>

                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource CellSelectedToBrushConv}">
                                    <Binding Path="SelectedItems" ElementName="CellListView" />
                                    <Binding Path="." />
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.ChangedSelectedItemsCount" />
                                </MultiBinding>
                            </Border.BorderBrush>

                            <Border.BorderThickness>
                                <MultiBinding Converter="{StaticResource CellSelectedToBorderThicknessConv}">
                                    <Binding Path="SelectedItems" ElementName="CellListView" />
                                    <Binding Path="." />
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.ChangedSelectedItemsCount" />
                                </MultiBinding>
                            </Border.BorderThickness>

                            <Border.Background>
                                <ImageBrush ImageSource="{StaticResource Background.Lock}" 
                                            Stretch="UniformToFill">
                                    <ImageBrush.Opacity>
                                        <MultiBinding Converter="{StaticResource StageMovelockBackgroundConv}" ConverterParameter="LOCK">
                                            <Binding Path="StageInfo.IsConnected"/>
                                            <Binding Path="StageInfo.LotData.StageMoveState"/>
                                        </MultiBinding>
                                    </ImageBrush.Opacity>
                                </ImageBrush>
                            </Border.Background>

                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>

                                <!-- Cell & Connect & Alaram -->
                                <Grid Grid.Row="0">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.Column="0" BorderThickness="1" BorderBrush="White">
                                        <Grid>
                                            <Border Grid.Column="0" BorderThickness="3" Margin="2"
                                                BorderBrush="{Binding StageInfo.IsExcuteProgram, Mode=OneWay, Converter={StaticResource CellObjectForeGroundConv}}" ></Border>

                                            <Label AutomationProperties.AutomationId="{Binding Index, StringFormat='lblCellConnect_{0}'}"
                                                   Grid.Column="0" Content="{Binding Index}" Padding="0,0,0,0"
                                                   Foreground="WhiteSmoke" FontSize="16"  
                                                   FontWeight="Bold"
                                                   VerticalContentAlignment="Center"
                                                   HorizontalContentAlignment="Center" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.ConnectCommand, ElementName=window}"
                                                                                    CommandParameter="{Binding Index}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Label>
                                        </Grid>
                                    </Border>

                                    <Grid Grid.Column="1" Margin="0">
                                        <Border Grid.Column="1"  BorderBrush="White" BorderThickness="1"></Border>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                            <Label Content="PV" Margin="4,2,0,2" Padding="0" FontSize="10" FontWeight="Bold"
                                              VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Foreground="MediumPurple"/>
                                            <Label Content="{Binding StageInfo.PV}" ContentStringFormat="{}{0:0.0}" Margin="4" Padding="0" FontSize="10" FontWeight="Bold"
                                              VerticalContentAlignment="Center"  HorizontalContentAlignment="Left" Foreground="LightGray"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                            <Label Content="DP" Margin="0,2,4,2" Padding="0" FontSize="10" FontWeight="Bold"
                                              VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Foreground="MediumPurple"/>
                                            <Label Content="{Binding StageInfo.DewPoint}" ContentStringFormat="{}{0:0.0}" Margin="4" Padding="0" FontSize="10" FontWeight="Bold"
                                              VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Foreground="LightGray" />
                                        </StackPanel>

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>

                                            <Label Grid.Row="0" Margin="0"
                                               HorizontalContentAlignment="Center"
                                               VerticalContentAlignment="Center"
                                               FontSize="10" 
                                               Foreground="WhiteSmoke" 
                                               FontWeight="Bold">
                                                <Label.Content>
                                                    <MultiBinding Converter="{StaticResource StageLockToValueTextConverter}" Mode="OneWay">
                                                        <Binding Path="StageMode"/>
                                                        <Binding Path="LockMode" />
                                                        <Binding Path="Reconnecting" />
                                                    </MultiBinding>
                                                </Label.Content>
                                            </Label>
                                            <Label Grid.Row="1" Margin="-5"
                                               HorizontalContentAlignment="Center"
                                               VerticalContentAlignment="Center"
                                               FontSize="10" 
                                               Foreground="WhiteSmoke" 
                                               FontWeight="Bold"
                                               Content="{Binding StageInfo.LotData.LotID, Converter={StaticResource LotIDToStringConv}}">
                                            </Label>
                                        </Grid>
                                    </Grid>

                                    <!--<Grid Grid.Column="1" >
                                        <Border Grid.Column="1"  BorderBrush="White" BorderThickness="1"></Border>
                                        <Label Grid.Column="1" Margin="2"
                                           Content="{Binding StageMode}" Padding="5"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           FontSize="14" 
                                           Foreground="WhiteSmoke" 
                                           FontWeight="Bold"/>
                                    </Grid>-->

                                    <Border Grid.Column="2"  BorderBrush="White" BorderThickness="1">
                                        <MahAppsControls:Badged 
                                        Badge="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}, Mode=FindAncestor}, Path=DataContext.StageInfo.AlarmMessageNotNotifiedCount}" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        BadgeBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}, Mode=FindAncestor}, Path=DataContext.StageInfo.AlarmMessageNotNotifiedCount, Converter={StaticResource EventBadgeBackGroundBrushConv}}" 
                                        BadgeForeground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}, Mode=FindAncestor}, Path=DataContext.StageInfo.AlarmMessageNotNotifiedCount,Converter={StaticResource EventBadgeForeGroundBrushConv}}" 
                                        BadgePlacementMode="TopRight"
                                        Margin="0,0,0,0"
                                        Padding="0,0,0,0">

                                            <Button AutomationProperties.AutomationId="{Binding Index, StringFormat='btnCellAlaramView_{0}'}"
                                                    Command="{Binding Path=DataContext.UsedBellDrawerOpenCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                    CommandParameter="{Binding .}"
                                                    Template="{StaticResource ExampleButton}"  Width="28"  Margin="0,0,0,-4"
                                                    IsEnabled="{Binding StageInfo.IsConnected}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            </Button>

                                        </MahAppsControls:Badged>
                                    </Border>

                                </Grid>

                                <Grid Grid.Row="1" Margin="0,0,0,0">

                                    <Grid >
                                        <Rectangle Fill="{Binding StageState, Converter={StaticResource StageStateToValueConverter}}" Height="34" Width="Auto"/>
                                        <Rectangle  Fill="Orange" Opacity="0" Height="34" Width="Auto" >
                                            <Rectangle.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding StageInfo.IsReservePause}" Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard >
                                                                    <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                                                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard FillBehavior="Stop">
                                                                        <DoubleAnimation To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <!--<TextBlock Text="{Binding StageState, Converter={StaticResource StageStateToValueTextConverter}}" FontSize="15" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>-->
                                            <TextBlock FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource StageStateToValueTextConverter}" Mode="OneWay">
                                                        <Binding Path="StageState"/>
                                                        <Binding Path="PauseReason" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>

                                            <TextBlock Text="{Binding ProbingTimeStr}" FontSize="15" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                            <TextBlock Text="{Binding ForcedDone, Converter={StaticResource ForcedDoneToTextConv}}" FontSize="15" Foreground="Red"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <!--#region[Error]-->
                                        <Viewbox Height="30" HorizontalAlignment="Right" Margin="0,0,20,0"
                                                 Visibility="{Binding StageState, Converter={StaticResource StageErrorStateToVisibilityConvertet}}">
                                            <materialDesign:PackIcon Foreground="WhiteSmoke"
                                                             HorizontalAlignment="Right">
                                                <materialDesign:PackIcon.Style>
                                                    <Style  TargetType="materialDesign:PackIcon"
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                        <Setter Property="Kind" Value="Warning" />
                                                    </Style>
                                                </materialDesign:PackIcon.Style>

                                            </materialDesign:PackIcon>

                                        </Viewbox>

                                        <Button Opacity="0" Background="Transparent" Height="30" HorizontalAlignment="Right" Margin="0,0,20,0" Width="100"
                                                Visibility="{Binding StageState, Converter={StaticResource StageErrorStateToVisibilityConvertet}}"
                                                Command="{Binding Path=DataContext.StageGetErrorInfoCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                CommandParameter="{Binding Index}"/>

                                        <!--#endregion-->

                                        <!--#region[Reserve Pause]-->
                                        <Viewbox Height="30" HorizontalAlignment="Left" Margin="10,0,0,0"
                                                 Visibility="{Binding StageInfo.IsReservePause, Converter={StaticResource TimeVisibiltyConvert}}">
                                            <materialDesign:PackIcon Foreground="WhiteSmoke"
                                                             HorizontalAlignment="Right">
                                                <materialDesign:PackIcon.Style>
                                                    <Style  TargetType="materialDesign:PackIcon"
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                        <Setter Property="Kind" Value="PauseCircleOutline" />
                                                    </Style>
                                                </materialDesign:PackIcon.Style>

                                            </materialDesign:PackIcon>

                                        </Viewbox>

                                        <Button Opacity="0" Background="Transparent" Height="30" Margin="10,0,0,0" HorizontalAlignment="Left"
                                                Width="100" Visibility="{Binding StageInfo.IsReservePause, Converter={StaticResource TimeVisibiltyConvert}}"
                                                Command="{Binding Path=DataContext.ReservePauseIconClickCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                CommandParameter="{Binding Index}"/>

                                        <!--#endregion-->

                                    </Grid>
                                </Grid>

                                <!-- Title -->
                                <Grid Grid.Row="2" Margin="0,-5,0,0">

                                    <Label Content="{Binding StageInfo.LastTitle}" 
                                                   MinHeight="32"
                                                   FontSize="15" 
                                                   Foreground="WhiteSmoke" 
                                                   FontWeight="Bold" 
                                                   BorderBrush="White" 
                                                   BorderThickness="1.5" 
                                                   HorizontalAlignment="Stretch" 
                                                   VerticalAlignment="Stretch" 
                                                   HorizontalContentAlignment="Center"/>

                                </Grid>

                                <!-- Device name -->
                                <Grid Grid.Row="3" Margin="0,-8,0,0" >

                                    <Label MinHeight="32"
                                                   FontSize="15" 
                                                   Foreground="WhiteSmoke" 
                                                   FontWeight="Bold" 
                                                   BorderBrush="{Binding StageInfo.DeviceLoadResult, Converter={StaticResource DeviceLabelBorderConv}}" 
                                                   BorderThickness="1.5" 
                                                   HorizontalAlignment="Stretch" 
                                                   VerticalAlignment="Stretch" 
                                                   HorizontalContentAlignment="Center">
                                        <TextBlock Text="{Binding StageInfo.LotData.DeviceName, Converter={StaticResource NullToStringConv}}"></TextBlock>
                                    </Label>
                                </Grid>

                                <!-- Card -->
                                <Grid Grid.Row="4" Margin="0,-8,0,0">
                                    <ProgressBar MinHeight="32"
                                                 BorderThickness="0" 
                                                 HorizontalAlignment="Stretch" 
                                                 VerticalAlignment="Stretch" 
                                                 HorizontalContentAlignment="Center"
                                                 Foreground="DarkSlateGray"
                                                 Background="Transparent"
                                                 Margin="10" 
                                                 Minimum="0"
                                                 Maximum="{Binding ChillingTimeMax}"
                                                 Value="{Binding ChillingTime}"
                                                 Visibility="{Binding ChillingTimeProgressBar_Visibility}"
                                                 />
                                    <Label     FontSize="15" 
                                                   MinHeight="32"
                                                   FontWeight="Bold"                                      
                                                   BorderThickness="1.5" 
                                                   HorizontalAlignment="Stretch" 
                                                   VerticalAlignment="Stretch" 
                                                   HorizontalContentAlignment="Center">
                                        <MultiBinding Converter="{StaticResource CardStatusToTextConv}">
                                            <Binding Path="CardStatus" />
                                            <Binding Path="Progress"/>
                                            <Binding Path="CardObj"/>
                                        </MultiBinding>
                                        <Label.Foreground>
                                            <MultiBinding Converter="{StaticResource CardStatusToColorConv}">
                                                <Binding Path="CardStatus" />
                                                <Binding Path="CardObj.WaferState"/>
                                                <Binding Path="StageInfo.IsConnected" />
                                            </MultiBinding>
                                        </Label.Foreground>
                                        <Label.BorderBrush>
                                            <MultiBinding Converter="{StaticResource CardStatusToColorConv}">
                                                <Binding Path="CardStatus" />
                                                <Binding Path="CardObj.WaferState"/>
                                                <Binding Path="StageInfo.IsConnected" />
                                            </MultiBinding>
                                        </Label.BorderBrush>
                                    </Label>

                                </Grid>

                                <!-- Wafer -->
                                <Grid Grid.Row="5" Margin="0,-8,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MaxWidth="{Binding StageInfo.LotData.WaferAlignState ,Converter={StaticResource GridWidthConvert}, FallbackValue=0}"/>
                                    </Grid.ColumnDefinitions>
                                    <Label     FontSize="15"  Grid.Column="0"
                                                   MinHeight="32"
                                                   FontWeight="Bold"  
                                                   BorderThickness="1.5"
                                                   HorizontalAlignment="Stretch" 
                                                   VerticalAlignment="Stretch" 
                                                   HorizontalContentAlignment="Center"
                                                   >
                                        <Label.Foreground>
                                            <MultiBinding Converter="{StaticResource StatusToColorConv}">
                                                <Binding Path="WaferStatus" />
                                                <Binding Path="StageInfo.IsConnected" />
                                                <Binding Path="IsWaferOnHandler" />
                                            </MultiBinding>
                                        </Label.Foreground>
                                        <Label.BorderBrush>
                                            <MultiBinding Converter="{StaticResource StatusToColorConv}">
                                                <Binding Path="WaferStatus" />
                                                <Binding Path="StageInfo.IsConnected" />
                                                <Binding Path="IsWaferOnHandler" />
                                            </MultiBinding>
                                        </Label.BorderBrush>
                                        <MultiBinding Converter="{StaticResource WaferStatusToTextConv}">
                                            <Binding Path="WaferStatus" />
                                            <Binding Path="Progress"/>
                                            <Binding Path="WaferObj"/>
                                        </MultiBinding>
                                    </Label>
                                    <Button Grid.Column="1" Margin="0,0,8,0" Padding="0" BorderBrush="LimeGreen"  BorderThickness="2"  Opacity="1" Visibility="{Binding StageInfo.LotData.WaferAlignState, Converter={StaticResource WaferRecoveryVisibiltyConvert}, FallbackValue=Collapsed}"
                                              HorizontalAlignment="Center"
                                              Command="{Binding Path=DataContext.WaferRecoveryInformCammand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}" CommandParameter="{Binding Index}" Width="30" Height="30" Background="white">
                                        <Button.Content>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Viewbox Grid.Row="0" >
                                                    <materialDesign:PackIcon Kind="ProgressWrench" Foreground="LimeGreen" Background="Transparent" Height="25" Width="25" />
                                                </Viewbox>
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                </Grid>

                                <!-- Communication -->

                                <Border Grid.Row="6" Margin="10,0,10,0" BorderThickness="1.5" Visibility="{Binding StageInfo.IsAvailableTesterConnect, Converter={StaticResource TesterGridAvaliableToVisibilityConv}}"
                                        BorderBrush="White">
                                    <Grid Grid.Row="6">

                                        <Grid Grid.Column="1">

                                            <!--Command="{Binding Path=DataContext.CellCommunicationConnectionCommand, ElementName=window}" 
                                                        CommandParameter="{Binding Index}"-->
                                            <cui:Button GUID="80132709-BE3D-49FE-AAC0-449787C8DB1C" Lockable="False">
                                                <Button.Content>
                                                    <Grid>
                                                        <TextBlock  Foreground="{Binding StageInfo.IsTesterConnected, Converter={StaticResource TesterConnectedToBrushConv}}" 
                                                                    MinWidth="30" 
                                                                    HorizontalAlignment="Stretch"  
                                                                    TextAlignment="Center" 
                                                                    Text="Tester connection"/>
                                                    </Grid>
                                                </Button.Content>
                                            </cui:Button>

                                        </Grid>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="7" Margin="10,0,10,0" BorderThickness="1.5" Visibility="{Binding StageInfo.IsAvailableTesterConnect, Converter={StaticResource TesterGridAvaliableToVisibilityConv}}"
                                        BorderBrush="White">
                                    <Grid Grid.Row="7">

                                        <Grid Grid.Column="1">

                                            <cui:Button Command="{Binding Path=DataContext.CellTeachPinCommand, ElementName=window}" 
                                                    CommandParameter="{Binding Index}"
                                                    Lockable="false"
                                                    GUID="7BEF55D9-A1A2-472E-BF95-ED215960DE19"
                                                    >
                                                <cui:Button.IsEnabled>
                                                    <MultiBinding Converter="{StaticResource LotStatetoTeachPinBtnEnableConv}">
                                                        <Binding Path="StageInfo.LotData.LotState"/>
                                                    </MultiBinding>
                                                </cui:Button.IsEnabled>

                                                <Button.Content>
                                                    <Grid>
                                                        <TextBlock  
                                                                    Foreground="{Binding StageInfo.IsTesterConnected, Converter={StaticResource TesterConnectedToBrushConv}}" 
                                                                    MinWidth="30" 
                                                                    HorizontalAlignment="Stretch"  
                                                                    TextAlignment="Center" 
                                                                    Text="Manual Teach Pin"/>

                                                    </Grid>
                                                </Button.Content>
                                            </cui:Button>

                                        </Grid>
                                    </Grid>
                                </Border>
                                <!-- Informations -->
                                <Grid Grid.Row="8" Margin="0,-8,0,0" Visibility="{Binding StageInfo.IsConnected, Converter={StaticResource TimeVisibiltyConvert}}" >

                                    <Grid>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7*"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>

                                        <aniScroll:AnimationScrollViewer x:Name="CellDataCollectionListView" 
                                                                         Grid.Row="0"
                                                                         Margin="8" 
                                                                         IsEnabled="False"
                                                                         HorizontalScrollBarVisibility="Hidden" 
                                                                         VerticalScrollBarVisibility="Hidden"
                                                                         VerticalAlignment="Top">

                                            <!--MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid, AncestorLevel=2}, Converter={StaticResource ScrollViewerMaxHeightConv}}"-->

                                            <!--VirtualizingPanel.IsContainerVirtualizable="True"
                                                      VirtualizingPanel.IsVirtualizing="True"
                                                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"-->

                                            <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                      VerticalAlignment="Top"
                                                      ItemsSource="{Binding StageInfo.LotData.DataCollection}" 
                                                      SelectedItem="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Converter={StaticResource SelectedItemTransferConv}}"
                                                      Background="#FF1C1C1F">

                                                <!--<i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectedItemChangedCommand, ElementName=window}"
                                                            CommandParameter="{Binding ElementName=CellListView, Path=SelectedItems}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>-->

                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}">
                                                        <Style.Triggers>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="{x:Null}" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                            </Trigger>

                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="{x:Null}" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                            </Trigger>

                                                        </Style.Triggers>

                                                        <!--<Setter Property="IsHitTestVisible" Value="True" />-->
                                                        <!--<Setter Property="Focusable" Value="False" />-->
                                                        <Setter Property="Margin" Value="-20,0,0,-8"/>
                                                        <!--<Setter Property="Height" Value="50"/>-->
                                                    </Style>
                                                </ListView.ItemContainerStyle>

                                                <ListView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Vertical"/>
                                                        <!--<local:SqueezeStackPanel/>-->
                                                    </ItemsPanelTemplate>
                                                </ListView.ItemsPanel>

                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <Label HorizontalAlignment="Left" 
                                                               FontSize="14" 
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center" Foreground="White" >

                                                            <!--<TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis"/>-->

                                                            <TextBlock TextTrimming="CharacterEllipsis">

                                                                <local:TextBlockEx.FormattedText>
                                                                    <MultiBinding Converter="{StaticResource StageLotDataToFormattedTextConv}">
                                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}" Path="ItemsSource" />
                                                                        <Binding Path="."/>
                                                                    </MultiBinding>
                                                                </local:TextBlockEx.FormattedText>

                                                            </TextBlock>

                                                        </Label>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>

                                            </ListView>

                                        </aniScroll:AnimationScrollViewer>

                                        <!-- Sokaing Informations -->
                                        <Grid Grid.Row="1">

                                            <!--Style="{DynamicResource GroupBoxForegroundStyle}"-->
                                            <GroupBox Header="Soaking" 
                                                      FontSize="12" 
                                                      Margin="5"
                                                      Foreground="White" 
                                                      Style="{x:Null}"
                                                      BorderThickness="1">

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="7*"/>
                                                        <ColumnDefinition Width="3*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Grid Grid.Column="0">

                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid Grid.Row="0">

                                                            <Label FontSize="14" 
                                                                   VerticalAlignment="Center" 
                                                                   HorizontalContentAlignment="Left"
                                                                   VerticalContentAlignment="Center"
                                                                   Foreground="White" Margin="0,0,0,0">
                                                                <TextBlock TextTrimming="CharacterEllipsis">
                                                                    Type :
                                                                    <TextBlock Text="{Binding StageInfo.LotData.SoakingType}" TextTrimming="CharacterEllipsis" Foreground="LimeGreen" FontWeight="Bold"/>
                                                                </TextBlock>
                                                            </Label>

                                                        </Grid>

                                                        <Grid Grid.Row="1">

                                                            <Label FontSize="14" 
                                                                   VerticalAlignment="Center" 
                                                                   HorizontalContentAlignment="Left"
                                                                   VerticalContentAlignment="Center"
                                                                   Foreground="White" Margin="0,0,0,0">
                                                                <TextBlock TextTrimming="CharacterEllipsis">
                                                                    Time(sec) :
                                                                    <TextBlock Text="{Binding StageInfo.LotData.SoakingRemainTime}" TextTrimming="CharacterEllipsis" Foreground="Red" FontWeight="Bold"/>
                                                                </TextBlock>
                                                            </Label>

                                                        </Grid>

                                                        <Grid Grid.Row="2">

                                                            <Label FontSize="14" 
                                                                   VerticalAlignment="Center" 
                                                                   HorizontalContentAlignment="Left"
                                                                   VerticalContentAlignment="Center"
                                                                   Foreground="White" Margin="0,0,0,0">
                                                                <TextBlock TextTrimming="CharacterEllipsis">
                                                                    Clearance(um) :
                                                                    <TextBlock Text="{Binding StageInfo.LotData.SoakingZClearance}" TextTrimming="CharacterEllipsis" Foreground="LimeGreen" FontWeight="Bold"/>
                                                                </TextBlock>
                                                            </Label>

                                                        </Grid>
                                                    </Grid>

                                                    <Grid Grid.Column="1">

                                                        <cui:Button AutomationProperties.AutomationId="btnStopSoak"
                                                                GUID="5E81E51A-B359-461A-AC8A-8AEFE857BF3C"
                                                                Content="STOP" FontSize="12" 
                                                                Command="{Binding Path=DataContext.SoakStopCommand, ElementName=window}"
                                                                CommandParameter="{Binding Index}"
                                                                MinHeight="30"
                                                                MinWidth="50"
                                                                Width="Auto"
                                                                Height="Auto"
                                                                Foreground="White" 
                                                                Background="Red" 
                                                                HorizontalAlignment="Center" 
                                                                VerticalAlignment="Center" 
                                                                IsEnabled="{Binding StageInfo.LotData.StopSoakBtnEnable}"/>
                                                    </Grid>

                                                </Grid>

                                            </GroupBox>
                                        </Grid>

                                        <!-- Scroll Buttons -->
                                        <Grid Grid.Row="2" MaxHeight="50">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>

                                            <Button Grid.Column="0" Command="{Binding Path=DataContext.CellDataCollectionScrollUpCommand, ElementName=window}"
                                                    CommandParameter="{Binding ElementName=CellDataCollectionListView}">
                                                <!--CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ScrollViewer}}}">-->
                                                <Viewbox Width="24" Height="24">
                                                    <Canvas Width="24" Height="24">
                                                        <Path Fill="Black" Data="M1,21H23L12,2"/>
                                                    </Canvas>
                                                </Viewbox>
                                            </Button>

                                            <Button Grid.Column="1" Command="{Binding Path=DataContext.CellDataCollectionScrollDownCommand, ElementName=window}"
                                                    CommandParameter="{Binding ElementName=CellDataCollectionListView}">
                                                <Viewbox Width="24" Height="24">
                                                    <Canvas Width="24" Height="24">
                                                        <Path Fill="Black" Data="M1,2H23L12,21"/>
                                                    </Canvas>
                                                </Viewbox>
                                            </Button>

                                        </Grid>

                                    </Grid>

                                    <!--<aniScroll:AnimationScrollViewer Margin="8" VerticalScrollBarVisibility="Hidden">

                                        <Grid>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="8*"/>
                                                <RowDefinition Height="2*"/>
                                            </Grid.RowDefinitions>

                                            <ListView x:Name="CellDataCollectionListView" Grid.Row="0" MaxHeight="420"
                                                      VirtualizingPanel.IsContainerVirtualizable="True"
                                                      VirtualizingPanel.IsVirtualizing="True"
                                                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"  
                                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                      ItemsSource="{Binding StageInfo.LotData.DataCollection}" 
                                                      Background="#FF1C1C1F" 
                                                      Focusable="False">

                                                -->
                                    <!--<i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectedItemChangedCommand, ElementName=window}"
                                                            CommandParameter="{Binding ElementName=CellListView, Path=SelectedItems}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>-->
                                    <!--
                                                
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}">
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="Margin" Value="-20,0,0,-8"/>
                                                        -->
                                    <!--<Setter Property="Height" Value="50"/>-->
                                    <!--
                                                    </Style>
                                                </ListView.ItemContainerStyle>

                                                <ListView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Vertical"/>
                                                    </ItemsPanelTemplate>
                                                </ListView.ItemsPanel>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <Label Grid.Row="0" HorizontalAlignment="Left" FontSize="14" VerticalAlignment="Center" Foreground="White" >
                                                            <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis"></TextBlock>
                                                        </Label>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>

                                            </ListView>

                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>

                                                <Button Grid.Column="0" Command="{Binding Path=DataContext.CellDataCollectionScrollUpCommand, ElementName=window}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ScrollViewer}}}">
                                                    <Viewbox Width="24" Height="24">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="Black" Data="M1,21H23L12,2"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>

                                                <Button Grid.Column="1" Command="{Binding Path=DataContext.CellDataCollectionScrollDownCommand, ElementName=window}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ScrollViewer}}}">
                                                    <Viewbox Width="24" Height="24">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="Black" Data="M1,2H23L12,21"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>
                                                
                                                -->
                                    <!--<Button Grid.Column="0" Click="DataCollectionUpBtnClick">
                                                <Viewbox Width="24" Height="24">
                                                    <Canvas Width="24" Height="24">
                                                        <Path Fill="Black" Data="M1,21H23L12,2"/>
                                                    </Canvas>
                                                </Viewbox>
                                            </Button>

                                            <Button Grid.Column="1" Click="DataCollectionDwBtnClick">
                                                <Viewbox Width="24" Height="24">
                                                    <Canvas Width="24" Height="24">
                                                        <Path Fill="Black" Data="M1,2H23L12,21"/>
                                                    </Canvas>
                                                </Viewbox>
                                            </Button>-->
                                    <!--

                                            </Grid>
                                        </Grid>

                                    </aniScroll:AnimationScrollViewer>-->

                                </Grid>

                                <Viewbox Width="96" Height="96" Grid.RowSpan="9">
                                    <Canvas Width="48" Height="48">
                                        <Canvas.Opacity>
                                            <MultiBinding Converter="{StaticResource StageMovelockBackgroundConv}" ConverterParameter="LOCK">
                                                <Binding Path="StageInfo.IsConnected"/>
                                                <Binding Path="StageInfo.LotData.StageMoveState"/>
                                            </MultiBinding>
                                        </Canvas.Opacity>
                                        <Canvas.Visibility>
                                            <MultiBinding Converter="{StaticResource StageMovelockVisibleConv}" ConverterParameter="LOCK">
                                                <Binding Path="StageInfo.IsConnected"/>
                                                <Binding Path="StageInfo.LotData.StageMoveState"/>
                                            </MultiBinding>
                                        </Canvas.Visibility>
                                        <Path Fill="Orange" Data="M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z">
                                            <Path.RenderTransform>
                                                <ScaleTransform ScaleX="2" ScaleY="2"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Canvas>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ShowReasonOfLockList, ElementName=window}"
										   CommandParameter="{Binding Index}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Viewbox>

                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--</Border>-->

            <Border Grid.Row="1" Margin="3" BorderThickness="2" BorderBrush="White" >

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <MahAppsControls:MetroAnimatedSingleRowTabControl Grid.Row="0"
                                                                      SelectedIndex="{Binding SelectedOperationTabIndex}">

                        <MahAppsControls:MetroAnimatedSingleRowTabControl.Resources>
                            <SolidColorBrush x:Key="AccentColorBrush" Color="#9370d8"/>
                            <SolidColorBrush x:Key="HighlightBrush" Color="#7260b5"/>
                        </MahAppsControls:MetroAnimatedSingleRowTabControl.Resources>

                        <MahAppsControls:MetroTabItem AutomationProperties.AutomationId="tiLotOperation"
                                                      Header="Lot Operation" BorderThickness="1" BorderBrush="Black"
                                                      MahAppsControls:ControlsHelper.HeaderFontSize="20"
                                                      MahAppsControls:ControlsHelper.HeaderMargin="8"
                                                      MahAppsControls:ControlsHelper.HeaderFontWeight="DemiBold"
                                                      MinHeight="45">

                            <Grid Background="#333333" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                <Border Margin="4,8,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="8*"/>
                                            <ColumnDefinition Width="2*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Column="0">
                                            <UniformGrid Rows="2" Columns="4">
                                                <!--IsEnabled="{Binding CellLotStartFlag}"-->
                                                <Button AutomationProperties.AutomationId="btnCellStart"
                                                        Margin="5,5,2.5,2.5"  IsEnabled="{Binding CellLotStartFlag}" 
                                                        Command="{Binding CellLotStartCommand}">
                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon Height="48" Width="48"
                                                             HorizontalAlignment="Center">

                                                                <materialDesign:PackIcon.Style>
                                                                    <Style  TargetType="materialDesign:PackIcon"
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Play" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>

                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Grid.Row="1" 
                                                    Width="60"
                                                    HorizontalAlignment="Left" 
                                                    TextAlignment="Center" FontWeight="Bold" 
                                                    Text="Cell Start"
                                                    />

                                                        </Grid>
                                                    </Button.Content>
                                                </Button>

                                                <Button AutomationProperties.AutomationId="btnCellPause"
                                                        Margin="2.5,5,2.5,2.5" IsEnabled="{Binding CellLotPauseFlag}"
                                                        Command="{Binding CellLotPauseCommand}">
                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon    Height="48" Width="48"
                                                                    HorizontalAlignment="Center" >

                                                                <materialDesign:PackIcon.Style>
                                                                    <Style TargetType="materialDesign:PackIcon"
                                                   BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Pause" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>

                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Text="Cell Pause" Grid.Row="1"
                                                    TextAlignment="Center" FontWeight="Bold"/>
                                                        </Grid>
                                                    </Button.Content>

                                                </Button>


                                                <Button AutomationProperties.AutomationId="btnCellResume"
                                                        Margin="2.5,5,2.5,2.5" IsEnabled="{Binding CellLotResumeFlag}"
                                                        Command="{Binding CellLotResumeCommand}">
                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon Height="48" Width="48">
                                                                <materialDesign:PackIcon.Style>
                                                                    <Style  TargetType="materialDesign:PackIcon" 
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Replay" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>
                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Grid.Row="1" 
                                                    TextAlignment="Center" FontWeight="Bold"
                                                    Text="Cell Resume"
                                                    />

                                                        </Grid>
                                                    </Button.Content>

                                                </Button>

                                                <Button AutomationProperties.AutomationId="btnCellEnd"
                                                        Margin="2.5,5,5,2.5" IsEnabled="{Binding CellLotEndFlag}"
                                                        Command="{Binding CellLotEndCommand}">
                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon Height="48" Width="48">
                                                                <materialDesign:PackIcon.Style>
                                                                    <Style  TargetType="materialDesign:PackIcon" 
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Stop" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>
                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Grid.Row="1" 
                                                    TextAlignment="Center" FontWeight="Bold"
                                                    Text="Cell End"
                                                    />

                                                        </Grid>
                                                    </Button.Content>
                                                </Button>

                                                <Button AutomationProperties.AutomationId="btnLotPause"
                                                        Margin="5,2.5,2.5,5"
                                                        IsEnabled="{Binding LoaderMaster.CurrentModuleState, Converter={StaticResource BtoVConv1}}"
                                                        Command="{Binding StartLotOPCommand}" 
                                                        Visibility="Hidden"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon Height="48" Width="48"
                                                             HorizontalAlignment="Center">

                                                                <materialDesign:PackIcon.Style>
                                                                    <Style  TargetType="materialDesign:PackIcon"
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Play" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>

                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Grid.Row="1" 
                                                    Width="48"
                                                    HorizontalAlignment="Left" 
                                                    TextAlignment="Center" FontWeight="Bold" 
                                                    Text="Lot Start"
                                                    />

                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button AutomationProperties.AutomationId="btnLotResume"
                                                        Margin="2.5,2.5,2.5,5"
                                                        IsEnabled="{Binding LoaderMaster.CurrentModuleState, Converter={StaticResource BtoVConv2}}" Command="{Binding PauseLotOPCommand}" 
                                                        CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon    Height="48" Width="48"
                                                                    HorizontalAlignment="Center" >

                                                                <materialDesign:PackIcon.Style>
                                                                    <Style TargetType="materialDesign:PackIcon"
                                                   BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Pause" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>

                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Text="Lot Pause" Grid.Row="1"
                                                    TextAlignment="Center" FontWeight="Bold"/>
                                                        </Grid>
                                                    </Button.Content>


                                                </Button>

                                                <Button Margin="2.5,2.5,2.5,5" 
                                        IsEnabled="{Binding LoaderMaster.CurrentModuleState, Converter={StaticResource BtoVConv3}}"
                                        Command="{Binding ResumeLotOPCommand}" 
                                        CommandParameter="{Binding RelativeSource={RelativeSource Self}}">

                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon Height="48" Width="48">
                                                                <materialDesign:PackIcon.Style>
                                                                    <Style  TargetType="materialDesign:PackIcon" 
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Replay" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>
                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Grid.Row="1" 
                                                    TextAlignment="Center" FontWeight="Bold"
                                                    Text="Lot Resume"
                                                    />

                                                        </Grid>
                                                    </Button.Content>
                                                </Button>

                                                <Button AutomationProperties.AutomationId="btnLotEnd"
                                                        Margin="2.5,2.5,2.5,5" 
                                                        IsEnabled="{Binding LoaderMaster.CurrentModuleState, Converter={StaticResource BtoVConv5}}" 
                                                        Command="{Binding EndLotOPCommand}" 
                                                        CommandParameter="{Binding RelativeSource={RelativeSource Self}}">

                                                    <Button.Content>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <materialDesign:PackIcon Height="48" Width="48">
                                                                <materialDesign:PackIcon.Style>
                                                                    <Style  TargetType="materialDesign:PackIcon" 
                                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                                                        <Setter Property="Kind" Value="Stop" />
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>
                                                            </materialDesign:PackIcon>

                                                            <TextBlock  Grid.Row="1" 
                                                    TextAlignment="Center" FontWeight="Bold"
                                                    Text="Lot End"
                                                    />

                                                        </Grid>
                                                    </Button.Content>
                                                </Button>

                                            </UniformGrid>
                                        </Grid>

                                        <Grid Grid.Column="1">
                                            <GroupBox   Header="Select Mode" FontSize="12" Foreground="White" BorderBrush="White" BorderThickness="1" Style="{DynamicResource GroupBoxForegroundStyle}" Margin="0,0,3,0">

                                                <StackPanel Orientation="Vertical">

                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                        <RadioButton AutomationProperties.AutomationId="rdoSingleSelect"
                                                                     GroupName="SelectMode" IsChecked="True" Padding="0" FontSize="20" Margin="5" Command="{Binding SingleSelectCommand}"  Foreground="White" VerticalContentAlignment="Center">Single</RadioButton>
                                                        <RadioButton AutomationProperties.AutomationId="rdoMultipleSelect"
                                                                     GroupName="SelectMode" Padding="0" FontSize="20"  Margin="5" Command="{Binding MultipleSelectCommand}"  Foreground="White" VerticalContentAlignment="Center">Multiple</RadioButton>
                                                    </StackPanel>

                                                    <Button AutomationProperties.AutomationId="btnUnSelectAllCells"
                                                            IsEnabled="True" Command="{Binding UnselectedAllCellsCommand}" 
                                                            Width="150" Height="50"
                                                            HorizontalContentAlignment="Center"
                                                            HorizontalAlignment="Center" 
                                                            FontSize="18" FontWeight="Bold">

                                                        <Button.Content>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>

                                                                <TextBlock  Grid.Row="0" TextAlignment="Center" FontWeight="Bold" Text="Unselect"/>
                                                                <TextBlock  Grid.Row="1" TextAlignment="Center" FontWeight="Bold" Text="All Cells"/>

                                                            </Grid>
                                                        </Button.Content>
                                                    </Button>
                                                </StackPanel>
                                            </GroupBox>

                                        </Grid>

                                    </Grid>

                                </Border>
                            </Grid>
                        </MahAppsControls:MetroTabItem>

                        <MahAppsControls:MetroTabItem AutomationProperties.AutomationId="tiManualOperation"
                                                      Header="Manual Operation" BorderThickness="1" BorderBrush="Black"
                                                      MahAppsControls:ControlsHelper.HeaderFontSize="20"
                                                      MahAppsControls:ControlsHelper.HeaderMargin="8"
                                                      MahAppsControls:ControlsHelper.HeaderFontWeight="DemiBold"
                                                      MinHeight="45">

                            <Grid Background="#333333" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <UniformGrid Rows="0" Columns="0">

                                    <Button AutomationProperties.AutomationId="btnSystemInit"
                                            Command="{Binding ManualOPCommandSet.SystemInitExcuteCommand}" Content="System Init" Width="140" Height="40" HorizontalAlignment="Left" Margin="4"/>
                                    <Button AutomationProperties.AutomationId="btnWaferAlign"
                                            Command="{Binding ManualOPCommandSet.WaferAlignmentExcuteCommand}" Content="Wafer Alignment" Width="140" Height="40"  HorizontalAlignment="Left" Margin="4"/>
                                    <Button AutomationProperties.AutomationId="btnPinAlign"
                                            Command="{Binding ManualOPCommandSet.PinAlignmentExcuteCommand}" Content="Pin Alignment" Width="140" Height="40"  HorizontalAlignment="Left" Margin="4"/>

                                    <!--<Button Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding ManualOPCommandSet.SystemInitExcuteCommand}" Content="System Init" Width="140" Height="40" HorizontalAlignment="Left" Margin="4"/>
                                <Button Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding ManualOPCommandSet.WaferAlignmentExcuteCommand}" Content="Wafer Alignment" Width="140" Height="40"  HorizontalAlignment="Left" Margin="4"/>
                                <Button Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding ManualOPCommandSet.PinAlignmentExcuteCommand}" Content="Pin Alignment" Width="140" Height="40"  HorizontalAlignment="Left" Margin="4"/>-->

                                </UniformGrid>
                            </Grid>

                        </MahAppsControls:MetroTabItem>

                        <MahAppsControls:MetroTabItem
                    Header="Stage Lock Option" BorderThickness="1" BorderBrush="Black"
                    MahAppsControls:ControlsHelper.HeaderFontSize="20"
                    MahAppsControls:ControlsHelper.HeaderMargin="8"
                    MahAppsControls:ControlsHelper.HeaderFontWeight="DemiBold"
                    HorizontalAlignment="Center"
                    >
                            <Grid Background="#333333" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <cui:Button Command="{Binding StageMoveLockCommand}"
                                            GUID="E5ABB753-DC08-49D6-8E5F-5E651FAF2304"
                                            Content="Stage Lock"  HorizontalAlignment="Stretch" Margin="8" 
                                            Grid.Row="0" Grid.Column="0" FontSize="16" FontWeight="Bold"/>
                                <cui:Button Command="{Binding StageMoveUnLockCommand}" 
                                            GUID="BC3D51AB-0378-4A3C-8AE8-72FF0AC7877E"
                                            Content="Stage UnLock" HorizontalAlignment="Stretch" Margin="8"
                                        Grid.Row="0" Grid.Column="1" FontSize="16" FontWeight="Bold" />
                                <Grid Grid.Column="3" Grid.RowSpan="2" Margin="10">
                                    <GroupBox   Header="Select Mode" FontSize="12" Foreground="White" BorderBrush="White" BorderThickness="1" Style="{DynamicResource GroupBoxForegroundStyle}" Margin="0,0,3,0">
                                        <StackPanel Orientation="Vertical">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <RadioButton  GroupName="SelectMode" IsChecked="True" Padding="0" FontSize="20" Margin="5" Command="{Binding SingleSelectCommand}"  Foreground="White" VerticalContentAlignment="Center" Content="Single"/>
                                                <RadioButton  GroupName="SelectMode" Padding="0" FontSize="20"  Margin="5" Command="{Binding MultipleSelectCommand}"  Foreground="White" VerticalContentAlignment="Center" Content="Multiple"/>
                                            </StackPanel>
                                            <Button IsEnabled="True" Command="{Binding UnselectedAllCellsCommand}" 
                                                Width="150" Height="50"
                                                HorizontalContentAlignment="Center"
                                                HorizontalAlignment="Center" 
                                                FontSize="18" FontWeight="Bold">

                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>

                                                    <TextBlock  Grid.Row="0" TextAlignment="Center" FontWeight="Bold" Text="Unselect"/>
                                                    <TextBlock  Grid.Row="1" TextAlignment="Center" FontWeight="Bold" Text="All Cells"/>

                                                </Grid>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox>
                                </Grid>
                            </Grid>
                        </MahAppsControls:MetroTabItem>

                    </MahAppsControls:MetroAnimatedSingleRowTabControl>

                    <Grid Grid.Row="0" Height="{Binding ActualHeight, ElementName=tabItem}" VerticalAlignment="Top">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20,-5,0,0">

                            <Label FontSize="16" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" HorizontalAlignment="Center" Foreground="White">
                                <TextBlock Text="Mode"/>
                            </Label>

                            <cui:Button AutomationProperties.AutomationId="BtnChangeOnlineMode" Grid.Column="0" Content="ON-LINE" Background="Orange" Foreground="White"
                                    Height="Auto" MinHeight="35" MinWidth="150" Width="Auto"
                                    Command="{Binding StageConnectStatusChangeCommand}" CommandParameter="{x:Static pi:GPCellModeEnum.ONLINE}"
                                    GUID="EF1F38E3-AF27-41CD-8EEA-99C06C30B0EC" Lockable="False"/>
                            <cui:Button AutomationProperties.AutomationId="BtnChangeOfflineMode" Grid.Column="1" Content="OFF-LINE" Background="Orange" Foreground="White"
                                    Height="Auto" MinHeight="35" MinWidth="150" Width="Auto"
                                    Command="{Binding StageConnectStatusChangeCommand}" CommandParameter="{x:Static pi:GPCellModeEnum.OFFLINE}"
                                    GUID="BD90F7E0-E3B4-408E-8B47-C903021E3DA6" Lockable="False"/>
                            <cui:Button AutomationProperties.AutomationId="BtnChangeMaintenanceMode" Grid.Column="2" Content="MAINTENANCE" Background="Orange" Foreground="White"
                                    Height="Auto" MinHeight="35" MinWidth="150" Width="Auto"
                                    Command="{Binding StageConnectStatusChangeCommand}" CommandParameter="{x:Static pi:GPCellModeEnum.MAINTENANCE}"
                                    GUID="37A463EC-7191-4C76-B3A0-9357B29FEB34" Lockable="False"/>

                        </StackPanel>
                    </Grid>
                </Grid>

            </Border>
        </Grid>

    </Grid>
</UserControl>
