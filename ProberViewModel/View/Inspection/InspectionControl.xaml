<UserControl x:Class="ProberViewModel.InspectionControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:MapUC="clr-namespace:MapView;assembly=MapView"
             xmlns:pnpcontrol="clr-namespace:PnPControl;assembly=PnPControl"
             xmlns:prober="clr-namespace:ProberInterfaces;assembly=ProberInterfaces"
             xmlns:ValueConvert="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:hjc="clr-namespace:HexagonJogControl;assembly=HexagonJogControl"
             xmlns:lj="clr-namespace:LightJog;assembly=LightJog"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:aniScroll="clr-namespace:UcAnimationScrollViewer;assembly=UcAnimationScrollViewer"
             xmlns:MahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:ProberViewModel"
             xmlns:cui="clr-namespace:CUI;assembly=CUI"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:view="clr-namespace:ProberViewModel.View"
             mc:Ignorable="d" 
             d:DesignHeight="892" d:DesignWidth="1280">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
                <ResourceDictionary Source="/SettingControlStyle;component/SettingViewStyleDictionaly.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="DisplayViewTemplate" DataType="{x:Type prober:IDisplayPort}" >
                <!--<UcDisplayPort:DisplayPort x:Name="DisPlay"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"/>-->
                <ContentControl Name="DisPlay" Content="{Binding }">
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="MapViewTemplate" DataType="{x:Type prober:IWaferObject}" >
                <MapUC:ucWaferMapviewer MinHeight="200" MinWidth="200" Opacity="1" 
                                              WaferObject="{Binding }" Grid.RowSpan="2" Margin="4" 
                                              CursorXIndex="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, 
                                                        Path=DataContext.CurCam.CamSystemMI.XIndex, Mode=TwoWay}" 
                                              CursorYIndex="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, 
                                                        Path=DataContext.CurCam.CamSystemMI.YIndex, Mode=TwoWay}"
                                              CurCamera="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.CurCam}" 
                                              
                                              CoordinateManager="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, 
                                                        Path=DataContext.CoordManager}"/>
                <!--ZoomLevel="{Binding ZoomLevel, Mode=TwoWay}"-->
            </DataTemplate>
            <!-- RecipeEditor Template -->
            <DataTemplate x:Key="RecipeEditTemplate" DataType="{x:Type local:VmRecipeEditorMainPage}">
                <local:UcRecipeEditorMainPage/>
            </DataTemplate>
            <pnpcontrol:TemplateSelector x:Key="ViewTargetTemplateSelector" 
                                    MapViewDataTemplate="{StaticResource MapViewTemplate}"
                                    DisplayViewDataTemplate="{StaticResource DisplayViewTemplate}"
                                         />
            <local:BooleanToIsEnableConverter x:Key="BooleanToIsEnableConv"/>
            <local:BooleanToVisiblityConverter x:Key="BooleanToVisiblityConv"/>
            <local:BooleanToReverseVisiblityConverter x:Key="BooleanToReverseVisiblityConv"/>
            <local:CaclulatedXShiftValueConverter x:Key="CaclulatedXShiftValueConv"/>
            <local:CaclulatedYShiftValueConverter x:Key="CaclulatedYShiftValueConv"/>
            <local:VirtualKeyBoardTextBoxNoElementConverter x:Key="VirtualKeyBoardTextBoxConv"/>

            <ValueConvert:SetupStateImageConvert x:Key="SetupImageConverter"/>
            <ValueConvert:TreeviewItemVisibleConverter x:Key="TreeItemVisibleConverter"/>
            <ValueConvert:IsSetupTypeConverter x:Key="IsSetupTypeToBoolConv"/>
            <ValueConvert:InspectionSetFromBtnColorCon x:Key="SetFromButtonColConv"/>
            <ValueConvert:ToggleColorCon x:Key="ToggleColorConv"/>
            <ValueConvert:InspectionSetIndexConverter x:Key="InspectionSetIndexConv"/>
            <ValueConvert:SetXPositionConvert x:Key="SetXPositionConv"/>
            <ValueConvert:SetYPositionConvert x:Key="SetYPositionConv"/>

            <Style x:Key="DefaultBtn" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard AutoReverse="True" RepeatBehavior="Forever" x:Key="FlashingButtonSB">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" >
                    <EasingColorKeyFrame KeyTime="0" Value="#FFDDDDDD"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF1D1D1D">
                        <EasingColorKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut"/>
                        </EasingColorKeyFrame.EasingFunction>
                    </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Style x:Key="FlashingButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#FFDDDDDD"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetFromToggle}"
                                 Value="true">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource FlashingButtonSB}" x:Name="FlashingSB"/>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetFromToggle}"
                                           Value="false">
                        <DataTrigger.EnterActions>
                            <StopStoryboard BeginStoryboardName="FlashingSB"/>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="UpButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="UpButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray"
                                    ShadowDepth="5"
                                    Softness="0"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Data="M1,21H23L12,2" Fill="White" Name="TryAngleIcon"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DwButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="DwButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="5"
                                    Softness="0"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Data="M1,2H23L12,21"
                                          Fill="White" Name="TryAngleIcon"
                                          />
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="892*"/>
                <ColumnDefinition Width="375*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Width="892" Height="892">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">

                </Grid>
                <Border>
                    <Grid Grid.Row="0">
                        <ContentControl Width="890" Height="890" 
                                Content="{Binding MainViewTarget}"
                                ContentTemplateSelector="{StaticResource ViewTargetTemplateSelector}"/>
                    </Grid>
                </Border>
                <Grid Grid.Row="0" Width="250" Height="250" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity="1" Margin="8,20">


                    <ContentControl Content="{Binding MiniViewTarget}"  
                                    ContentTemplateSelector="{StaticResource ViewTargetTemplateSelector}" Opacity="0.7"/>

                    <Grid Grid.Column="1" HorizontalAlignment="Right" Opacity="0.3" Margin="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Button AutomationProperties.AutomationId="btnViewSwap"
                            Grid.Row="0" Width="48" Height="48" Background="Black" Foreground="White" 
                        Command="{Binding ViewSwapCommand}"
                        Visibility="{Binding MiniViewSwapVisibility}">
                            <materialDesign:PackIcon Kind="ArrowExpand" Height="42" Width="42"/>
                        </Button>
                        <!--<RepeatButton Grid.Row="2" Width="48" Height="48" Background="Black" Foreground="White" 
                          Visibility="{Binding MiniViewZoomVisibility}"
                          Command="{Binding PlusCommand}" >
                        <materialDesign:PackIcon Kind="MagnifyPlus" Height="42" Width="42"/>
                    </RepeatButton>
                    <RepeatButton Grid.Row="3" Width="48" Height="48" Background="Black" Foreground="White" 
                          Visibility="{Binding MiniViewZoomVisibility}"
                          Command="{Binding MinusCommand}" >
                        <materialDesign:PackIcon Kind="MagnifyMinus" Height="42" Width="42" />
                    </RepeatButton>-->
                    </Grid>


                </Grid>
                <Grid Grid.Row="0">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!--<StackPanel VerticalAlignment="Center" Opacity="0.25" Grid.Row="0">
                            <Button Content=" Set Zero" Background="Black" Foreground="White" 
                                    Command="{Binding SetZeroCommand}" Width="250" Height="50" FontSize="35" FontWeight="Black"/>
                        </StackPanel>-->

                            <!--<StackPanel VerticalAlignment="Top" Opacity="0.25" Grid.Row="1" >
                            <RepeatButton Visibility="{Binding MainViewZoomVisible}" HorizontalAlignment="Right" VerticalAlignment="Top" 
                              Content="+" Background="Black" Foreground="White" Command="{Binding PlusCommand}" Width="50" Height="50" FontSize="40" FontWeight="Black" />
                            <RepeatButton Visibility="{Binding MainViewZoomVisible}" HorizontalAlignment="Right" VerticalAlignment="Top" 
                              Content="-" Background="Black" Foreground="White" Command="{Binding MinusCommand}" Width="50" Height="50" FontSize="40" FontWeight="Black" />
                        </StackPanel>-->
                            <!--<ToggleButton Grid.Row="0" 
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Center" 
                                  Margin="6,0,0,0" 
                                  Width="100"
                                  IsChecked="{Binding ToggleCamIndex}" 
                                  Command="{Binding PinPadCamera}"
                                  Style="{StaticResource MaterialDesignActionToggleButton}"
                                      >

                            <ToggleButton.Content>
                                <TextBlock Foreground="White"  Text="Pin Position"></TextBlock>
                            </ToggleButton.Content>

                            <materialDesign:ToggleButtonAssist.OnContent>
                                <TextBlock Foreground="White"  Text="Dut Position"></TextBlock>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>-->
                            <Viewbox Grid.Row="1" Height="100" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,10,10" >
                                <lj:UcLightJog  Width="250" Height="100" Opacity="0.9" 
                                            IsEnabled="True" 
                                            DataContext="{Binding PnpManager.PnpLightJog}"/>
                            </Viewbox>
                        </Grid>
                    </StackPanel>
                </Grid>

            </Grid>

            <Grid Grid.Column="1">
                <MahAppsControls:MetroAnimatedSingleRowTabControl SelectedIndex="{Binding SelectedTabIndex}" 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled">

                    <MahAppsControls:MetroAnimatedSingleRowTabControl.Resources>
                        <SolidColorBrush x:Key="AccentColorBrush" Color="#9370d8"/>
                        <SolidColorBrush x:Key="HighlightBrush" Color="#7260b5"/>
                    </MahAppsControls:MetroAnimatedSingleRowTabControl.Resources>

                    <MahAppsControls:MetroTabItem
                Header="Wafer Inspection" BorderThickness="1" BorderBrush="Black"
                MahAppsControls:ControlsHelper.HeaderFontSize="20"
                MahAppsControls:ControlsHelper.HeaderMargin="8"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden">

                        <Grid>
                            <Grid.RowDefinitions>
                                <!--<RowDefinition Height="76*"/>-->
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="1.5*"/>
                                <RowDefinition Height="0.05*"/>
                                <RowDefinition Height="2.8*"/>
                                <RowDefinition Height="0.6*"/>
                                <RowDefinition Height="0.2*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" >
                                <Grid Grid.Row="0"  Margin="1,1,1,1" >
                                    <Grid.RowDefinitions>
                                        <!--<RowDefinition Height="36*"/>-->
                                        <RowDefinition Height="40*"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <!--<TextBlock FontSize="25" VerticalAlignment="Top" HorizontalAlignment="Center" Foreground="White"  >Current Die Index</TextBlock>-->
                                    </Grid>
                                </Grid>
                            </Border>
                            <Border Grid.Row="0" >
                                <Grid Grid.Row="1"  Margin="1,1,1,1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="22*"/>
                                        <RowDefinition Height="24*"/>
                                        <RowDefinition Height="46*"/>
                                        <RowDefinition Height="46*"/>
                                        <RowDefinition Height="5*"/>
                                        <!--<RowDefinition Height="47*"/>-->
                                        <RowDefinition Height="46*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45*"/>
                                        <ColumnDefinition Width="181*"/>
                                        <ColumnDefinition Width="8*"/>
                                        <ColumnDefinition Width="123*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.ColumnSpan="4" Content="Set Probing Shift" Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0.8" 
                                        VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                        HorizontalContentAlignment="Center" FontSize="13" Height="31" Margin="10,8,10,7" Grid.RowSpan="2"/>
                                    <Grid Grid.Row="2" Grid.Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Content="X" HorizontalContentAlignment="Center"/>
                                        <Label  Grid.Column="1" Content="Y" HorizontalContentAlignment="Center"/>
                                    </Grid>

                                    <Label Grid.Column="0" Grid.Row="3" Content="User" FontSize="14" HorizontalAlignment="Center" FontWeight="Bold" Width="70" Grid.ColumnSpan="2" Margin="-12,10,177,10"/>
                                    <Grid Grid.Column="1" Grid.Row="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox x:Name="UserXShiftTBEnabled" Grid.Column="0" Text="{Binding UserXShiftValue, StringFormat={}{0:0.00}}" IsEnabled="true"
                                             VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" Margin="4,8" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToReverseVisiblityConv}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ShiftTextBoxClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource VirtualKeyBoardTextBoxConv}">
                                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                                <Binding Path ="UserXShiftValue"/>
                                                            </MultiBinding>
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <Label x:Name="UserXShiftTBDisabled" Grid.Column="0" IsEnabled="false"
                                         VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="4,8" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToVisiblityConv}}">
                                            <Label.Content>
                                                <MultiBinding Converter="{StaticResource SetXPositionConv}">
                                                    <Binding Path="AxisX.Status.Position.Ref"/>
                                                    <Binding Path="XSetFromCoord"/>
                                                    <Binding Path="UserXShiftValue"/>
                                                </MultiBinding>
                                            </Label.Content>
                                        </Label>
                                        <TextBox x:Name="UserYShiftTBEnabled" Grid.Column="1" Text="{Binding UserYShiftValue, StringFormat={}{0:0.00}}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                             Foreground="Black" Margin="4,8" IsEnabled="true" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToReverseVisiblityConv}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ShiftTextBoxClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource VirtualKeyBoardTextBoxConv}">
                                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                                <Binding Path ="UserYShiftValue"/>
                                                            </MultiBinding>
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <Label x:Name="UserYShiftTBDisabled" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                             Foreground="White" Margin="4,8" IsEnabled="false" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToVisiblityConv}}">
                                            <Label.Content>
                                                <MultiBinding Converter="{StaticResource SetYPositionConv}">
                                                    <Binding Path="AxisY.Status.Position.Ref"/>
                                                    <Binding Path="YSetFromCoord"/>
                                                    <Binding Path="UserYShiftValue"/>
                                                </MultiBinding>
                                            </Label.Content>
                                        </Label>
                                    </Grid>
                                    <!--<cui:Button Grid.Row="5" Grid.Column="1"
                                    Margin="8,11,0,6" FontSize="12" FontWeight="Bold" Height="30"
                                    VerticalAlignment="Center"
                                    Command="{Binding SystemApplyCommand}"
                                    AutomationProperties.AutomationId="btnSystemApply" IsEnabled="{Binding SetFromToggle, Converter={StaticResource BooleanToIsEnableConv}}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:PackIcon Grid.Column="0" Kind="ArrowDownBold" VerticalAlignment="Center"/>
                                        <TextBlock Grid.Column="1" Text="ADD" FontSize="12" FontWeight="Bold"/>
                                    </Grid>
                                </cui:Button>-->
                                    <Label Grid.Column="0" Grid.Row="6" Content="System" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" Width="70" Grid.ColumnSpan="2" Margin="-6,10,181,10"/>
                                    <Grid Grid.Column="1" Grid.Row="6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox x:Name="SystemXShiftTBEnabled" Grid.Column="0" Text="{Binding SystemXShiftValue, StringFormat={}{0:0.00}}" IsEnabled="true"
                                             VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" Margin="4,8" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToReverseVisiblityConv}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ShiftTextBoxClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource VirtualKeyBoardTextBoxConv}">
                                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                                <Binding Path ="SystemXShiftValue"/>
                                                            </MultiBinding>
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <Label x:Name="SystemXShiftTBDisabled" Grid.Column="0" IsEnabled="false" Content="{Binding SystemXShiftValue, StringFormat={}{0:N2}}"
                                         VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="4,8" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToVisiblityConv}}" Height="38">
                                        </Label>

                                        <TextBox x:Name="SystemYShiftTBEnabled" Grid.Column="1" Text="{Binding SystemYShiftValue, StringFormat={}{0:0.00}}" IsEnabled="true" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"
                                              Margin="4,8" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToReverseVisiblityConv}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ShiftTextBoxClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                                        <i:InvokeCommandAction.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource VirtualKeyBoardTextBoxConv}">
                                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}"/>
                                                                <Binding Path ="SystemYShiftValue"/>
                                                            </MultiBinding>
                                                        </i:InvokeCommandAction.CommandParameter>
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <Label x:Name="SystemYShiftTBDisabled" Grid.Column="1" IsEnabled="false" Content="{Binding SystemYShiftValue, StringFormat={}{0:N2}}"
                                         VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="4,8" Visibility="{Binding SetFromToggle, Converter={StaticResource BooleanToVisiblityConv}}" Height="38">
                                        </Label>
                                    </Grid>
                                    <GridSplitter Grid.Column="3" Grid.RowSpan="5" Grid.Row="2" HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Background="White" 
                                ShowsPreview="True"
                                Width="2"/>
                                    <GridSplitter Grid.ColumnSpan="4" Grid.Row="4"
                                VerticalAlignment="Stretch"
                                Background="White" 
                                ShowsPreview="True" Height="2"
                                Width="380" Margin="-29,2,0,1"/>
                                    <cui:Button Grid.Row="2" Grid.Column="3" Content="Set From"
                                Margin="6,4,6,4" FontSize="12" FontWeight="Bold" 
                                Command="{Binding SetFromCommand}"
                                BorderBrush="#FF707070"
                                Style="{StaticResource FlashingButtonStyle}"
                                GUID="439A82B1-158C-4D69-B17D-AE30B5398F1C"
                                AutomationProperties.AutomationId="btnSetFrom"/>
                                    <cui:Button Grid.Row="3" Grid.Column="3" Content="Apply"
                                    Margin="9,6,0,6" FontSize="12" FontWeight="Bold" HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                        Width="52"
                                    Command="{Binding ApplyCommand}"
                                    GUID="51F0E013-3165-4FD5-845E-2A6255EDE74F"
                                    AutomationProperties.AutomationId="btnApply" RenderTransformOrigin="0.5,0.5"/>
                                    <cui:Button Grid.Row="3" Grid.Column="3" Content="Clear"
                                    Margin="0,10,7,9" FontSize="12" FontWeight="Bold" HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                        Width="52"
                                    Command="{Binding ClearCommand}"
                                    GUID="0D05470F-C71C-4913-8305-3F07A8B92769"
                                    AutomationProperties.AutomationId="btnClear" RenderTransformOrigin="0.5,0.5"/>
                                    <!--<cui:Button Grid.Row="5" Grid.Column="3" Content="Clear"
                                    Margin="10" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" Width="108"
                                    Command="{Binding SystemClearCommand}"
                                    GUID="0D05470F-C71C-4913-8305-3F07A8B92769"
                                    IsEnabled="{Binding SetFromToggle, Converter={StaticResource BooleanToIsEnableConv}}"
                                    AutomationProperties.AutomationId="btnClear"/>-->
                                </Grid>
                            </Border>
                            <Border Grid.Row="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="0.5*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <cui:Button Grid.Column="0" Grid.Row="1" Margin="4" HorizontalAlignment="Stretch"  Content="◀ Prev DUT"
                                    FontWeight="Bold"  Width="130"
                                    Command="{Binding PrevDutCommand}"
                                    GUID="84A5F5D4-2148-4475-B619-F812ACE31F2D"
                                    AutomationProperties.AutomationId="btnPrevDut"/>
                                    <Grid Grid.Row="1" Grid.Column="1" Margin="-10,0,-10,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1.5*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="1.5*"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Column="0" Content="{Binding Inspection.ViewDutIndex}" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Right" 
                                        HorizontalContentAlignment="Center" FontSize="25" Margin="-10,-10,-10,-10"/>
                                        <Label Grid.Column="1" Content="/" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Center" 
                                        HorizontalContentAlignment="Center" FontSize="25" Margin="-10,-10,-10,-10"/>
                                        <Label Grid.Column="2" Content="{Binding Inspection.DUTCount}" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Left" 
                                        HorizontalContentAlignment="Center" FontSize="25" Margin="-10,-10,-10,-10"/>

                                    </Grid>


                                    <cui:Button Grid.Column="2" Grid.Row="1" Margin="4" HorizontalAlignment="Stretch" Content="Next DUT ▶"
                                    FontWeight="Bold"  Width="130"
                                    Command="{Binding NextDutCommand}" Height="45" VerticalAlignment="Top"
                                    GUID="AD6CCB4A-D499-48ED-ADF5-E434F2332F97"
                                    AutomationProperties.AutomationId="btnNextDut"/>
                                    <cui:Button Grid.Column="0" Grid.Row="2" Margin="4" HorizontalAlignment="Stretch" Content="◀ Prev PAD"
                                    FontWeight="Bold"  Width="130"
                                    Command="{Binding PadPrevCommand}"
                                    GUID="FF7970B8-8FEB-47F6-BA0F-D8C6FA29FEAC"
                                    AutomationProperties.AutomationId="btnPrevPAD"/>

                                    <Grid Grid.Column="1" Grid.Row="2" Margin="-10,0,-10,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="2*"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Column="0" Content="{Binding Inspection.ViewPadIndex}" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Right" 
                                        HorizontalContentAlignment="Center" FontSize="25" Margin="-10,-10,-10,-10"/>
                                        <Label Grid.Column="1" Content="/" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Center" 
                                        HorizontalContentAlignment="Center" FontSize="25" Margin="-10,-10,-10,-10"/>
                                        <Label Grid.Column="2" Content="{Binding Inspection.PADCount}" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Left" 
                                        HorizontalContentAlignment="Center" FontSize="25" Margin="-10,-10,-10,-10"/>

                                    </Grid>



                                    <cui:Button Grid.Column="2" Grid.Row="2" Margin="4" HorizontalAlignment="Stretch" Content="Next PAD ▶"
                                    FontWeight="Bold"  Width="130"
                                    Command="{Binding PadNextCommand}"
                                    GUID="B5BC9FA9-FAB2-4158-A9C4-8FFD636DA793"
                                    AutomationProperties.AutomationId="btnNextPAD"/>

                                    <Label Grid.Row="0" Grid.ColumnSpan="2" Content="Dut / Pad Move" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0.8" 
                                        VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                        HorizontalContentAlignment="Center" FontSize="22" Margin="4,2,4,2"/>
                                    <Grid Grid.Row="0" Grid.Column="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <TextBlock  Text="("
                                        VerticalAlignment="Center" FontSize="25"
                                        HorizontalAlignment="Center" Foreground="White"
                                        />
                                        </Grid>
                                        <Grid Grid.Column="1">
                                            <TextBlock  Text="{Binding Inspection.XDutStartIndexPoint}"
                                        VerticalAlignment="Center" FontSize="25"
                                        HorizontalAlignment="Center" Foreground="White"
                                                />
                                        </Grid>
                                        <Grid Grid.Column="2">
                                            <TextBlock  Text=","
                                        VerticalAlignment="Center" FontSize="25"
                                        HorizontalAlignment="Center" Foreground="White"
                                        />
                                        </Grid>
                                        <Grid Grid.Column="3">
                                            <TextBlock  Text="{Binding Inspection.YDutStartIndexPoint}"
                                        VerticalAlignment="Center" FontSize="25"
                                        HorizontalAlignment="Center" Foreground="White"
                                                />
                                        </Grid>
                                        <Grid Grid.Column="4">
                                            <TextBlock  Text=")"
                                        VerticalAlignment="Center" FontSize="25"
                                        HorizontalAlignment="Center" Foreground="White"
                                        />
                                        </Grid>

                                    </Grid>


                                </Grid>
                            </Border>

                            <Grid Grid.Row="3">
                                <!--<Label Grid.Row="0" Grid.ColumnSpan="2" Content="Hex Jog" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0.8" 
                                        VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                        HorizontalContentAlignment="Center" FontSize="22" Margin="4,2,4,2"/>-->
                            </Grid>


                            <Border Grid.Row="4">
                                <Grid Grid.Row="4" Margin="3,3,3,3">
                                    <Viewbox Grid.Row="2" Grid.Column="1" Height="300" VerticalAlignment="Top">
                                        <hjc:UcHexagonJog   DataContext="{Binding PnpManager.PnpMotionJog}" 
                                                    AssignedCamera="{Binding DataContext.CurCam, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                    SetMoveZOffsetEnable ="True"/>
                                    </Viewbox>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Grid.Row="2" Margin="4" HorizontalAlignment="Stretch" 
                                    FontWeight="Bold"  
                                    Command="{Binding SavePadsCommand}"
                                    AutomationProperties.AutomationId="btnSavePads">
                                    <Button.Content>
                                        <TextBlock Text="Save Pads"/>
                                    </Button.Content>
                                </Button>

                                <Button Grid.Column="1" Grid.Row="2" Margin="4" HorizontalAlignment="Stretch" Content="Wafer Alignment"
                                    FontWeight="Bold"  
                                    Command="{Binding WaferAlignCommand}"
                                    AutomationProperties.AutomationId="btnWaferAlign"/>

                                <Button Grid.Column="2" Grid.Row="2" Margin="4" HorizontalAlignment="Stretch" Content="Pin Alignment"
                                    FontWeight="Bold"  
                                    Command="{Binding PinAlignCommand}"
                                    AutomationProperties.AutomationId="btnPinAlign"/>
                                <!--<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3.2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="1.5*"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0"  Content="MANUAL Set INDEX" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                        HorizontalContentAlignment="Center" FontSize="15" Margin="0,0,0,-15"/>
                            <ToggleButton Grid.Row="0" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Left" 
                                            Margin="6,0,0,0" 
                                            Width="100"
                                            Height="25"
                                            IsChecked="{Binding ToggleSetIndex}" 
                                            Command="{Binding }"
                                            Background="Silver"
                                            Style="{StaticResource MaterialDesignActionToggleButton}"
                                            >

                                <ToggleButton.Content>
                                    <TextBlock Foreground="Black"  Text="AUTO"></TextBlock>
                                </ToggleButton.Content>

                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <TextBlock Foreground="Black"  Text="MANUAL"></TextBlock>
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0"  Content="X" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                        HorizontalContentAlignment="Center" FontSize="22" Margin="4,2,-2,2"/>

                                <TextBox Grid.Column="1" Width="50" Margin="0,0,0,0" FontSize="20"                             
                                            VerticalAlignment="Center"
                                        HorizontalAlignment="Center"             >
                                    <TextBox.Text>
                                        <MultiBinding Converter="{StaticResource InspectionSetIndexConv}">
                                            <Binding Path="DisplayPort.AssignedCamera.CamSystemUI.XIndex"/>
                                            <Binding Path="MapIndexX"/>
                                            <Binding Path="ToggleSetIndex"/>
                                        </MultiBinding>
                                    </TextBox.Text>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding ChangeXManualCommand}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <Label Grid.Column="2" Content="Y" 
                                        Foreground="#d9d9d9" BorderBrush="#474343" BorderThickness="0" 
                                        VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                        HorizontalContentAlignment="Center" FontSize="22" Margin="4,2,-2,2"/>
                                <TextBox Grid.Column="3" Width="50" Margin="0" FontSize="20"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                    <TextBox.Text>
                                        <MultiBinding Converter="{StaticResource InspectionSetIndexConv}">
                                            <Binding Path="DisplayPort.AssignedCamera.CamSystemUI.YIndex"/>
                                            <Binding Path="MapIndexY"/>
                                            <Binding Path="ToggleSetIndex"/>
                                        </MultiBinding>
                                    </TextBox.Text>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding ChangeYManualCommand}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <cui:Button Grid.Column="4"  Margin="15,-2,10,5" HorizontalAlignment="Stretch"  Content="Set"
                                        FontWeight="Bold" Width="70"
                                        Background="{Binding Inspection.ManualSetIndexToggle, Converter={StaticResource ToggleColorConv}}"
                                        Command="{Binding ManualSetIndexCommand}"
                                        GUID="4CE55F55-A38A-4937-B43C-FAA1CCD506E5" Height="41" VerticalAlignment="Bottom"/>
                            </Grid>-->
                            </Grid>
                            <!--<Grid Grid.Column="1">
                            <StackPanel>
                                <cui:Button GUID="5e80ff23-fbc8-4a56-9c31-a5d060397807" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                Width="60" Height="60" 
                                Command="{Binding GoToBackScreenViewCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                Style="{DynamicResource ImageIConBtnStyle}">
                                    <Image Source="pack://application:,,,/ImageResourcePack;component/Images/ExpanderIcon.png"/>
                                </cui:Button>
                            </StackPanel>
                        </Grid>-->
                        </Grid>
                    </MahAppsControls:MetroTabItem>
                    <MahAppsControls:MetroTabItem
                Header="Temp. Offset" BorderThickness="1" BorderBrush="Black"
                MahAppsControls:ControlsHelper.HeaderFontSize="20"
                MahAppsControls:ControlsHelper.HeaderMargin="8"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="8*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="Temp : " HorizontalContentAlignment="Center" Margin="0 20 0 0"/>

                                    <TextBox Grid.Column="1" Text="{Binding TempOffset}" Foreground="Black" Background="White" VerticalAlignment="Center" Margin="0 20 10 0" Width="150">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown" >
                                                <i:InvokeCommandAction Command="{Binding TempPMShiftClickCommand}"
                                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Content="Add" Command="{Binding AddTempOffset}" FontSize="24" Margin="0 20 0 0" Width="150" Height="40"/>
                                    <Button Grid.Column="1" Content="Delete" Command="{Binding DeleteTempOffset}" FontSize="24" Margin="0 20 0 0" Width="150" Height="40"/>
                                </Grid>

                                <Button Content="Save" Command="{Binding SaveTempOffset}" FontSize="24" Margin="10 10 10 -10" Width="340" Height="40"/>
                            </StackPanel>
                            <Border Grid.Row="1" VerticalAlignment="Top" Margin="0 10 0 0">
                                <Grid Grid.Row="1" Margin="3,3,3,3" VerticalAlignment="Top">
                                    <aniScroll:AnimationScrollViewer x:Name="svViewer" Margin="8"
                            Grid.Row="1"
                            VerticalScrollBarVisibility="Hidden">
                                        <ListView x:Name="TempShiftListview" ItemsSource="{Binding ProbeTemperaturePositionTable}"
                                            BorderThickness="2"
                                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Border>
                                                        <GroupBox BorderThickness="2">
                                                            <GroupBox.Header>
                                                                <TextBlock Text="{Binding Path=Key, StringFormat={}{0}°C}" Foreground="White"/>
                                                            </GroupBox.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Label Grid.Column="0" Content="X:" FontSize="15" HorizontalContentAlignment="Left" Margin="0" Padding="0"
                                                                   VerticalAlignment="Center" Width="Auto"></Label>
                                                                <TextBox Grid.Column="1" Text="{Binding Value.X.Value}" Width="80" Margin="10,0,10,0">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.TempPMShiftClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                </TextBox>
                                                                <Label Grid.Column="2" Content="Y:" FontSize="15" HorizontalContentAlignment="Left" Margin="0" Padding="0"
                                                                   VerticalAlignment="Center" Width="Auto"></Label>
                                                                <TextBox Grid.Column="3" Text="{Binding Value.Y.Value}" Width="80" Margin="10,0,10,0">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.TempPMShiftClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                </TextBox>
                                                                <Label Grid.Column="4" Content="T:" FontSize="15" HorizontalContentAlignment="Left" Margin="0" Padding="0"
                                                                   VerticalAlignment="Center" Width="Auto"></Label>
                                                                <TextBox Grid.Column="5" Text="{Binding Value.T.Value}" Width="80" Margin="10,0,10,0">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.TempPMShiftClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                </TextBox>
                                                            </Grid>
                                                        </GroupBox>
                                                    </Border>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </aniScroll:AnimationScrollViewer>
                                </Grid>
                            </Border>

                            <Border Grid.Row="2" BorderThickness="0.5" 
                        BorderBrush="White"/>
                            <Grid Grid.Row="2" Margin="8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9*"/>
                                    <ColumnDefinition Width="117*"/>
                                    <ColumnDefinition Width="125*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0"
                                        Margin="4"
                                        Style="{StaticResource UpButtonStyle}"
                                        Click="CategoryUpBtnClick" Grid.ColumnSpan="2"/>

                                <Button Grid.Column="2"
                                        Margin="4"
                                        Style="{StaticResource DwButtonStyle}"
                                        Click="CategoryDwBtnClick"/>
                            </Grid>
                        </Grid>
                    </MahAppsControls:MetroTabItem>
                </MahAppsControls:MetroAnimatedSingleRowTabControl>
            </Grid>
            <!--<Grid Grid.Column="1" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <StackPanel Orientation="Horizontal">
                    <Button Grid.Row="2" Margin="8,8,8,8" HorizontalAlignment="Right" Width="60" Height="60" 
                            Style="{DynamicResource ImageIConBtnStyle}">
                        <Image Source="pack://application:,,,/ImageResourcePack;component/Images/SaveIcon.png"/>
                    </Button>
                    <Button Grid.Row="2" Margin="8,8,24,8" HorizontalAlignment="Right" Width="60" Height="60" 
                            Style="{DynamicResource ImageIConBtnStyle}">
                        <Image Source="pack://application:,,,/ImageResourcePack;component/Images/ExitIcon.png"/>
                    </Button>
                </StackPanel>
            </Grid>-->
            <!--</Grid>-->
        </Grid>
        <Grid>
            <view:ScreenLock DataContext="{Binding SelectedStage}"/>
        </Grid>
    </Grid>
</UserControl>
