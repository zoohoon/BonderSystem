<UserControl x:Class="ProberViewModel.LoaderGPCardChangeOPView_6X2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProberViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:view="clr-namespace:ProberViewModel.View"
             x:Name="ucwindow"
             mc:Ignorable="d" 
             d:DesignHeight="960" d:DesignWidth="960">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="/SciChart.Examples.ExternalDependencies;component/Resources/Styles/MergedResources.xaml"/>
                <ResourceDictionary Source="/SciChart.Examples.ExternalDependencies;component/Resources/Styles/ToolbarButtonsCommon.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <vc:SubsStatusToValueConverter x:Key="StatusToColorConv" />
            <vc:EnumStageCardStateBrushConverter x:Key="CardStateToBrushConv" />
            <vc:StageStateToValueConverter1 x:Key="CellStateColorConv" />
            <vc:EnumWaferStatusTextConverter x:Key="StatusToTextConv" />
            <vc:EnumStageCardStatusTextConverter x:Key="CardStatusToTextConv" />
            <vc:EnumStageWaferStatusTextConverter x:Key="WaferStatusToTextConv" />
            <vc:GPLotStateToStringConverter4 x:Key="BtoVConv" />
            <vc:GPHandlingBtnEnableConverter x:Key="GPHandlingBtnEnableConverter" />
            <vc:ScanStateValueConverter x:Key="ScanStateValueConverter" />
            <vc:EnumGPLoaderWaferStatusTextColorConverter x:Key="EnumGPLoaderWaferStatusTextColorConverter" />
            <vc:EnumSlotTextConverter x:Key="EnumSlotTextConverter" />
            <local:ListViewConverter x:Key="ListViewConverter"/>
            <local:ImageConverter x:Key="ImageConverter"/>
            <local:TransferObjectLabelConverter x:Key="TransferObjectLabelConverter"/>
            <Style x:Key="PieChartListBoxForegroundStyle" TargetType="ListBox">
                <Setter Property="Foreground" Value="#FFDFE0E6"/>
                <Setter Property="Background" Value="DarkGray" />
            </Style>

            <DataTemplate x:Key="OutsideLabelDataTemplate" DataType="s:IPieSegmentViewModel">

                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="14" Foreground="#FFDFE0E6" Text="{Binding Name}"/>
                    <TextBlock 
                               FontSize="14"
                               Foreground="#FFDFE0E6"
                               Text="{Binding Percentage,
                                              StringFormat={}{0:#.##}%}" />
                </StackPanel>

            </DataTemplate>

            <DataTemplate x:Key="InsideLabelDataTemplate" DataType="s:IPieSegmentViewModel">
                <TextBlock FontSize="14"
                           FontWeight="Bold"
                           Foreground="#FF1C1C1F"
                           Text="{Binding Percentage,
                                          StringFormat={}{0:#.##}%}" />
            </DataTemplate>
            <Style x:Key="StatusLabelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="DimGray"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="DimGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Width" Value="120"/>
            </Style>
            <Style x:Key="ModuleNameLabelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.0*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="1.5*"/>
            </Grid.RowDefinitions>


            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="1">
                <ListView   x:Name="CellListView" 
                              ItemsSource="{Binding Cells}"
                              Background="#FF1C1C1F" 
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              MinWidth="30" MinHeight="40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="CellListView"/>
                                        <Binding ElementName="CellListView" Path="SelectedIndex"/>
                                        <Binding ElementName="CellListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                    Mode=FindAncestor}, Mode=OneWay}"/>-->
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>

                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="6"></UniformGrid>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate >
                            <Border BorderBrush="DimGray" BorderThickness="1" Height="210" VerticalAlignment="Top" Margin="0,0,0,0">
                                <Grid MaxWidth="150" Height="200" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="1.5*" />
                                        <RowDefinition Height="0.9*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                    </Grid.RowDefinitions>
                                    <Rectangle Fill="Transparent">

                                    </Rectangle>
                                    <Label Grid.Row="0" FontSize="10" FontWeight="Bold" HorizontalAlignment="Center" MaxWidth="120" Margin="0,0,0,0"
                                                       VerticalContentAlignment="Center"
                                                      HorizontalContentAlignment="Center"
                                                        BorderThickness="0"
                                                        Content="{Binding StageState}"
                                                       Foreground="{Binding StageState, Converter={StaticResource CellStateColorConv}}"
                                                       >
                                    </Label>
                                    <Label Grid.Row="3" FontSize="10" FontWeight="Bold" HorizontalAlignment="Center" MaxWidth="120" Margin="0,0,0,1"
                                                       VerticalContentAlignment="Center"
                                                       Style="{StaticResource StatusLabelStyle}"  
                                                      BorderThickness="1">
                                        <Label.Foreground>
                                            <MultiBinding Converter="{StaticResource CardStateToBrushConv}">
                                                <Binding Path="CardStatus"/>
                                                <Binding Path="CardObj.WaferState"/>
                                            </MultiBinding>
                                        </Label.Foreground>
                                        <Label.BorderBrush>
                                            <MultiBinding Converter="{StaticResource CardStateToBrushConv}">
                                                <Binding Path="CardStatus"/>
                                                <Binding Path="CardObj.WaferState"/>
                                            </MultiBinding>
                                        </Label.BorderBrush>
                                        <MultiBinding Converter="{StaticResource CardStatusToTextConv}">
                                            <Binding Path="CardStatus" />
                                            <Binding Path="Progress"/>
                                            <Binding Path="CardObj"/>
                                        </MultiBinding>
                                    </Label>

                                    <Image Grid.Row="1" Stretch="UniformToFill"  Width="64" Height="48">
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/Cell.png" />
                                        </Image.Source>
                                    </Image>

                                    <Label Grid.Row="2" Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" 
                                           Style="{StaticResource ModuleNameLabelStyle}"/>


                                    <Label Grid.Row="4" FontSize="10" FontWeight="Bold" HorizontalAlignment="Center" Width="120" 
                                                       Style="{StaticResource StatusLabelStyle}"  
                                                        BorderThickness="1"
                                                       Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                                       BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}">
                                        <MultiBinding Converter="{StaticResource WaferStatusToTextConv}">
                                            <Binding Path="WaferStatus" />
                                            <Binding Path="Progress"/>
                                            <Binding Path="WaferObj"/>
                                        </MultiBinding>
                                    </Label>



                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>


            <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3">
                <Grid Grid.Column="1" Grid.Row="0"  Margin="0" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <Image.Source>
                                <BitmapImage UriSource="./Resources/Cardbuffer.png"/>
                            </Image.Source>
                        </Image>
                        <Label Content="Card Buffers" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" 
                                           Style="{StaticResource ModuleNameLabelStyle}"/>
                    </StackPanel>
                    <ListView Grid.Row="1" x:Name="CardBufferListView" ItemsSource="{Binding CardBuffers}" 
                          Background="#FF2C2C2F" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Top"
                          MinWidth="30" MinHeight="40">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                            <Binding ElementName="CardBufferListView"/>
                                            <Binding ElementName="CardBufferListView" Path="SelectedIndex"/>
                                            <Binding ElementName="CardBufferListView" Path="SelectedItem"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                    Mode=FindAncestor}, Mode=OneWay}"/>-->
                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DimGray" BorderThickness="1" >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0"  Content="{Binding Name}" FontSize="8" FontWeight="Bold" HorizontalAlignment="Center" 
                                           Style="{StaticResource ModuleNameLabelStyle}" VerticalAlignment="Center"  Width="80"/>
                                        <Label Grid.Column="1" Style="{StaticResource StatusLabelStyle}" FontSize="8" Width="64" BorderThickness="0" VerticalContentAlignment="Center"
                                            Content="{Binding WaferStatus}"
                                            Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                            BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                <Grid Grid.Row="1" Margin="2" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Image Width="64" Height="48" HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <Image.Source>
                                <BitmapImage UriSource="./Resources/CardTray.png"/>
                            </Image.Source>
                        </Image>
                        <Label Content="Card Trays" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" 
                                           Style="{StaticResource ModuleNameLabelStyle}"/>
                    </StackPanel>
                    <ListView  Grid.Row="1" 
                               HorizontalAlignment="Stretch" VerticalAlignment="Top" x:Name="CardTrayListView" 
                               ItemsSource="{Binding CardTrays}" Background="#FF2C2C2F" 
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" MinWidth="30" MinHeight="40">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ListViewConverter}">
                                            <Binding ElementName="CardTrayListView"/>
                                            <Binding ElementName="CardTrayListView" Path="SelectedIndex"/>
                                            <Binding ElementName="CardTrayListView" Path="SelectedItem"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                    Mode=FindAncestor}, Mode=OneWay}"/>-->
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="DimGray" BorderThickness="1" >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0"  Content="{Binding Name}" FontSize="8" FontWeight="Bold" HorizontalAlignment="Center" 
                                           Style="{StaticResource ModuleNameLabelStyle}" VerticalAlignment="Center"  Width="80"/>
                                        <Label  Grid.Column="1"  Style="{StaticResource StatusLabelStyle}" FontSize="8" Width="64" BorderThickness="0" VerticalContentAlignment="Center"
                                               Content="{Binding WaferStatus}" VerticalAlignment="Center"
                                               Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </Grid>
                <ListView Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" x:Name="CardArmsListView" Margin="2"
                                   ItemsSource="{Binding CardArms}" Background="#FF1C1C1F" 
                                   ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=ucwindow}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ListViewConverter}">
                                        <Binding ElementName="CardArmsListView"/>
                                        <Binding ElementName="CardArmsListView" Path="SelectedIndex"/>
                                        <Binding ElementName="CardArmsListView" Path="SelectedItem"/>
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                            <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected,
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}, 
                                    Mode=FindAncestor}, Mode=OneWay}"/>-->
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="DimGray" BorderThickness="1" Width="150" >
                                <Grid Height="140" HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1.6*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Image Height="48" Width="128" HorizontalAlignment="Stretch" VerticalAlignment="Center"  >
                                        <Image.Source>
                                            <BitmapImage UriSource="./Resources/CardHand.PNG"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Grid.Row="1"  Content="{Binding Name}" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" 
                                           Style="{StaticResource ModuleNameLabelStyle}"/>
                                    <Label  Grid.Row="2"  Grid.Column="0"   Style="{StaticResource StatusLabelStyle}" Width="140"
                                               Content="{Binding WaferStatus}"
                                               Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                               BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </StackPanel>


            <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Margin="1" MinWidth="64">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border BorderBrush="WhiteSmoke" BorderThickness="0.8" Grid.ColumnSpan="2" Grid.RowSpan="6" Margin="4"/>

                    <Button Grid.Row='0' Margin="8" Content="Source" FontWeight="Bold" Height="48"  Command="{Binding TransferSourceClickCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="SourceEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button Grid.Row='3' Margin="8" Content="Target" FontWeight="Bold" Height="48" Command="{Binding TransferTargetClickCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                <Binding Path="TargetEnable"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <StackPanel Grid.Row="5" >
                        <Button  Content="Transfer" Margin="8" FontWeight="Bold"  MinHeight="48" Command="{Binding TransferCommand}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource GPHandlingBtnEnableConverter}">
                                    <Binding Path="loaderModule.LoaderMaster.CurrentModuleState"/>
                                    <Binding Path="TransferEnable"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </StackPanel>

                    <Grid Grid.Row="1" Margin='4' >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="WhiteSmoke" BorderThickness="0.6" Margin="4" 
                                Grid.RowSpan="2">

                        </Border>
                        <Image HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="4" Width="96" Height="128" Grid.Row="0"
                                   Source="{Binding TransferSource ,Converter={StaticResource ImageConverter}}">
                        </Image>
                        <Label Grid.Row="1" FontSize="18" Foreground="WhiteSmoke" Margin="4"
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               Content="{Binding TransferSource, Converter={StaticResource TransferObjectLabelConverter}}" 
                               Grid.Column="1"/>
                    </Grid>

                    <Label Grid.Row="2" Content="↓" FontSize="24" FontWeight="Bold" Foreground="WhiteSmoke" 
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Grid Grid.Row='4' Margin='4'>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="WhiteSmoke" BorderThickness="0.6" Margin="4" Grid.RowSpan="2">

                        </Border>
                        <Image HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="4" Width="96" Height="128" Grid.Row="0"
                                   Source="{Binding TransferTarget ,Converter={StaticResource ImageConverter}}">
                        </Image>
                        <Label Grid.Row="1" FontSize="18" Foreground="WhiteSmoke" Margin="4"
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Content="{Binding TransferTarget, Converter={StaticResource TransferObjectLabelConverter}}"/>
                    </Grid>
                    <Grid Grid.Row="6" Margin="1" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Height="30">
                            <!--<Label  HorizontalAlignment="Center" FontSize="15" Foreground="White">Elapsed Time:</Label>
                            <Label  HorizontalAlignment="Center" FontSize="15" Foreground="White" Content="{Binding EndTime ,Mode=TwoWay}"></Label>-->
                        </StackPanel>
                    </Grid>

                </Grid>
            </Grid>



            <Grid Grid.RowSpan="2" Grid.Column="3">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <UniformGrid Rows="6" Columns="2">

                        <Button Content="Raise Pod" FontSize="15" Margin="1" Command="{Binding RaisePodCommand}" />
                        <Button Content="Drop Pod"  FontSize="15" Margin="1" Command="{Binding DropPodCommand}"/>

                        <Button Content="Sol Lock" FontSize="15" Margin="1" Command="{Binding TopPlateSolLockCommand}"/>
                        <Button Content="Sol UnLock" FontSize="15" Margin="1" Command="{Binding TopPlateSolUnLockCommand}"/>

                        <Button Content="Card Pod &#xa;Vac On" FontSize="15" Margin="1" Command="{Binding PCardPodVacuumOnCommand}"/>
                        <Button Content="Card Pod &#xa;Vac Off" FontSize="15" Margin="1" Command="{Binding PCardPodVacuumOffCommand}"/>

                        <Button Content="Tester&#xa;Vac On" FontSize="15" Margin="1" Command="{Binding UpPlateTesterContactVacuumOnCommand}"/>
                        <Button Content="Tester&#xa;Vac Off" FontSize="15" Margin="1" Command="{Binding UpPlateTesterCOfftactVacuumOffCommand}"/>

                        <Button Content="Tester&#xa;Purge On" FontSize="15" Margin="1" Command="{Binding UpPlateTesterPurgeAirOnCommand}"/>
                        <Button Content="Tester&#xa;Purge Off" FontSize="15" Margin="1" Command="{Binding UpPlateTesterPurgeAirOffCommand}"/>

                        <Button Content="Dock Card" FontSize="15" Margin="1" Command="{Binding DockCardCommand}"/>
                        <Button Content="Undock Card" FontSize="15" Margin="1" Command="{Binding UnDockCardCommand}"/>

                        <Button Grid.Column="0" Grid.Row="1" FontSize="15" Content="Small&#xa;Raise" Margin="1" Background="OrangeRed" Command="{Binding SmallRaiseChuckCommand}"/>
                        <Button Grid.Column="1" Grid.Row="1" FontSize="15" Content="Small&#xa;Drop" Margin="1" Background="OrangeRed" Command="{Binding SmallDropChuckCommand}"/>
                        <Button Content="Move to &#xa;Loader" FontSize="15" Margin="1" Command="{Binding MoveToLoaderCommand}"/>
                        <Button Content="Move to &#xa;Docking &#xa;Pos" FontSize="15" Margin="1" Command="{Binding MoveToCardDockPosCommand}"/>

                        <Button Content="Forced &#xa;Drop Pod" FontSize="15" Margin="1" Background="OrangeRed" Command="{Binding ForcedDropPodCommand}"/>
                    </UniformGrid>
                </Grid>

            </Grid>
            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2" Margin="10,-90,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" >
                        <TextBlock Text="Card Contact Pos Z:  " Foreground="White" FontSize="15"/>
                        <TextBlock Text="{Binding CardContactPosZ,StringFormat={}{0:0.#}}" Foreground="White" Width="120" FontSize="15"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
                        <TextBlock Text="[Docking] Contact Offset Z : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding ContactCorrectionZ}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding CardContactOffsetSettingZ}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0"  VerticalAlignment="Center">
                        <TextBlock Text="[UnDocking] Contact Offset Z : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding CardUndockContactOffsetZ}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding CardUndockContactOffsetSettingZ}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0"  VerticalAlignment="Center">
                        <TextBlock Text="[Docking] Contact Offset X : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding ContactCorrectionX}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding CardContactOffsetSettingX}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0"  VerticalAlignment="Center">
                        <TextBlock Text="[Docking] Contact Offset Y : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding ContactCorrectionY}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding CardContactOffsetSettingY}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="0"  VerticalAlignment="Center">
                        <TextBlock Text="Focus Range : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding FocusRange}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding FocusRangeSetting}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center">
                        <TextBlock Text="Align Retry Count : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding CardAlignRetryCount}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding CardAlignRetryCountSetting}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="0" VerticalAlignment="Center">
                        <TextBlock Text="Distance Offset : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding DistanceOffset}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding DistanceOffsetSetting}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="0" VerticalAlignment="Center">
                        <TextBlock Text="CardTop from ChuckPlane : " Foreground="White" FontSize="14"/>
                        <TextBlock Text="{Binding CardTopFromChuckPlane}" Foreground="White" FontSize="14"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" Margin="50 0 0 0">
                        <TextBlock Text="Value :" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                        <TextBox Margin="2" Text="{Binding CardTopFromChuckPlaneSetting}"  Width="100" Foreground="White" VerticalAlignment="Center" FontSize="14"/>
                    </StackPanel>
                    <Button Grid.Column="3" Grid.Row="1" Margin="-200 2 0 2" FontSize="13" Content="Set Offset" Width="100" Height="40" Command="{Binding CardContactSettingZCommand}"/>
                    <Button Grid.Column="3" Grid.Row="2" Margin="-200 2 0 2" FontSize="13" Content="Set Offset" Width="100" Height="40" Command="{Binding CardUndockContactSettingZCommand}"/>
                    <Button Grid.Column="3" Grid.Row="3" Margin="-200 2 0 2" FontSize="13" Content="Set Offset" Width="100" Height="40" Command="{Binding CardContactSettingXCommand}"/>
                    <Button Grid.Column="3" Grid.Row="4" Margin="-200 2 0 2" FontSize="13" Content="Set Offset" Width="100" Height="40" Command="{Binding CardContactSettingYCommand}"/>
                    <Button Grid.Column="3" Grid.Row="5" Margin="-200 2 0 2" FontSize="13" Content="Set Focus" Width="100" Height="40" Command="{Binding FocusRangeSettingZCommand}"/>
                    <Button Grid.Column="3" Grid.Row="6" Margin="-200 2 0 2" FontSize="13"  Content="Set RetryCnt" Width="100" Height="40" Command="{Binding SetAlignRetryCountCommand}"/>
                    <Button Grid.Column="3" Grid.Row="7" Margin="-200 2 0 2"  FontSize="13" Content="Set Distance" Width="100" Height="40" Command="{Binding SetDistanceOffsetCommand}"/>
                    <Button Grid.Column="3" Grid.Row="8" Margin="-200 2 0 2"  FontSize="13" Content="Set Distance" Width="100" Height="40" Command="{Binding SetCardTopFromChuckPlaneSettingCommand}"/>
                </Grid>
                <StackPanel Orientation="Horizontal" >
                    <Label Content="Card on Card Pod" Foreground="DarkGray" FontSize="15"/>
                    <ToggleButton VerticalAlignment="Center" Margin="4" IsChecked="{Binding CardOnPogoPod}"  Foreground="White">
                    </ToggleButton>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin ="0 -15 0 0">
                    <Label Content="Tester and Pogo touched each other" Foreground="DarkGray" FontSize="15"/>
                    <ToggleButton VerticalAlignment="Center" Margin="4" IsChecked="{Binding TesterPogoTouched}"  Foreground="White">
                    </ToggleButton>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin ="0 -15 0 0">
                    <Label Content="Card and Pogo touched each other" Foreground="DarkGray" FontSize="15"/>
                    <ToggleButton VerticalAlignment="Center" Margin="4" IsChecked="{Binding CardPogoTouched}"  Foreground="White">
                    </ToggleButton>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid>
            <view:ScreenLock DataContext="{Binding SelectedStage}"/>
        </Grid>
    </Grid>

</UserControl>
