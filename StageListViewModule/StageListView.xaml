<UserControl x:Class="StageListViewModule.StageListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:StageListViewModule"
             xmlns:aniScroll="clr-namespace:UcAnimationScrollViewer;assembly=UcAnimationScrollViewer"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
              xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
             mc:Ignorable="d"  x:Name="window" >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="/SciChart.Examples.ExternalDependencies;component/Resources/Styles/MergedResources.xaml"/>
                <ResourceDictionary Source="/SciChart.Examples.ExternalDependencies;component/Resources/Styles/ToolbarButtonsCommon.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <vc:SubsStatusToValueConverter x:Key="StatusToColorConv" />
            <vc:StageStateToValueConverter x:Key="StageStateToValueConverter" />
            <vc:StageStateToValueTextConverter x:Key="StageStateToValueTextConverter" />
            <vc:EnumWaferStatusTextConverter x:Key="StatusToTextConv" />
            <vc:BoolToVisibleOrHiddenConverter x:Key="BoolToVisibleOrHiddenConv"/>

            <vc:EnumGPLoaderWaferStatusTextColorConverter x:Key="EnumGPLoaderWaferStatusTextColorConverter" />
            <local:ListViewConverter x:Key="ListViewConverter"/>
            <Style x:Key="PieChartListBoxForegroundStyle" TargetType="ListBox">
                <Setter Property="Foreground" Value="#FFDFE0E6"/>
                <Setter Property="Background" Value="DarkGray" />
            </Style>

            <vc:LotStateToStringConverter x:Key="BtoVConv" />
            <vc:LotStateToStringConverter2 x:Key="BtoVConv2" />
            <vc:ProbingStateToConverter x:Key="BtoVConv3" />
            <vc:StageLoaderErrorStateCon x:Key="StageLoaderErrorStateConv"/>
            <vc:ViewTargetConverter x:Key="ViewTargetConverter"/>
            <local:CellObjectForeGroundConverter x:Key="CellObjectForeGroundConverter"/>

            <DataTemplate x:Key="OutsideLabelDataTemplate" DataType="s:IPieSegmentViewModel">

                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="14" Foreground="#FFDFE0E6" Text="{Binding Name}"/>
                    <TextBlock 
                               FontSize="14"
                               Foreground="#FFDFE0E6"
                               Text="{Binding Percentage,
                                              StringFormat={}{0:#.##}%}" />
                </StackPanel>

            </DataTemplate>

            <DataTemplate x:Key="InsideLabelDataTemplate" DataType="s:IPieSegmentViewModel">
                <TextBlock FontSize="14"
                           FontWeight="Bold"
                           Foreground="#FF1C1C1F"
                           Text="{Binding Percentage,
                                          StringFormat={}{0:#.##}%}" />
            </DataTemplate>
            <Style x:Key="StatusLabelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="DimGray"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="DimGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Width" Value="120"/>
            </Style>
            <Style x:Key="ModuleNameLabelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <!--<Setter Property="Foreground" Value="White"/>-->
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

            <Style x:Key="StageInfoLabelStyle" TargetType="Label">
                <Setter Property="Margin" Value="2,2,0,0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
            </Style>

            <Style x:Key="UpButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Opacity="0.5">
                                <Border Name="UpButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="10"
                                    Softness="0.5"
                                    />
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Data="M1,21H23L12,2" Fill="White" Name="TryAngleIcon"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DwButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Opacity="0.5">
                                <Border Name="DwButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="10"
                                    Softness="0.5"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Data="M1,2H23L12,21"
                                          Fill="White" Name="TryAngleIcon"
                                          />
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </UserControl.Resources>
    
    <Grid Margin="0,0,2,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.8*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border Grid.RowSpan="3" BorderBrush="WhiteSmoke" BorderThickness="0.6"/>
        <aniScroll:AnimationScrollViewer x:Name="svCategoryView" Grid.Row="1"
                          VerticalScrollBarVisibility="Hidden"
                          HorizontalScrollBarVisibility="Hidden" Visibility="{Binding CellListViewVisibility}">

            <ListView Grid.Row="1"  x:Name="CellListView" ItemsSource="{Binding Cells}" Background="#FF2C2C2F" 
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                      SelectionMode="Single">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.ObjectClickCommand, ElementName=window}" >
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource ListViewConverter}">
                                    <Binding ElementName="CellListView"/>
                                    <Binding ElementName="CellListView" Path="SelectedIndex"/>
                                    <Binding ElementName="CellListView" Path="SelectedItem"/>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="IsEnabled" Value="{Binding IsEnableTransfer, Mode=TwoWay}"/>
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red"/>
                        </Style.Resources>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1"></UniformGrid>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate >
                        <Border BorderBrush="DimGray" BorderThickness="1">
                            <Grid  Width="240" Height="210" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.6*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="0.6*" />
                                </Grid.RowDefinitions>

                                <Image Grid.RowSpan="3" Grid.ColumnSpan="3" Stretch="UniformToFill"  Width="140" Height="100" VerticalAlignment="Center"  Opacity="0.4">
                                    <Image.Source>
                                        <BitmapImage UriSource="./Resources/Cell.png" />
                                    </Image.Source>
                                </Image>
                                
                                <!--Row 0-->
                                <CheckBox Width="44" Height="44" VerticalAlignment="Top" HorizontalAlignment="Left" BorderBrush="White"
                                          Margin="10,0,0,0"
                                              IsChecked="{Binding StageInfo.IsChecked}"/>
                                <Viewbox VerticalAlignment="Top" HorizontalAlignment="Right" Margin="4" Height="26" Width="26">
                                    <materialDesign:PackIcon Kind="LanConnect" 
                                         Foreground="{Binding StageInfo.IsConnected, Mode=OneWay, Converter={StaticResource CellObjectForeGroundConverter}}"
                                         />
                                </Viewbox>
                                <!--Row 1-->
                                <!--<Grid Grid.Row="1" Visibility="{Binding StageInfo.IsConnected, Converter={StaticResource BoolToVisibleOrHiddenConv} }">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,2,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="2*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Content="LOT" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}" Margin="2,0,0,0"/>
                                        --><!--LOT ID--><!--
                                        <Label Grid.Row="1" Grid.Column="1"  Content="AAA.000" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}" Margin="2,0,0,0"/>
                                    </Grid>

                                    <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,2,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="2*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Content="WAFER" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}" Margin="2,0,0,0"/>
                                        --><!--WAFER ID--><!--
                                        <Label Grid.Row="1"  Grid.Column="1" Content="ABCEDSEMICS123" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}" Margin="2,0,0,0"/>
                                    </Grid>

                                    --><!--Align State--><!--
                                    <Label Grid.Row="2" Grid.Column="0" Content="MARK ALIGN" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}"/>
                                    <Label Grid.Row="2" Grid.Column="1" Content="PIN ALIGN" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}"/>
                                    <Label Grid.Row="3" Grid.Column="0" Content="WAFER ALIGN" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}"/>

                                    --><!--GEM State--><!--
                                    <Label Grid.Row="3" Grid.Column="1" Content="GEM" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}"/>

                                    --><!--Z State & OD--><!--
                                    <Label Grid.Row="4" Grid.Column="0" Content="Z_DOWN" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}"/>
                                    <Label Grid.Row="4" Grid.Column="1" Content="OD : 100" BorderBrush="Red" Style="{StaticResource StageInfoLabelStyle}"/>
                                </Grid>-->
                                
                                <!--Row 2-->
                                <Label Grid.Row="2" Content="{Binding Name}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" 
                                       Style="{StaticResource ModuleNameLabelStyle}" 
                                       Foreground="{Binding StageInfo.IsExcuteProgram, Converter={StaticResource CellObjectForeGroundConverter}, Mode=OneWay}"/>

                                <Grid Grid.Row="2" HorizontalAlignment="Right" Margin="0,0,0,1">
                                    <Ellipse Fill="Gray" Height="40" Width="40" Stroke="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Ellipse x:Name="StatusIndicator" Fill="{Binding StageState, Converter={StaticResource StageStateToValueConverter}}" Height="40" Width="40" Stroke="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Ellipse Height="40" Width="40" Stroke="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush GradientOrigin="0.2,0.2" Center="0.2,0.2" RadiusX="0.8" RadiusY="0.8">
                                                <GradientStop Color="#ffffff" Offset="0" />
                                                <GradientStop Color="Transparent" Offset="1" />
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Label Style="{x:Null}"  VerticalContentAlignment="Center" HorizontalAlignment="Center"  >
                                        <Grid>
                                            <TextBlock  Text="{Binding StageState , Converter={StaticResource StageStateToValueTextConverter}}" FontSize="7" >
                                            </TextBlock>
                                        </Grid>
                                    </Label>
                                </Grid>
                                
                                <!--<Label Grid.Row="2" ContentStringFormat="Target : {0}" Content="{Binding TargetName}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalContentAlignment="Center"
                                       Style="{StaticResource ModuleNameLabelStyle}"/>-->
                                <!--<StackPanel Grid.Row="2">
                                        <Label  FontSize="15" FontWeight="Bold" HorizontalAlignment="Center" Width="120"
                                       Style="{StaticResource StatusLabelStyle}"  
                                       Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                       BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}">
                                            <MultiBinding Converter="{StaticResource StatusToTextConv}">
                                                <Binding Path="WaferStatus" />
                                                <Binding Path="Progress"/>
                                            </MultiBinding>
                                        </Label>-->
                                <!--<Label ContentStringFormat="# {0}" Content="{Binding Progress}" FontSize="15" FontWeight="Bold" HorizontalAlignment="Center" Width="120"
                                       Style="{StaticResource StatusLabelStyle}"  
                                       Foreground="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"
                                       BorderBrush="{Binding WaferStatus, Converter={StaticResource StatusToColorConv}}"/>-->
                                <!--</StackPanel>-->

                                
                            </Grid>

                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

        </aniScroll:AnimationScrollViewer>

        <Label Margin="4,0,4,4" Content="Stage" Foreground="WhiteSmoke" FontSize="30" 
                   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                   FontWeight="DemiBold" BorderBrush="WhiteSmoke" BorderThickness="0.6">
        </Label>
        <!--<Button Background="Transparent" Style="{x:Null}" Margin="8" Width="100" BorderThickness="0" Command="{Binding ToggleCellLuncherCommand}"/>-->

        <CheckBox Margin="16,4" Width="44" Height="44" VerticalAlignment="Top" HorizontalAlignment="Left" BorderBrush="White"
                      IsChecked="{Binding SelectedAllStage, Mode=TwoWay}"/>
        <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="0.6" Margin="0,0,0,4">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0"
                            Margin="12"
                            Opacity="0.5"
                            Style="{StaticResource UpButtonStyle}"
                            Click="StageListUpBtnClick"/>

                <Button Grid.Column="2"
                            Margin="12"
                            Opacity="0.5"
                            Style="{StaticResource DwButtonStyle}"
                            Click="StageListDownBtnClick"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>
