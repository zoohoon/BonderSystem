<dialogs:CustomDialog x:Class="NeedleCleanPadModule.UC.UcNeedleCleanPad"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:NeedleCleanPadModule.UC"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>

                <Style x:Key="DefaultTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}" >
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel LastChildFill="true">
                                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="5,0,0,0">
                                        <Border Background="Red" DockPanel.Dock="Bottom" Margin="0,0,0,0" Width="20" Height="16" CornerRadius="10">
                                            <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                            </TextBlock>
                                        </Border>
                                        <Border Background="Transparent" DockPanel.Dock="Bottom" Margin="3,0,0,0" Height="16" >
                                            <TextBlock Text="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                                                   VerticalAlignment="center" HorizontalAlignment="Left" FontWeight="Bold" Foreground="Red">
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                        <Border BorderBrush="red" BorderThickness="1" />
                                    </AdornedElementPlaceholder>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="Margin" Value="0,0,0,16"/>
                </Style>

                <Style x:Key="ContentTextBox" TargetType="TextBox">
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="18" />
                </Style>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Content="Input the 'Needle Clean Pad Width, Height' you want to set. " Foreground="Black" FontWeight="DemiBold"/>
        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content=" Width : " HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="18"/>
            <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ContentTextBox}" VerticalAlignment="Center" 
                         Text="{Binding PadWidth}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown" >
                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <Label Grid.Row="1" Content=" Height : " HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="18"/>
            <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource ContentTextBox}" VerticalAlignment="Center"
                         Text="{Binding PadHeight}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown" >
                        <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button  Content="OK" Margin="4" FontSize="15" Click="OK_Button_Click" Width="80" HorizontalAlignment="Right" />
            <Button  Content="CANCEL" Margin="4" FontSize="15" Click="Cancel_Button_Click" Width="80" HorizontalAlignment="Right" />
        </StackPanel>
    </Grid>
</dialogs:CustomDialog>
