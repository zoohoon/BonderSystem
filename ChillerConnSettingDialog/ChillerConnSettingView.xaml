<UserControl x:Class="ChillerConnSettingDialog.ChillerConnSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:aniScroll="clr-namespace:UcAnimationScrollViewer;assembly=UcAnimationScrollViewer"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ChillerConnSettingDialog"
             x:Name="ucDialog"
             mc:Ignorable="d" d:DesignHeight="680" d:DesignWidth="800"  Background="WhiteSmoke">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

            <Style x:Key="UpButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="UpButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray"
                                    ShadowDepth="5"
                                    Softness="0"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Data="M1,21H23L12,2" Fill="White" Name="TryAngleIcon"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DwButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Name="DwButtonBorderStyle" Background="#333333">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="5"
                                    Softness="0"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Viewbox Margin="8">
                                    <Path Data="M1,2H23L12,21"
                                          Fill="White" Name="TryAngleIcon"
                                          />
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0,0,16,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition />
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Content="{Binding ChillerModule.ChillerInfo.Index}" ContentStringFormat="Chiller {0}" Foreground="Black" FontSize="22" FontWeight="DemiBold"/>

        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="2.6*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!-- Communication -->
            <GroupBox   Grid.Row="0"
                        Grid.Column="0"
                        Margin="8"
                        Header="Communication"
                        Background="#3C454F"
                        FontWeight="DemiBold" 
                        Foreground="WhiteSmoke" 
                        BorderBrush="#3C454F"
                        FontSize="12">
                <StackPanel>
                    <!--  IP -->
                    <Grid Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="IP : " Foreground="Black" VerticalAlignment="Center"/>
                        <TextBox AutomationProperties.AutomationId="txtIP"
                                 Grid.Column="1" Style="{x:Null}" Text="{Binding ChillerModule.ChillerParam.IP}" VerticalContentAlignment="Center"  Height="32">
                            <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.ChillerSVTextBoxClickCommand, ElementName=ucWindow}"
                                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>

                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                        </TextBox>
                    </Grid>

                    <!--  Port -->
                    <Grid  Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="PORT : " Foreground="Black"  VerticalAlignment="Center"/>
                        <TextBox AutomationProperties.AutomationId="txtPort"
                                 Grid.Column="1" Style="{x:Null}"  Text="{Binding ChillerModule.ChillerParam.Port}" VerticalContentAlignment="Center"  Height="32">
                        </TextBox>

                    </Grid>

                    <!-- Connect-->
                    <Grid  Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button AutomationProperties.AutomationId="btnCONNECT"
                                Content="CONNECT" Style="{DynamicResource ControlButtonStyle}"
                                Command="{Binding ConnectCommand}" Margin="2,0,2,0" Height="32"/>
                        <Button AutomationProperties.AutomationId="btnDISCONNECT"
                                Content="DISCONNECT" Grid.Column="1" Style="{DynamicResource ControlButtonStyle}" 
                                Command="{Binding DisConnectCommand}" Height="32"/>
                    </Grid>
                </StackPanel>
            </GroupBox>

            <!-- Operation -->
            <GroupBox   Grid.Row="0"
                        Grid.Column="1"
                        Margin="8"
                        Header="Operation"
                        Background="#3C454F"
                        FontWeight="DemiBold" 
                        Foreground="WhiteSmoke" 
                        BorderBrush="#3C454F"
                        FontSize="12"
                        >
                <StackPanel>

                    <!-- Mode -->
                    <Grid  Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="Chiller Mode : " Foreground="Black" VerticalAlignment="Center"/>
                        <ComboBox AutomationProperties.AutomationId="cmbChillerMode"
                                  Margin="0,4,0,2" Grid.Column="1" Height="32"
                                  ItemsSource="{Binding ChillerModeList}"
                                  SelectedItem="{Binding SelectedChillerMode, Mode=TwoWay}">

                        </ComboBox>
                    </Grid>

                    <!-- Operation Lock -->
                    <Grid  Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ToggleButton AutomationProperties.AutomationId="tglOPLock"
                                      Grid.Column="1" Style="{DynamicResource ON_OFF_ToggleBtn}" IsChecked="{Binding IsOperationLock}" Height="28" HorizontalAlignment="Left">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked" >
                                    <i:InvokeCommandAction Command="{Binding Path=SetOperaionLockCommand}"
                                                           CommandParameter="true"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked" >
                                    <i:InvokeCommandAction Command="{Binding Path=SetOperaionLockCommand}"
                                                           CommandParameter="false"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ToggleButton>
                    </Grid>

                    <Grid  Margin="0,2,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button AutomationProperties.AutomationId="btnSETMODE"
                                Content="SET MODE" Style="{DynamicResource ControlButtonStyle}"
                                Command="{Binding SetModeCommand}" 
                                Margin="2,0,2,0" Height="32"/>
                        <!--<Button Content="DISCONNECT" Grid.Column="1" Style="{DynamicResource ControlButtonStyle}" 
                            Command="{Binding ExitWindowCommand, ElementName=ucDialog}"/>-->

                    </Grid>
                    
                </StackPanel>
            </GroupBox>

            <TabControl Grid.Row="1" Grid.ColumnSpan="2">
                <TabItem AutomationProperties.AutomationId="tiChillerOffset"
                         Header="CHILLER OFFSET">
                    <!-- ChillerOffset -->
                    <GroupBox 
                      Margin="8"
                      Background="#3C454F"
                      FontWeight="DemiBold" 
                      Foreground="WhiteSmoke" 
                      BorderBrush="#3C454F"
                      FontSize="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="6*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0">
                        <aniScroll:AnimationScrollViewer x:Name="svViewer" Margin="8" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <DataGrid SelectedIndex="{Binding OffsetDataGridSelectedIndex}" 
                                      ItemsSource="{Binding OffsetDicList}" AutoGenerateColumns="False" CanUserResizeColumns="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Target Temp" Width="289" Binding="{Binding TargetTemp, NotifyOnTargetUpdated=True}">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Temp Offset" Width="288" Binding="{Binding TempOffset}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </aniScroll:AnimationScrollViewer>
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="240*"/>
                            <ColumnDefinition Width="240*"/>
                        </Grid.ColumnDefinitions>

                        <Button AutomationProperties.AutomationId="btnOffsetUp"
                                Grid.Column="0"
                                Margin="4"
                                Style="{StaticResource UpButtonStyle}"
                                Click="CategoryUpBtnClick"/>

                        <Button AutomationProperties.AutomationId="btnOffsetDown"
                                Grid.Column="1"
                                Margin="4"
                                Style="{StaticResource DwButtonStyle}"
                                Click="CategoryDwBtnClick"/>
                    </Grid>

                    <Grid Grid.Row="0" Grid.Column="1" Margin="0,8,0,0">
                        <StackPanel>
                            <Button AutomationProperties.AutomationId="btnOffsetTempAdd"
                                    Content="ADD" Height="40" Style="{DynamicResource ControlButtonStyle}"
                                    Command="{Binding OffsetTempAddCommand}"/>
                            <Button AutomationProperties.AutomationId="btnOffsetTempDelete"
                                    Content="DELETE" Height="40" Style="{DynamicResource ControlButtonStyle}"
                                    Command="{Binding OffsetTempDeleteCommand}" Margin="0,8,0,0"/>
                        </StackPanel>
                    </Grid>
                    
                </Grid>
            </GroupBox>
                </TabItem>

                <TabItem AutomationProperties.AutomationId="tiCommSetting"
                         Header="COMM SETTING">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel>
                            <!-- Ping Timeout-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="PING TIMEOUT : "/>
                                <TextBox AutomationProperties.AutomationId="txtPingTimeout"
                                         Grid.Column="1" Text="{Binding PingTimeOut}"/>
                            </Grid>

                            <!-- Read Delay-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="READ  DELAY : "/>
                                <TextBox AutomationProperties.AutomationId="txtReadDelay"
                                         Grid.Column="1" Text="{Binding CommReadDelayTime}"/>
                            </Grid>
                            
                            <!-- Write Delay-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="WRITE DELAY: "/>
                                <TextBox AutomationProperties.AutomationId="txtWriteDelay"
                                         Grid.Column="1" Text="{Binding CommWriteDelayTime}"/>
                            </Grid>

                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem AutomationProperties.AutomationId="tiErrorView"
                         Header="Error"  Visibility="{Binding ChillerErrorOptionSettingVisibiliy, ElementName=ucDialog, Mode=OneWay}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <GroupBox Header="ERROR">
                            <TextBox Text="{Binding ChillerModule.ChillerInfo.ErrorReport}"></TextBox>
                        </GroupBox>
                        <GroupBox Header="WARNING" Grid.Row="1">
                            <ListView ItemsSource="{Binding ChillerModule.ChillerInfo.WarningReport, Mode=TwoWay}">
                            </ListView>
                        </GroupBox>
                        <GroupBox Header="OPTION" Grid.Row="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Column="0">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button AutomationProperties.AutomationId="btnSAVE"
                                            Content="Add ErrorCode" Width="120" Height="34" Style="{DynamicResource ControlButtonStyle}"
                                            Command="{Binding AddErrorCodeCommand}"/>
                                        <Button AutomationProperties.AutomationId="btnEXIT"
                                            Content="Clear ErrorCode" Width="120" Height="34" Style="{DynamicResource ControlButtonStyle}" Margin="8,0,0,0" 
                                            Command="{Binding ClearErrorCodeCommand}"/>       
                                    </StackPanel>
                                </Grid>
                                <Grid Grid.Column="0" Grid.Row="1">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button AutomationProperties.AutomationId="btnSAVE"
                                            Content="Add WarningCode" Width="120" Height="34" Style="{DynamicResource ControlButtonStyle}"
                                            Command="{Binding AddWarningCodeCommand}"/>
                                        <Button AutomationProperties.AutomationId="btnEXIT"
                                            Content="Clear WarningCode" Width="120" Height="34" Style="{DynamicResource ControlButtonStyle}" Margin="8,0,0,0" 
                                            Command="{Binding ClearWarningCodeCommand}"/>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
        
        <!--Row 2-->
        <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,16,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button AutomationProperties.AutomationId="btnSAVE"
                        Content="SAVE" Width="120" Height="34" Style="{DynamicResource ControlButtonStyle}"
                        Command="{Binding SaveParameterCommand}"/>
                <Button AutomationProperties.AutomationId="btnEXIT"
                        Content="EXIT" Width="120" Height="34" Style="{DynamicResource ControlButtonStyle}" Margin="8,0,0,0" 
                        Command="{Binding ExitWindowCommand, ElementName=ucDialog}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
