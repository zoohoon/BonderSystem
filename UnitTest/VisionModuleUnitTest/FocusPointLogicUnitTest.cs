using Microsoft.VisualStudio.TestTools.UnitTesting;
using VisionModuleUnitTests;
using System.Linq;
using System.Collections.Generic;
using System;
using ProberInterfaces.Param;
using ProberInterfaces;

namespace ProcessingModule.Tests
{
    [TestClass()]
    public class FocusPointLogicUnitTest
    {
        // ISSR-3918, Wafer High, 13/13
        public (double ZHeight, double FiliterdFocusValue)[] GetDataSet_1(int index)
        {
            (double ZHeight, double FiliterdFocusValue)[] imageBuffersArray = null;

            List<(double ZHeight, double FiliterdFocusValue)[]> DataSet = new List<(double ZHeight, double FiliterdFocusValue)[]>();

            imageBuffersArray = new[] {
(-66036.9   ,1245247.0),
(-66026.9   ,1348122.0),
(-66016.9   ,1515477.0),
(-66006.9   ,1718673.0),
(-65996.9   ,1533130.0),
(-65986.9   ,1458181.0),
(-65976.9   ,1543127.0),
(-65966.9   ,1338447.0),
(-65956.9   ,1433264.0),
(-65946.9   ,1640299.0),
(-65936.9   ,1843892.0),
(-65926.9   ,1538063.0),
(-65916.9   ,1210719.0),
(-65906.9   ,1141424.0),
(-65896.9   ,1071682.0),
(-65886.9   ,1049881.0),
(-65876.9   ,1015594.0),
(-65866.9   ,970125.0 ),
(-65856.9   ,964825.0 ),
(-65846.9   ,914062.0 ),
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66036.9 , 1251402.0),
(-66026.9 , 1429549.0),
(-66016.9 , 1522609.0),
(-66006.9 , 1755868.0),
(-65996.9 , 1495785.0),
(-65986.9 , 1416283.0),
(-65976.9 , 1558589.0),
(-65966.9 , 1357635.0),
(-65956.9 , 1432397.0),
(-65946.9 , 1676742.0),
(-65936.9 , 1831693.0),
(-65926.9 , 1483806.0),
(-65916.9 , 1287779.0),
(-65906.9 , 1095746.0),
(-65896.9 , 1066836.0),
(-65886.9 , 1040452.0),
(-65876.9 , 990934.0 ),
(-65866.9 , 970390.0 ),
(-65856.9 , 945494.0 ),
(-65846.9 , 947194.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66036.9 , 1257339.0)  ,
(-66026.9 , 1358239.0)  ,
(-66016.9 , 1545125.0)  ,
(-66006.9 , 1762372.0)  ,
(-65996.9 , 1558953.0)  ,
(-65986.9 , 1473060.0)  ,
(-65976.9 , 1578282.0)  ,
(-65966.9 , 1341766.0)  ,
(-65956.9 , 1490641.0)  ,
(-65946.9 , 1677604.0)  ,
(-65936.9 , 1945579.0)  ,
(-65926.9 , 1480614.0)  ,
(-65916.9 , 1294655.0)  ,
(-65906.9 , 1158590.0)  ,
(-65896.9 , 1119780.0)  ,
(-65886.9 , 1017511.0)  ,
(-65876.9 , 1010972.0)  ,
(-65866.9 , 973531.0 )  ,
(-65856.9 , 943388.0 )  ,
(-65846.9 , 909561.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66036.9 , 1244580.0)  ,
(-66026.9 , 1338529.0)  ,
(-66016.9 , 1549530.0)  ,
(-66006.9 , 1698959.0)  ,
(-65996.9 , 1493699.0)  ,
(-65986.9 , 1435569.0)  ,
(-65976.9 , 1568712.0)  ,
(-65966.9 , 1345579.0)  ,
(-65956.9 , 1464897.0)  ,
(-65946.9 , 1722343.0)  ,
(-65936.9 , 1872952.0)  ,
(-65926.9 , 1477320.0)  ,
(-65916.9 , 1299063.0)  ,
(-65906.9 , 1142908.0)  ,
(-65896.9 , 1085160.0)  ,
(-65886.9 , 1031446.0)  ,
(-65876.9 , 993205.0 )  ,
(-65866.9 , 936823.0 )  ,
(-65856.9 , 959092.0 )  ,
(-65846.9 , 935438.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66108.9 , 696762.0    ),
(-66098.9 , 730378.0    ),
(-66088.9 , 763596.0    ),
(-66078.9 , 768965.0    ),
(-66068.9 , 821551.0    ),
(-66058.9 , 820190.0    ),
(-66048.9 , 896521.0    ),
(-66038.9 , 955830.0    ),
(-66028.9 , 1042732.0   ),
(-66018.9 , 1202337.0   ),
(-66008.9 , 1320420.0   ),
(-65998.9 , 1427707.0   ),
(-65988.9 , 1233791.0   ),
(-65978.9 , 1267461.0   ),
(-65968.9 , 1290140.0   ),
(-65958.9 , 1265428.0   ),
(-65948.9 , 1372234.0   ),
(-65938.9 , 1635949.0   ),
(-65928.9 , 1788243.0   ),
(-65918.9 , 1255761.0   )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66108.9   ,719119.0 ) ,
(-66098.9   ,763279.0 ) ,
(-66088.9   ,750218.0 ) ,
(-66078.9   ,783386.0 ) ,
(-66068.9   ,774237.0 ) ,
(-66058.9   ,863477.0 ) ,
(-66048.9   ,926383.0 ) ,
(-66038.9   ,981142.0 ) ,
(-66028.9   ,1041052.0) ,
(-66018.9   ,1208583.0) ,
(-66008.9   ,1369958.0) ,
(-65998.9   ,1439289.0) ,
(-65988.9   ,1278136.0) ,
(-65978.9   ,1234992.0) ,
(-65968.9   ,1305375.0) ,
(-65958.9   ,1274148.0) ,
(-65948.9   ,1325910.0) ,
(-65938.9   ,1693152.0) ,
(-65928.9   ,1801086.0) ,
(-65918.9   ,1291464.0)
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66106.9 , 1251632.0 ) ,
(-66096.9 , 1234362.0 ) ,
(-66086.9 , 1241352.0 ) ,
(-66076.9 , 1239162.0 ) ,
(-66066.9 , 1252402.0 ) ,
(-66056.9 , 1256669.0 ) ,
(-66046.9 , 1284483.0 ) ,
(-66036.9 , 1295982.0 ) ,
(-66026.9 , 1443417.0 ) ,
(-66016.9 , 1639857.0 ) ,
(-66006.9 , 1815783.0 ) ,
(-65996.9 , 1539097.0 ) ,
(-65986.9 , 1497466.0 ) ,
(-65976.9 , 1613954.0 ) ,
(-65966.9 , 1443872.0 ) ,
(-65956.9 , 1519592.0 ) ,
(-65946.9 , 1722592.0 ) ,
(-65936.9 , 1918530.0 ) ,
(-65926.9 , 1509642.0 ) ,
(-65916.9 , 1303016.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66106.9   ,1213588.0 )    ,
(-66096.9   ,1270565.0 )    ,
(-66086.9   ,1230897.0 )    ,
(-66076.9   ,1249237.0 )    ,
(-66066.9   ,1231337.0 )    ,
(-66056.9   ,1254816.0 )    ,
(-66046.9   ,1276312.0 )    ,
(-66036.9   ,1353533.0 )    ,
(-66026.9   ,1425691.0 )    ,
(-66016.9   ,1659855.0 )    ,
(-66006.9   ,1807889.0 )    ,
(-65996.9   ,1629966.0 )    ,
(-65986.9   ,1497986.0 )    ,
(-65976.9   ,1650097.0 )    ,
(-65966.9   ,1410663.0 )    ,
(-65956.9   ,1527922.0 )    ,
(-65946.9   ,1715740.0 )    ,
(-65936.9   ,1896490.0 )    ,
(-65926.9   ,1549558.0 )    ,
(-65916.9   ,1364669.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66093.9 , 1210094.0)  ,
(-66083.9 , 1234189.0)  ,
(-66073.9 , 1240612.0)  ,
(-66063.9 , 1299067.0)  ,
(-66053.9 , 1368499.0)  ,
(-66043.9 , 1494261.0)  ,
(-66033.9 , 1665008.0)  ,
(-66023.9 , 2005849.0)  ,
(-66013.9 , 2391456.0)  ,
(-66003.9 , 3090999.0)  ,
(-65993.9 , 3352971.0)  ,
(-65983.9 , 2802294.0)  ,
(-65973.9 , 2449917.0)  ,
(-65963.9 , 2360174.0)  ,
(-65953.9 , 1840483.0)  ,
(-65943.9 , 1847112.0)  ,
(-65933.9 , 2306334.0)  ,
(-65923.9 , 2493032.0)  ,
(-65913.9 , 1895822.0)  ,
(-65903.9 , 1588356.0)
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66093.9 , 1203748.0 ) ,
(-66083.9 , 1228392.0 ) ,
(-66073.9 , 1242829.0 ) ,
(-66063.9 , 1319719.0 ) ,
(-66053.9 , 1357309.0 ) ,
(-66043.9 , 1463960.0 ) ,
(-66033.9 , 1677481.0 ) ,
(-66023.9 , 1980302.0 ) ,
(-66013.9 , 2459801.0 ) ,
(-66003.9 , 3119456.0 ) ,
(-65993.9 , 3337725.0 ) ,
(-65983.9 , 2884878.0 ) ,
(-65973.9 , 2480685.0 ) ,
(-65963.9 , 2339619.0 ) ,
(-65953.9 , 1847365.0 ) ,
(-65943.9 , 1860981.0 ) ,
(-65933.9 , 2205635.0 ) ,
(-65923.9 , 2584932.0 ) ,
(-65913.9 , 1878684.0 ) ,
(-65903.9 , 1538183.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66093.9 , 1224994.0 ) ,
(-66083.9 , 1236477.0 ) ,
(-66073.9 , 1276487.0 ) ,
(-66063.9 , 1324785.0 ) ,
(-66053.9 , 1400819.0 ) ,
(-66043.9 , 1494760.0 ) ,
(-66033.9 , 1590862.0 ) ,
(-66023.9 , 1919962.0 ) ,
(-66013.9 , 2337657.0 ) ,
(-66003.9 , 2793311.0 ) ,
(-65993.9 , 3099537.0 ) ,
(-65983.9 , 2916013.0 ) ,
(-65973.9 , 2380594.0 ) ,
(-65963.9 , 2035031.0 ) ,
(-65953.9 , 1791761.0 ) ,
(-65943.9 , 1611270.0 ) ,
(-65933.9 , 1872376.0 ) ,
(-65923.9 , 2280307.0 ) ,
(-65913.9 , 1798103.0 ) ,
(-65903.9 , 1496180.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66096.9 , 1191016.0 ) ,
(-66086.9 , 1174448.0 ) ,
(-66076.9 , 1207428.0 ) ,
(-66066.9 , 1240495.0 ) ,
(-66056.9 , 1246412.0 ) ,
(-66046.9 , 1317193.0 ) ,
(-66036.9 , 1427223.0 ) ,
(-66026.9 , 1630079.0 ) ,
(-66016.9 , 1896761.0 ) ,
(-66006.9 , 2392752.0 ) ,
(-65996.9 , 2862303.0 ) ,
(-65986.9 , 2765982.0 ) ,
(-65976.9 , 2313210.0 ) ,
(-65966.9 , 2122712.0 ) ,
(-65956.9 , 1793562.0 ) ,
(-65946.9 , 1662317.0 ) ,
(-65936.9 , 1775496.0 ) ,
(-65926.9 , 2155569.0 ) ,
(-65916.9 , 1892871.0 ) ,
(-65906.9 , 1478858.0 )
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(   -66096.9 ,  1145946.0   ),
(   -66086.9 ,  1176975.0   ),
(   -66076.9 ,  1214170.0   ),
(   -66066.9 ,  1231328.0   ),
(   -66056.9 ,  1248113.0   ),
(   -66046.9 ,  1312691.0   ),
(   -66036.9 ,  1395068.0   ),
(   -66026.9 ,  1610780.0   ),
(   -66016.9 ,  1955501.0   ),
(   -66006.9 ,  2431934.0   ),
(   -65996.9 ,  2873798.0   ),
(   -65986.9 ,  2763719.0   ),
(   -65976.9 ,  2414461.0   ),
(   -65966.9 ,  2110371.0   ),
(   -65956.9 ,  1749064.0   ),
(   -65946.9 ,  1654485.0   ),
(   -65936.9 ,  1829301.0   ),
(   -65926.9 ,  2156506.0   ),
(   -65916.9 ,  1859427.0   ),
(   -65906.9 ,  1536957.0   ),
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-66095.9 , 1183628.0)   ,
(-66085.9 , 1236565.0)   ,
(-66075.9 , 1272703.0)   ,
(-66065.9 , 1283837.0)   ,
(-66055.9 , 1287164.0)   ,
(-66045.9 , 1353403.0)   ,
(-66035.9 , 1449415.0)   ,
(-66025.9 , 1663482.0)   ,
(-66015.9 , 2075992.0)   ,
(-66005.9 , 2588388.0)   ,
(-65995.9 , 2988624.0)   ,
(-65985.9 , 2964057.0)   ,
(-65975.9 , 2427931.0)   ,
(-65965.9 , 2291118.0)   ,
(-65955.9 , 1892380.0)   ,
(-65945.9 , 1808243.0)   ,
(-65935.9 , 1974480.0)   ,
(-65925.9 , 2266933.0)   ,
(-65915.9 , 1849012.0)   ,
(-65905.9 , 1527679.0)

            };

            DataSet.Add(imageBuffersArray);

            return DataSet[index];
        }

        // ISSR-4011, Pin High - SinglePinAlignTipFocusRoughModule, 
        public (double ZHeight, double FiliterdFocusValue)[] GetDataSet_2(int index)
        {
            (double ZHeight, double FiliterdFocusValue)[] imageBuffersArray = null;

            List<(double ZHeight, double FiliterdFocusValue)[]> DataSet = new List<(double ZHeight, double FiliterdFocusValue)[]>();

            imageBuffersArray = new[] {
(-30629.5, 584795.0),
(-30625.5, 596870.0),
(-30621.5, 574230.0),
(-30617.5, 570021.0),
(-30613.5, 574426.0),
(-30609.5, 581436.0),
(-30605.5, 570069.0),
(-30601.5, 576106.0),
(-30597.5, 578556.0),
(-30593.5, 575200.0),
(-30589.5, 567149.0),
(-30585.5, 559849.0),
(-30581.5, 568329.0),
(-30577.5, 560254.0),
(-30573.5, 553627.0),
(-30569.5, 557239.0),
(-30565.5, 553369.0),
(-30561.5, 529185.0),
(-30557.5, 552241.0),
(-30553.5, 544812.0),
(-30549.5, 544361.0),
(-30545.5, 527346.0),
(-30541.5, 513097.0),
(-30537.5, 529263.0),
(-30533.5, 525295.0),
(-30529.5, 518163.0),
(-30525.5, 504843.0),
(-30521.5, 532405.0),
(-30517.5, 545935.0),
(-30513.5, 575616.0),
(-30509.5, 636185.0),
(-30505.5, 748824.0),
(-30501.5, 974669.0),
(-30497.5, 1460616.0),
(-30493.5, 1406676.0),
(-30489.5, 1082948.0),
(-30485.5, 916026.0),
(-30481.5, 762933.0),
(-30477.5, 651558.0),
(-30473.5, 576372.0),
(-30469.5, 539547.0),
(-30465.5, 502484.0),
(-30461.5, 491951.0),
(-30457.5, 466887.0),
(-30453.5, 458815.0),
(-30449.5, 451342.0),
(-30445.5, 447441.0),
(-30441.5, 427153.0),
(-30437.5, 421798.0),
(-30433.5, 433051.0),
(-30429.5, 422805.0),
(-30425.5, 410607.0),
(-30421.5, 427162.0),
(-30417.5, 416911.0),
(-30413.5, 414283.0),
(-30409.5, 424592.0),
(-30405.5, 426053.0),
(-30401.5, 423487.0),
(-30397.5, 412429.0),
(-30393.5, 406551.0),
(-30389.5, 406969.0),
(-30385.5, 430089.0),
(-30381.5, 423983.0),
(-30377.5, 428126.0),
(-30373.5, 408473.0),
(-30369.5, 432703.0),
(-30365.5, 439366.0),
(-30361.5, 440357.0),
(-30357.5, 456127.0),
(-30353.5, 492297.0),
(-30349.5, 601838.0),
(-30345.5, 786402.0),
(-30341.5, 1519631.0),
(-30337.5, 4697730.0),
(-30333.5, 2832820.0)
            };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-30629.5, 588220.0),
(-30625.5, 562347.0),
(-30621.5, 577404.0),
(-30617.5, 560926.0),
(-30613.5, 572955.0),
(-30609.5, 582673.0),
(-30605.5, 576922.0),
(-30601.5, 575204.0),
(-30597.5, 575573.0),
(-30593.5, 572391.0),
(-30589.5, 573026.0),
(-30585.5, 575664.0),
(-30581.5, 543279.0),
(-30577.5, 569633.0),
(-30573.5, 569548.0),
(-30569.5, 545655.0),
(-30565.5, 549306.0),
(-30561.5, 553164.0),
(-30557.5, 539812.0),
(-30553.5, 547352.0),
(-30549.5, 551939.0),
(-30545.5, 532266.0),
(-30541.5, 520990.0),
(-30537.5, 523395.0),
(-30533.5, 524388.0),
(-30529.5, 494704.0),
(-30525.5, 514856.0),
(-30521.5, 521628.0),
(-30517.5, 557258.0),
(-30513.5, 580914.0),
(-30509.5, 641675.0),
(-30505.5, 741654.0),
(-30501.5, 963103.0),
(-30497.5, 1458021.0),
(-30493.5, 1405961.0),
(-30489.5, 1089276.0),
(-30485.5, 923600.0),
(-30481.5, 747386.0),
(-30477.5, 651788.0),
(-30473.5, 594302.0),
(-30469.5, 531132.0),
(-30465.5, 519444.0),
(-30461.5, 493908.0),
(-30457.5, 488737.0),
(-30453.5, 453070.0),
(-30449.5, 448669.0),
(-30445.5, 435397.0),
(-30441.5, 433513.0),
(-30437.5, 438196.0),
(-30433.5, 430900.0),
(-30429.5, 426023.0),
(-30425.5, 428269.0),
(-30421.5, 416996.0),
(-30417.5, 410889.0),
(-30413.5, 432555.0),
(-30409.5, 421729.0),
(-30405.5, 419535.0),
(-30401.5, 414757.0),
(-30397.5, 413944.0),
(-30393.5, 419082.0),
(-30389.5, 408058.0),
(-30385.5, 428457.0),
(-30381.5, 413382.0),
(-30377.5, 426383.0),
(-30373.5, 422097.0),
(-30369.5, 426687.0),
(-30365.5, 426571.0),
(-30361.5, 434728.0),
(-30357.5, 461754.0),
(-30353.5, 486203.0),
(-30349.5, 594109.0),
(-30345.5, 804798.0),
(-30341.5, 1503494.0),
(-30337.5, 4634943.0),
(-30333.5, 2945252.0)
                };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-30629.5, 579693.0),
(-30625.5, 599182.0),
(-30621.5, 590313.0),
(-30617.5, 560229.0),
(-30613.5, 574361.0),
(-30609.5, 574840.0),
(-30605.5, 582634.0),
(-30601.5, 566609.0),
(-30597.5, 568574.0),
(-30593.5, 584959.0),
(-30589.5, 571428.0),
(-30585.5, 588268.0),
(-30581.5, 580893.0),
(-30577.5, 568617.0),
(-30573.5, 563690.0),
(-30569.5, 548163.0),
(-30565.5, 555746.0),
(-30561.5, 564313.0),
(-30557.5, 544021.0),
(-30553.5, 537910.0),
(-30549.5, 533987.0),
(-30545.5, 544023.0),
(-30541.5, 527594.0),
(-30537.5, 526093.0),
(-30533.5, 520875.0),
(-30529.5, 521104.0),
(-30525.5, 508769.0),
(-30521.5, 530626.0),
(-30517.5, 540096.0),
(-30513.5, 581543.0),
(-30509.5, 629462.0),
(-30505.5, 734174.0),
(-30501.5, 941098.0),
(-30497.5, 1427261.0),
(-30493.5, 1441225.0),
(-30489.5, 1109558.0),
(-30485.5, 923670.0),
(-30481.5, 754794.0),
(-30477.5, 657868.0),
(-30473.5, 597314.0),
(-30469.5, 534300.0),
(-30465.5, 502955.0),
(-30461.5, 490129.0),
(-30457.5, 475314.0),
(-30453.5, 461281.0),
(-30449.5, 455492.0),
(-30445.5, 441287.0),
(-30441.5, 440278.0),
(-30437.5, 429991.0),
(-30433.5, 436118.0),
(-30429.5, 424269.0),
(-30425.5, 420139.0),
(-30421.5, 432791.0),
(-30417.5, 414340.0),
(-30413.5, 417187.0),
(-30409.5, 416478.0),
(-30405.5, 418798.0),
(-30401.5, 418490.0),
(-30397.5, 414257.0),
(-30393.5, 420841.0),
(-30389.5, 416950.0),
(-30385.5, 409111.0),
(-30381.5, 418225.0),
(-30377.5, 417708.0),
(-30373.5, 418881.0),
(-30369.5, 430435.0),
(-30365.5, 432193.0),
(-30361.5, 442101.0),
(-30357.5, 462019.0),
(-30353.5, 495961.0),
(-30349.5, 602472.0),
(-30345.5, 798905.0),
(-30341.5, 1468996.0),
(-30337.5, 4531108.0),
(-30333.5, 3037592.0)
                };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-30629.5, 577955.0),
(-30625.5, 580913.0),
(-30621.5, 585664.0),
(-30617.5, 569864.0),
(-30613.5, 580951.0),
(-30609.5, 572207.0),
(-30605.5, 576978.0),
(-30601.5, 566099.0),
(-30597.5, 565518.0),
(-30593.5, 570238.0),
(-30589.5, 574071.0),
(-30585.5, 582115.0),
(-30581.5, 575295.0),
(-30577.5, 566783.0),
(-30573.5, 558809.0),
(-30569.5, 557254.0),
(-30565.5, 553199.0),
(-30561.5, 569562.0),
(-30557.5, 558270.0),
(-30553.5, 530970.0),
(-30549.5, 518963.0),
(-30545.5, 540533.0),
(-30541.5, 534882.0),
(-30537.5, 521239.0),
(-30533.5, 519354.0),
(-30529.5, 518255.0),
(-30525.5, 518398.0),
(-30521.5, 525543.0),
(-30517.5, 534367.0),
(-30513.5, 576271.0),
(-30509.5, 643013.0),
(-30505.5, 738693.0),
(-30501.5, 936644.0),
(-30497.5, 1384429.0),
(-30493.5, 1427492.0),
(-30489.5, 1110608.0),
(-30485.5, 932524.0),
(-30481.5, 759663.0),
(-30477.5, 656072.0),
(-30473.5, 586472.0),
(-30469.5, 549507.0),
(-30465.5, 519044.0),
(-30461.5, 482569.0),
(-30457.5, 473064.0),
(-30453.5, 457706.0),
(-30449.5, 451087.0),
(-30445.5, 444911.0),
(-30441.5, 421165.0),
(-30437.5, 435234.0),
(-30433.5, 418239.0),
(-30429.5, 431085.0),
(-30425.5, 416785.0),
(-30421.5, 424127.0),
(-30417.5, 429521.0),
(-30413.5, 430380.0),
(-30409.5, 421359.0),
(-30405.5, 414855.0),
(-30401.5, 420449.0),
(-30397.5, 421697.0),
(-30393.5, 415866.0),
(-30389.5, 411036.0),
(-30385.5, 423693.0),
(-30381.5, 405802.0),
(-30377.5, 421823.0),
(-30373.5, 416909.0),
(-30369.5, 423173.0),
(-30365.5, 433362.0),
(-30361.5, 445684.0),
(-30357.5, 444185.0),
(-30353.5, 483362.0),
(-30349.5, 593562.0),
(-30345.5, 778323.0),
(-30341.5, 1432327.0),
(-30337.5, 4401428.0),
(-30333.5, 3185576.0)
                };

            DataSet.Add(imageBuffersArray);

            imageBuffersArray = new[] {
(-30643.5, 588225.0),
(-30639.5, 569531.0),
(-30635.5, 567126.0),
(-30631.5, 580230.0),
(-30627.5, 567339.0),
(-30623.5, 567424.0),
(-30619.5, 572167.0),
(-30615.5, 565405.0),
(-30611.5, 567788.0),
(-30607.5, 561005.0),
(-30603.5, 558603.0),
(-30599.5, 540987.0),
(-30595.5, 547598.0),
(-30591.5, 553943.0),
(-30587.5, 556276.0),
(-30583.5, 568513.0),
(-30579.5, 603253.0),
(-30575.5, 654671.0),
(-30571.5, 745040.0),
(-30567.5, 992967.0),
(-30563.5, 1561950.0),
(-30559.5, 1586054.0),
(-30555.5, 1153868.0),
(-30551.5, 980402.0),
(-30547.5, 834644.0),
(-30543.5, 706124.0),
(-30539.5, 641917.0),
(-30535.5, 586149.0),
(-30531.5, 533562.0),
(-30527.5, 540656.0),
(-30523.5, 507906.0),
(-30519.5, 522606.0),
(-30515.5, 503150.0),
(-30511.5, 477789.0),
(-30507.5, 487304.0),
(-30503.5, 476697.0),
(-30499.5, 477155.0),
(-30495.5, 464468.0),
(-30491.5, 454256.0),
(-30487.5, 445977.0),
(-30483.5, 448683.0),
(-30479.5, 441174.0),
(-30475.5, 429374.0),
(-30471.5, 434630.0),
(-30467.5, 441870.0),
(-30463.5, 423303.0),
(-30459.5, 430952.0),
(-30455.5, 412219.0),
(-30451.5, 426436.0),
(-30447.5, 420317.0),
(-30443.5, 417810.0),
(-30439.5, 421282.0),
(-30435.5, 411496.0),
(-30431.5, 407054.0),
(-30427.5, 395784.0),
(-30423.5, 408797.0),
(-30419.5, 404164.0),
(-30415.5, 410937.0),
(-30411.5, 408925.0),
(-30407.5, 401146.0),
(-30403.5, 410939.0),
(-30399.5, 428182.0),
(-30395.5, 415447.0),
(-30391.5, 422572.0),
(-30387.5, 429341.0),
(-30383.5, 441067.0),
(-30379.5, 444740.0),
(-30375.5, 486866.0),
(-30371.5, 580337.0),
(-30367.5, 819699.0),
(-30363.5, 1590710.0),
(-30359.5, 4187695.0),
(-30355.5, 4381835.0),
(-30351.5, 1634868.0),
(-30347.5, 778749.0)
                };

            DataSet.Add(imageBuffersArray);

            return DataSet[index];
        }

        // ISSR-4011, Pin High - SinglePinAlignTipFocusRoughModule, 
        public (double ZHeight, double FiliterdFocusValue)[] GetDataSet_3(int index)
        {
            (double ZHeight, double FiliterdFocusValue)[] imageBuffersArray = null;

            List<(double ZHeight, double FiliterdFocusValue)[]> DataSet = new List<(double ZHeight, double FiliterdFocusValue)[]>();

            imageBuffersArray = new[] {
(-24889.0,  512880.0),
(-24885.0,  527952.0),
(-24881.0,  502230.0),
(-24877.0,  505163.0),
(-24873.0,  494242.0),
(-24869.0,  498637.0),
(-24865.0,  493293.0),
(-24861.0,  477447.0),
(-24857.0,  479969.0),
(-24853.0,  478860.0),
(-24849.0,  483457.0),
(-24845.0,  486395.0),
(-24841.0,  544020.0),
(-24837.0,  534813.0),
(-24833.0,  496310.0),
(-24829.0,  479638.0),
(-24825.0,  463987.0),
(-24821.0,  476450.0),
(-24817.0,  483506.0),
(-24813.0,  468051.0),
(-24809.0,  455134.0),
(-24805.0,  453805.0),
(-24801.0,  444097.0),
(-24797.0,  433214.0),
(-24793.0,  447260.0)

            };

            DataSet.Add(imageBuffersArray);

            return DataSet[index];
        }

        [TestMethod()]
        public void FinePeak()
        {
            (double ZHeight, double FiliterdFocusValue)[] imageBuffersArray = GetDataSet_3(0);

            List<(double ZHeight, double FiliterdFocusValue)> imageBuffers = new List<(double ZHeight, double FiliterdFocusValue)>(imageBuffersArray);

            //double focusValueAvgRatio = 1.2;
            //double focusValueAvg = imageBuffers.Average(image => image.FiliterdFocusValue);

            double mean = imageBuffers.Average(p => p.FiliterdFocusValue);
            double variance = imageBuffers.Sum(p => Math.Pow(p.FiliterdFocusValue - mean, 2)) / imageBuffers.Count;
            double standardDeviation = Math.Sqrt(variance);

            double k = 1.0;
            double threshold = mean + k * standardDeviation;

            List<(double ZHeight, double FiliterdFocusValue)> peakImageBuffer = new List<(double ZHeight, double FiliterdFocusValue)>();

            for (int i = 1; i < imageBuffers.Count - 1; i++)
            {
                if (imageBuffers[i].FiliterdFocusValue > threshold && //==> Compare Average Focus Level Value
                    imageBuffers[i].FiliterdFocusValue > imageBuffers[i - 1].FiliterdFocusValue &&//==> Compare Prev Focus Level Value
                    imageBuffers[i].FiliterdFocusValue > imageBuffers[i + 1].FiliterdFocusValue)//==> Compare Next Focus Level Value
                {
                    peakImageBuffer.Add(imageBuffers[i]);
                }
            }

            Assert.AreNotEqual(0, peakImageBuffer.Count); // 피크가 하나도 없으면 가장 큰값 사용할것임. 일단 테스트에서는 오류.

            PeakSelectionStrategy peakSelectionStrategy = PeakSelectionStrategy.LOWEST;

            double peakRangeThreshold = 200;
            double maxPeakFocusValue = peakImageBuffer.Max(image => image.FiliterdFocusValue);
            var firstPeakImageBuffer = imageBuffers.First(image => image.FiliterdFocusValue == maxPeakFocusValue);

            if (peakSelectionStrategy == PeakSelectionStrategy.NONE)
            {
                foreach (var item in peakImageBuffer.Select((value, i) => new { i, value }))
                {
                    var peakImage = item.value;
                    var index = item.i;

                    if (Math.Abs(peakImage.ZHeight - firstPeakImageBuffer.ZHeight) > peakRangeThreshold)
                    {
                        int CurrentPeakImageIndex = imageBuffers.IndexOf(peakImage);

                        Assert.Fail("FOCUS_VALUE_DUALPEAK");
                        break;
                    }
                }
            }
            else
            {
                // NOTHING
            }

            (double ZHeight, double FiliterdFocusValue) targetFocusValueImage;

            var maxZHeight = peakImageBuffer.Max(image => image.ZHeight);
            var HighestValueImage = peakImageBuffer.FirstOrDefault(image => image.ZHeight == maxZHeight);

            var minZHeight = peakImageBuffer.Min(image => image.ZHeight);
            var LowestValueImage = peakImageBuffer.FirstOrDefault(image => image.ZHeight == minZHeight);

            var maxFocusValueImage = imageBuffers.FirstOrDefault(image => image.FiliterdFocusValue == maxPeakFocusValue);

            switch (peakSelectionStrategy)
            {
                case PeakSelectionStrategy.NONE:
                    targetFocusValueImage = maxFocusValueImage;
                    break;

                case PeakSelectionStrategy.HIGHEST:
                    targetFocusValueImage = (peakImageBuffer.Count < 2 || LowestValueImage.FiliterdFocusValue * 2.0 < HighestValueImage.FiliterdFocusValue) ? HighestValueImage : maxFocusValueImage;
                    break;

                case PeakSelectionStrategy.LOWEST:
                    targetFocusValueImage = (peakImageBuffer.Count < 2 || LowestValueImage.FiliterdFocusValue * 2.0 < HighestValueImage.FiliterdFocusValue) ? LowestValueImage : maxFocusValueImage;
                    break;
            }

            System.Diagnostics.Debug.WriteLine($"{firstPeakImageBuffer.ZHeight} - {firstPeakImageBuffer.FiliterdFocusValue}");
        }
    }
}
