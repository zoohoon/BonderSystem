<UserControl x:Class="RecipeEditorControl.RecipeEditorParamEdit.UcRecipeEditorParamEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:RecipeEditorControl.RecipeEditorParamEdit"
             xmlns:conv="clr-namespace:ValueConverters;assembly=ValueConverters"
             xmlns:cui="clr-namespace:CUI;assembly=CUI"
             mc:Ignorable="d" 
             d:DesignHeight="892" d:DesignWidth="1280" Background="Transparent"
             Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <conv:BoolToVisibleOrCollapsedConverter x:Key="BtoV_VoOrCo" />
        <!-- Button -->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="CutButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="CutRectBtnBorder"  BorderThickness="0.8">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="5.6"
                                    Softness="0"/>
                                </Border.BitmapEffect>
                                <Path Name="ButtonPathStyle"
                                      Data="M0.5,0.5 L166.99677,0.5 192.5,26.003237
                                      192.5,79.499999 0.5,79.499999 z"
                                      Fill="#333333" Stretch="Fill" Stroke="White"/>
                            </Border>
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="CutRectBtnBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="ButtonPathStyle" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="CutRectBtnBorder" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="CutRectBtnBorder" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="SearchBtnStyleBorder" Background="#333333">
                            </Border>
                            <Viewbox Margin="8">
                                <Path Name="SearchIcon" Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,
                                  14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,
                                  16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,
                                  14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" Fill="White"/>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="SearchBtnStyleBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="SearchIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="SearchBtnStyleBorder" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="SearchBtnStyleBorder" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="UpButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="UpButtonBorderStyle" Background="#333333">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="5.6"
                                    Softness="0"/>
                                </Border.BitmapEffect>
                            </Border>
                            <Viewbox Width="48" Height="48">
                                <Canvas Width="24" Height="24">
                                    <Path Data="M1,21H23L12,2" Fill="White" Name="TryAngleIcon"/>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="UpButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DwButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="DwButtonBorderStyle" Background="#333333">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect x:Name="btnImageEffect"
                                    Color="LightGray" 
                                    ShadowDepth="5.6"
                                    Softness="0"/>
                                </Border.BitmapEffect>
                            </Border>
                            <Viewbox Width="48" Height="48">
                                <Canvas Width="24" Height="24">
                                    <Path Data="M1,2H23L12,21"
                                          Fill="White" Name="TryAngleIcon"
                                          />
                                </Canvas>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="TryAngleIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="DwButtonBorderStyle" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="ClearBtnStyleBorder" Background="#333333">
                            </Border>
                            <Viewbox Margin="8">
                                <Path Name="SearchIcon" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,
                                          13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="White"
                                          Stretch="Fill"/>
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="ClearBtnStyleBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="SearchIcon" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="ClearBtnStyleBorder" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ClearBtnStyleBorder" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <!--<RowDefinition Height="49*"/>-->
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" HorizontalAlignment="Right" Height="48" Width="48" Margin="2,4"
                        FontSize="24" Style="{StaticResource SearchButtonStyle}">
                </Button>

                <TextBox AutomationProperties.AutomationId="txtParamSearch"
                         Text="{Binding ParamSearchBoxText}" Width="220" Height="48"
                         x:Name="searchTextBox" 
                         Grid.Column="1" Margin="2,4"
                         Background="LightGray" FontSize="24"
                         TextAlignment="Center" Focusable="False"
                         VerticalContentAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown" >
                            <i:InvokeCommandAction Command="{Binding ParamSearchBoxClickCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button AutomationProperties.AutomationId="btnParamSearchClear"
                        Grid.Column="2" HorizontalAlignment="Left" Height="48" Width="48" Margin="2,4"
                        FontSize="24" Style="{StaticResource ClearButtonStyle}"
                        Visibility="{Binding IsSearchDataClearButtonVisible, Converter={StaticResource BtoV_VoOrCo}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown" >
                            <i:InvokeCommandAction Command="{Binding CleanTextBoxClickCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Grid>
        </Grid>

        <Grid Grid.Row="1">
            <local:UcParamColumnes/>
        </Grid>

        <!--<ItemsControl Grid.Row="2" ItemsSource="{Binding ParamRecordVMList}" Height="650">-->
        <ItemsControl Grid.Row="2" ItemsSource="{Binding ParamRecordVMList}" MinHeight="{Binding ItemControlMinHeight}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:UcParamRecord/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Grid Grid.Row="3">

            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="160*"/>
                <ColumnDefinition Width="160*"/>
                <ColumnDefinition Width="16*"/>
                <ColumnDefinition Width="64*"/>
                <ColumnDefinition Width="44*"/>
                <ColumnDefinition Width="64*"/>
                <ColumnDefinition Width="16*"/>
                <ColumnDefinition Width="160*"/>
                <ColumnDefinition Width="160*"/>

            </Grid.ColumnDefinitions>-->

            <!--<Button Grid.Column="0" Content="Refresh" 
                    Margin="8"
                    Style="{StaticResource CutButtonStyle}"
                    Command="{Binding RefreshCommand}"
                    Visibility="{Binding RefreshVisibility}"
                    Foreground="White"
                    FontSize="22"/>-->

            <!--<Button Grid.Column="3" Content="&lt;" Visibility="{Binding NavPageButtonVisible}"
                                Margin="16"
                    Style="{StaticResource UpButtonStyle}"
                    Command="{Binding PrevPageCommand}"
                    FontSize="36" FontWeight="Bold" Focusable="False"
                    />-->

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="50">
                <TextBlock Text="{Binding CurPageIndex}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
                <TextBlock Text="/" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
                <TextBlock Text="{Binding TotalPageCount}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
            </StackPanel>

            <!--<Button Grid.Column="5" Content="&gt;" Visibility="{Binding NavPageButtonVisible}"
                    Margin="16"
                    Style="{StaticResource DwButtonStyle}"
                    Command="{Binding NextPageCommand}"
                    FontSize="36" FontWeight="Bold"
                    Focusable="False"/>-->
        </Grid>
    </Grid>
</UserControl>
