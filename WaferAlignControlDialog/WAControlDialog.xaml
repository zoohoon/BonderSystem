<Window x:Class="WaferAlignControlDialog.WAControlDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WaferAlignControlDialog"
             xmlns:system="clr-namespace:System;assembly=System"
             mc:Ignorable="d"  SizeToContent="WidthAndHeight"
             d:DesignHeight="600" d:DesignWidth="600">
    <Grid>
        <TabControl Padding="10" Background="GhostWhite" Margin="5">
            <TabItem Header="WAFER_ALIGN">
                <Grid Margin="8" Background="DimGray">
                    <StackPanel Orientation="Vertical">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="EdgeFail" Foreground="Black"/>
                            <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1" 
                          IsChecked="False"
                          Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                            <!--IsChecked="{Binding WaferAligner.WaferAlignControItems.EdgeFail, Mode=TwoWay}"-->
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="LowFailIndex" Foreground="Black"/>
                            <ComboBox Grid.Column="1" Background="DimGray" ItemsSource="{Binding LowIndexPositions}" 
                          SelectedIndex="-1"
                          SelectionChanged="ComboBox_SelectionChanged"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="HighFailIndex" Foreground="Black"/>
                            <ComboBox Grid.Column="1" Background="DimGray" ItemsSource="{Binding HighIndexPositions}" 
                            SelectedIndex="-1"
                          SelectionChanged="ComboBox_SelectionChanged_1"/>
                            <!--SelectedItem="{Binding WaferAligner.WaferAlignControItems.HighFailPos, Mode=TwoWay}"-->
                        </Grid>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Recovery/Modify Mode" Foreground="Black"/>
                            <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1" 
                          IsChecked="False"
                          Checked="CheckBox_Checked_2" Unchecked="CheckBox_Unchecked_2"/>
                            <!--IsChecked="{Binding WaferAligner.WaferAlignControItems.EdgeFail, Mode=TwoWay}"-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Verify Center Limit X" Foreground="Black"/>
                            <TextBox Grid.Column="1" Background="DimGray" Text="{Binding VerifyCenterLimitX}"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Verify Center Limit Y" Foreground="Black"/>
                            <TextBox Grid.Column="1" Background="DimGray" Text="{Binding VerifyCenterLimitY}"/>
                        </Grid>

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="debug edge processing" Foreground="Black"/>
                            <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                      IsChecked="False"
                                      Checked="CheckBox_debug_edge_processing_Checked" Unchecked="CheckBox_debug_edge_processing_Unchecked"/>
                        </Grid>

                        <Button Content="SAVE" Click="WaferAlignSave_Click"/>
                        
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="PTPA">
                <Grid Margin="8" Background="DimGray">
                    <StackPanel Orientation="Vertical">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="IsOnDebugFunc" Foreground="Black"/>
                            <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1" 
                          IsChecked="{Binding IsOnDubugMode, Mode=TwoWay}"/>
                        </Grid>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btn_OpenWAPathFileExplore" Style="{x:Null}" Content="File Explore"
                                        Click="btn_OpenWAPathFileExplore_Click"/>
                            <Label Grid.Column="1" Style="{x:Null}" Content="WA Base Path :" />
                            <Label Grid.Column="2" Style="{x:Null}" Content="{Binding IsOnDebugImagePathBase, Mode=TwoWay}" />
                        </Grid>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btn_OpenPadPathFileExplore" Style="{x:Null}" Content="File Explore"
                                        Click="btn_OpenPadPathFileExplore_Click"/>
                            <Label Grid.Column="1" Style="{x:Null}" Content="Pad Base Path :" />
                            <Label Grid.Column="2" Style="{x:Null}" Content="{Binding IsOnDebugPadPathBase, Mode=TwoWay}" />
                        </Grid>
                        <Button Grid.Column="2" x:Name="btn_SetPTPADebug" Style="{x:Null}" Content="Set"
                                        Click="btn_SetPTPADebug_Click"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="MARK ALIGN">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Grid.Column="0" Style="{x:Null}" Content="Trigger Mark Verification After Wafer Alignment"/>
                                <CheckBox Grid.Column="1" Style="{x:Null}" VerticalAlignment="Center" IsChecked="{Binding MarkVerificationAfterWaferAlign}"/>
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Style="{x:Null}" Content="DelayCamCylinderExtended(sec) :" />
                                <TextBox Grid.Column="1" Style="{x:Null}" Text="{Binding DelaywaferCamCylinderExtendedBeforeFocusing, Mode=TwoWay}" />

                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Style="{x:Null}" Content="MarkDiffTolerance__X :" />
                                <TextBox Grid.Column="1" Style="{x:Null}" Text="{Binding MarkDiffTolerance_X, Mode=TwoWay}" />

                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Style="{x:Null}" Content="MarkDiffTolerance__Y :" />
                                <TextBox Grid.Column="1" Style="{x:Null}" Text="{Binding MarkDiffTolerance_Y, Mode=TwoWay}" />

                            </Grid>


                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Style="{x:Null}" Content="MarkDiffToleranceOfWA__X :" />
                                <TextBox Grid.Column="1" Style="{x:Null}" Text="{Binding MarkDiffToleranceOfWA_X, Mode=TwoWay}" />

                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Style="{x:Null}" Content="MarkDiffToleranceOfWA__Y :" />
                                <TextBox Grid.Column="1" Style="{x:Null}" Text="{Binding MarkDiffToleranceOfWA_Y, Mode=TwoWay}" />

                                <Button Grid.Column="2" x:Name="btn_MarkSysSave" Style="{x:Null}" Content="Mark SysParam Save"
                                        Click="btn_MarkSysSave_Click"/>

                            </Grid>


                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Mark Align Debug Func" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1" 
                                    IsChecked="{Binding MarkAligner.IsOnDebugMode, Mode=TwoWay}"/>
                            </Grid>

                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Row="1" Header="Fail occurrence control box">
                        <StackPanel Orientation="Vertical" Background="DimGray">

                            <!-- MARK_ALIGN_MOVE_ERROR -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MARK_ALIGN_MOVE_ERROR" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding MarkAligner.MarkAlignControlItems.MARK_ALIGN_MOVE_ERROR}" Checked="Mark_Align_Move_Error_Checked" Unchecked="Mark_Align_Move_Error_Unchecked"/>
                            </Grid>

                            <!-- MARK_ALIGN_FOCUSING_FAILED -->
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MARK_ALIGN_FOCUSING_FAILED" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding MarkAligner.MarkAlignControlItems.MARK_ALIGN_FOCUSING_FAILED}" Checked="Mark_Align_Focusing_Failed_Checked" Unchecked="Mark_Align_Focusing_Failed_Unchecked"/>
                            </Grid>

                            <!-- MARK_Pattern_Failure -->
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MARK_Pattern_Failure" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding MarkAligner.MarkAlignControlItems.MARK_Pattern_Failure}" Checked="MARK_Pattern_Failure_Checked" Unchecked="MARK_Pattern_Failure_Unchecked"/>
                            </Grid>

                            <!-- MARK_ALGIN_PATTERN_MATCH_FAILED -->
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MARK_ALGIN_PATTERN_MATCH_FAILED" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding MarkAligner.MarkAlignControlItems.MARK_ALGIN_PATTERN_MATCH_FAILED}" Checked="Mark_Algin_Pattern_Match_Failed_Checked" Unchecked="Mark_Algin_Pattern_Match_Failed_Unchecked"/>
                            </Grid>

                            <!-- MARK_ALIGN_SHIFT -->
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MARK_ALIGN_SHIFT" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding MarkAligner.MarkAlignControlItems.MARK_ALIGN_SHIFT}" Checked="Mark_Align_Shift_Checked" Unchecked="Mark_Align_Shift_Unchecked"/>
                            </Grid>

                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <!--Polish Wafer-->
            <TabItem Header="POLISH WAFER">
                <Grid>
                    <GroupBox Grid.Row="0" Header="Fail occurrence control box">
                        <StackPanel Orientation="Vertical" Background="DimGray">

                            <!-- POLISHWAFER_CENTERING_ERROR -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="POLISHWAFER_CENTERING_ERROR" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding PolishWafer.PolishWaferControlItems.POLISHWAFER_CENTERING_ERROR}" Checked="Polishwafer_Centering_Error_Checked" Unchecked="Polishwafer_Centering_Error_Unchecked"/>
                            </Grid>

                            <!-- POLISHWAFER_FOCUSING_ERROR -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="POLISHWAFER_FOCUSING_ERROR" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding PolishWafer.PolishWaferControlItems.POLISHWAFER_FOCUSING_ERROR}" Checked="Polishwafer_Focusing_Error_Checked" Unchecked="Polishwafer_Focusing_Error_Unchecked"/>
                            </Grid>

                            <!-- POLISHWAFER_CLEAING_ERROR -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="POLISHWAFER_CLEAING_ERROR" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding PolishWafer.PolishWaferControlItems.POLISHWAFER_CLEAING_ERROR}" Checked="Polishwafer_Cleaing_Error_Checked" Unchecked="Polishwafer_Cleaing_Error_Unchecked"/>
                            </Grid>

                            <!-- POLISHWAFER_CLEANING_MARGIN_EXCEEDED -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="POLISHWAFER_CLEANING_MARGIN_EXCEEDED" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          IsChecked="{Binding PolishWafer.PolishWaferControlItems.POLISHWAFER_CLEANING_MARGIN_EXCEEDED}" Checked="Polishwafer_Cleaning_Margin_Exceeded_Checked" Unchecked="Polishwafer_Cleaning_Margin_Exceeded_Unchecked"/>
                            </Grid>
                            
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="COLD">
                <Grid>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="DP Value : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding DewPointModule.EmulDewPoint, Mode=TwoWay}" x:Name="tb_dewpoint"/>
                            <Button Grid.Column="2" Content="SET" Click="Button_Click"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="ApplySVChangesBasedOnDevice: " Foreground="Black" />
                            <CheckBox Style="{x:Null}" VerticalAlignment="Center" IsChecked="{Binding TempController.TempControllerParam.ApplySVChangesBasedOnDevice.Value, Mode=TwoWay}"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="PROBING">
                <Grid>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4*"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Label Content="FULL SITE : " Foreground="Black" VerticalContentAlignment="Center"/>
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Height="140"
                                     Text="{Binding FullSite, Mode=TwoWay}"/>
                            <StackPanel Grid.Row="1" Grid.Column="0" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="X :" Foreground="Black" Margin="2"/>
                                    <TextBox Grid.Column="1" Style="{x:Null}"  Foreground="Black" x:Name="tb_probingXcoord" Margin="2"/>

                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Y :" Foreground="Black" Margin="2"/>
                                    <TextBox Grid.Column="1" Style="{x:Null}" Foreground="Black" x:Name="tb_probingYcoord" Margin="2"/>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="InSert 'O' " Foreground="Black" Margin="2"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding IsInsertOCommand}" Style="{x:Null}" Foreground="Black"  Margin="2"
                                              VerticalAlignment="Center" Checked="CheckBox_Checked_1" Unchecked="CheckBox_Unchecked_1"/>
                                </Grid>
                            </StackPanel>
                            <StackPanel Grid.Row="1" Grid.Column="1" >
                                <Button Content="SET" Click="Button_Click_3"/>
                                <Button Content="GET" Click="Button_Click_1"/>
                            </StackPanel>

                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Vision">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0">
                        <StackPanel>
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn_OpenPMTargetPathFileExplore" Style="{x:Null}" Content="File Explore"
                                        Click="btn_OpenPMTargetPathFileExplore_Click"/>
                                <Label Grid.Column="1" Style="{x:Null}" Content="Target Path :" />
                                <Label Grid.Column="2" Style="{x:Null}" Content="{Binding VisionPMTargetPath, Mode=TwoWay}" />
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn_OpenPMPatternPathFileExplore" Style="{x:Null}" Content="File Explore"
                                        Click="btn_OpenPMPatternPathFileExplore_Click"/>
                                <Label Grid.Column="1" Style="{x:Null}" Content="Pattern Path :" />
                                <Label Grid.Column="2" Style="{x:Null}" Content="{Binding VisionPMPatternPath, Mode=TwoWay}" />
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn_PatternMatching" Style="{x:Null}" Content="Pattern Matching"
                                        Click="btn_PatternMatching_Click"/>
                                <Label Grid.Column="1" Style="{x:Null}" Content="Score :" />
                                <Label Grid.Column="2" Style="{x:Null}" Content="{Binding VisionPMResultValue, Mode=TwoWay}" />
                                <Label Grid.Column="3" Style="{x:Null}" Content="Acceptance :" />
                                <TextBox Grid.Column="4" Style="{x:Null}" Text="{Binding PMAcceptanceValue, Mode=TwoWay}" />
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn_PMProcessingSAVE" Style="{x:Null}" Content="Vision Proc Save"
                                        Click="btn_PMProcessingSAVE_Click"/>
                                <Label Grid.Column="1" Style="{x:Null}" Content="PMLowDownAcceptance :" />
                                <TextBox Grid.Column="2" Style="{x:Null}" Text="{Binding PMLowDownAcceptance, Mode=TwoWay}" />
                            </Grid>

                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Row="1" Header="Image Collection Option">
                        <!-- Image Collection -->
                        <ComboBox Name="ImageCollectionOptionComboBox"
                                  Background="DimGray"
                                  Foreground="White"
                                  MinWidth="200"
                                  SelectionChanged="ComboBox_ImageCollectionOption_SelectionChanged"
                                  ItemsSource="{Binding ImageSaveFilters}"
                                  SelectedItem="{Binding ImageSaveFilter}"
                                  DisplayMemberPath="."
                                  SelectedValuePath="."/>
                    </GroupBox>
                    <GroupBox Grid.Row="2" Header="Encord and Decord">

                        <StackPanel Orientation="Vertical">

                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Content="IsEncord" Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <CheckBox Grid.Column="1" Style="{x:Null}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" Height="50" IsChecked="False" Checked="CheckBox_ImageBuffer_Encord_Checked" Unchecked="CheckBox_ImageBuffer_Encord_UnChecked"/>
                            </Grid>

                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>

                                <Button Style="{x:Null}" Content="File Explore" Click="btn_OpenVisionImageDecordTargetPathFileExplore_Click"/>
                                <Label Grid.Column="1" Style="{x:Null}" Content="Decord Target Path :" />
                                <Label Grid.Column="2" Style="{x:Null}" Content="{Binding VisionImageDecordTargetPath, Mode=TwoWay}" />
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Style="{x:Null}" Content="DECODE" Click="btn_ImageDecode_Click"/>
                            </Grid>

                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="STAGE">
                <Grid>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Stage Mode : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding StageSupervisor.StageMode, Mode=TwoWay}"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Style="{x:Null}" Height="40" Margin="2" Content="ONLINE" Name="btn_stageonlinemode" Click="btn_stageonlinemode_Click"/>
                            <Button Grid.Column="1" Style="{x:Null}" Height="40" Margin="2" Content="MAINTENANCE" Name="btn_stagemaintenancemode" Click="btn_stagemaintenancemode_Click"/>
                            <Button Grid.Column="2" Style="{x:Null}" Height="40" Margin="2" Content="OFFLINE" Name="btn_stageofflinemode" Click="btn_stageofflinemode_Click"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="PROBER">
                <Grid>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="PROBER ID : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding ProberID, Mode=TwoWay}" x:Name="tb_proberID"/>
                            <Button Grid.Column="2" Content="SET" x:Name="btn_proberId_save" Click="btn_proberId_save_Click"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="PMI">
                <Grid Background="DimGray">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="PMI DelayInFirstGroup (ms) : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding PMIDelayInFirstGroup, Mode=TwoWay}" x:Name="tb_pmiDelayInFirstGroup"/>
                            <Button Grid.Column="2" Content="SET" x:Name="btn_setPMIDelayInFirstGroup" Click="btn_setPMIDelayInFirstGroup_Click"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="PMI DelayAfterMoveToPad (ms) : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding PMIDelayAfterMoveToPad, Mode=TwoWay}" x:Name="tb_pmiDelayAfterMoveToPad"/>
                            <Button Grid.Column="2" Content="SET" x:Name="btn_setpmiDelayAfterMoveToPad" Click="btn_setpmiDelayAfterMoveToPad_Click"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="DoPMI() save Image for debug : " Foreground="Black" />
                            <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1" 
                                      IsChecked="{Binding DoPMIDebugImages}"
                                      Checked="DoPMIDebugImages_CheckBox_Changed" Unchecked="DoPMIDebugImages_CheckBox_Changed"/>
                        </Grid>
                        
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="Tester" >
                <Grid Margin="10">
                    <TabControl>
                        <TabItem Header="Command">
                            <StackPanel VerticalAlignment="Stretch">
                                <StackPanel Background="Gray" VerticalAlignment="Bottom">
                                    <ListView Grid.Row="0" MaxHeight="500" ItemsSource="{Binding ScenarioModule.CommandRecipe.Commands}" 
                                    ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible"  ScrollViewer.CanContentScroll="True"  >

                                        <ListView.ItemTemplate>
                                            <DataTemplate >
                                                <Grid  Background="AliceBlue" >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>

                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Name}" Foreground="Black" Padding="5" Grid.Column="0" MinWidth="50"/>
                                                    <Button Content="Read" Click="btn_read_command_Click"  CommandParameter="{Binding }" Grid.Column="1" MinWidth="50"  />
                                                    <TextBlock Text="{Binding Result}" HorizontalAlignment="Stretch" Foreground="Black" Grid.Column="2" Margin="10" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>

                                    </ListView>
                                    <Border BorderBrush="Beige" BorderThickness="2" VerticalAlignment="Bottom">
                                        <Grid MinHeight="50">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="0.3*"/>
                                                <ColumnDefinition/>

                                            </Grid.ColumnDefinitions>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Immadiate Command Run: " VerticalAlignment="Center"/>
                                                <TextBox Background="AliceBlue" x:Name="txt_custom_command" Grid.Column="1" MinWidth="50000" FontSize="20" VerticalContentAlignment="Center"/>
                                            </StackPanel>
                                            <Button Content="Read" Click="btn_custom_read_command_Click"  Grid.Column="1" MinWidth="50"  />
                                            <TextBlock x:Name="tb_custom_command_result" HorizontalAlignment="Stretch" Foreground="Black" Grid.Column="3" Margin="10" />
                                        </Grid>
                                    </Border>
                                </StackPanel>
                            </StackPanel>
                            
                        </TabItem>
                        
                        <TabItem Header="Scenarios">
                            <StackPanel Orientation="Vertical">

                                <Border BorderBrush="Black" BorderThickness="1">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="SelectedScenario" Foreground="Black" FontWeight="Bold"/>

                                        <ComboBox Name="TesterScenarioComboBox" Background="DimGray" Foreground="White" MinWidth="200" 
                                          SelectionChanged="ComboBox_TesterScenario_SelectionChanged"
                                          ItemsSource="{Binding ScenarioModule.Scenarios}"
                                          SelectedItem="{Binding ScenarioModule.SelectedScenario, Mode=OneWay}"
                                          DisplayMemberPath="Name"
                                          SelectedValuePath="Name"/>      
                                    </StackPanel>
                                </Border>
                                
                                <Border BorderBrush="Black" BorderThickness="1">
                                    <ListView ItemsSource="{Binding ScenarioModule.SelectedScenario.Commands}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    
                                                    <TextBlock Text="{Binding Name}" Foreground="LimeGreen" FontWeight="Bold"/>
                                                    
                                                    <ListView ItemsSource="{Binding RequestSet}">
                                                        <ListView.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <TextBlock Text="{Binding RequestName}" Foreground="Black"/>
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>
                                                    </ListView>
                                                    
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Border>
                            </StackPanel>
                            
                        </TabItem>
                        
                    </TabControl>
                   
                    
                </Grid>
            </TabItem>  
            
            <TabItem Header="PINALIGN" >
                <Grid>
                    <GroupBox Grid.Row="1" Header="Fail occurrence control box">
                        <StackPanel Orientation="Vertical" Background="DimGray">

                            <!-- PIN_ALIGN_Failure -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="PIN_ALIGN_Failure" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          Checked="PIN_ALIGN_Failure_Checked" Unchecked="PIN_ALIGN_Failure_Unchecked"
                                          IsChecked="{Binding PinAligner.PIN_ALIGN_Failure}"/>
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Each Pin Failure" Foreground="Black"/>
                                <CheckBox VerticalAlignment="Center"  Width="50" Height="50" Grid.Column="1"
                                          Checked="PIN_ALIGN_Failure_Checked" Unchecked="PIN_ALIGN_Failure_Unchecked"
                                          IsChecked="{Binding PinAligner.Each_Pin_Failure}"/>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="LOT" >
                <Grid>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Label Content="LoadedWaferCountUntilBeforeLotStart : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding LoadedWaferCountUntilBeforeLotStart, Mode=TwoWay}"/>
                            <Button x:Name="SetLoadedWaferCountUntilBeforeLotStartBtn" Grid.Column="2" Content="SET" Click="SetLoadedWaferCountUntilBeforeLotStartBtn_Click"/>
                        </Grid>
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Label Content="LoadedWaferCountUntilBeforeDeviceChange : " Foreground="Black" />
                            <TextBox BorderBrush="Black" BorderThickness="0.6" Grid.Column="1" Foreground="Black"
                                     Text="{Binding LoadedWaferCountUntilBeforeDeviceChange, Mode=TwoWay}"/>
                            <Button x:Name="SetLoadedWaferCountUntilBeforeDeviceChangeBtn" Grid.Column="2" Content="SET" Click="SetLoadedWaferCountUntilBeforeDeviceChangeBtn_Click"/>
                        </Grid>
                        
                    </StackPanel>
                </Grid>
            </TabItem>
            
        </TabControl>
    </Grid>

</Window>
