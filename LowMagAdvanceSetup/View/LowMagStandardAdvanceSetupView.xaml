<dialogs:CustomDialog x:Class="LowMagAdvanceSetup.View.LowMagStandardAdvanceSetupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LowMagAdvanceSetup.View"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:focusingcontrol="clr-namespace:FocusingControl;assembly=FocusingControl"         
             mc:Ignorable="d" x:Name="ucdialog">
    <Grid Margin="-60,0,-60,0">
        <Grid.Resources>
            <ResourceDictionary>
                <local:EnumDescriptionConverter x:Key="EnumDescriptionConv"/>
                <Style x:Key="ContentTextBox" TargetType="TextBox">
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="18" />
                </Style>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0" >
            <TabItem AutomationProperties.AutomationId="tiAlign"
                     Header="ALIGN">
                <StackPanel>
                    <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="7*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="JumpIndex Setup Type" Foreground="Black" FontWeight="DemiBold"/>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Label Content="MANUAL" Foreground="Black" FontWeight="DemiBold"/>
                            <CheckBox AutomationProperties.AutomationId="cbJumpIndexManual"
                                      x:Name="cb_manual" VerticalAlignment="Center" Style="{x:Null}"
                                      IsChecked="{Binding ManualChecked, Mode=TwoWay}"/>
                            <Label Content="AUTO" Foreground="Black" FontWeight="DemiBold"/>
                            <CheckBox AutomationProperties.AutomationId="cbJumpIndexAuto"
                                      x:Name="cb_auto" VerticalAlignment="Center" Style="{x:Null}"
                                      IsChecked="{Binding AutoChecked, Mode=TwoWay}"/>
                        </StackPanel>

                    </Grid>
                    <Label Grid.Row="1" Content="Manual Input JumpIndex(Please input as a positive number.)" Foreground="Black" FontWeight="DemiBold"/>
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="1" Grid.Row="2" Content="LEFT" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>

                        <Label Grid.Column="2" Grid.Row="2" Content="CENTER" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>
                        <Label Grid.Column="3" Grid.Row="2" Content="RIGHT" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>


                        <TextBox AutomationProperties.AutomationId="txtJumpIndexLeft"
                                 x:Name="tb_left1" 
                                 Text="{Binding LeftJumpIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Grid.Column="1" Grid.Row="3" Style="{DynamicResource ErrorInfoTextBoxStyle}"
                                 IsEnabled="{Binding TestBoxInEnabled}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown" >
                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>


                        <TextBox AutomationProperties.AutomationId="txtJumpIndexRight"
                                 x:Name="tb_right1" Grid.Column="3" 
                                 Text="{Binding RightJumpIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="3" Style="{DynamicResource ErrorInfoTextBoxStyle}"
                                 IsEnabled="{Binding TestBoxInEnabled}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown" >
                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>

                        <!--<TextBox x:Name="tb_upper" Grid.Column="2" Grid.Row="1" Margin="8"  Style="{StaticResource DefaultTextBox}"/>-->
                        <!--<TextBox x:Name="tb_left1" Grid.Column="1" Grid.Row="3" Margin="8"   Style="{StaticResource DefaultTextBox}"/>-->
                        <!--<TextBox x:Name="tb_left2" Grid.Column="0" Grid.Row="3" Margin="8"   Style="{StaticResource DefaultTextBox}"/>-->
                        <!--<TextBox x:Name="tb_center" Grid.Column="2" Grid.Row="3" Margin="8"   Style="{StaticResource DefaultTextBox}"/>-->
                        <!--<TextBox x:Name="tb_right1" Grid.Coclumn="3" Grid.Row="3" Margin="8"  Style="{StaticResource DefaultTextBox}"/>-->
                        <!--<TextBox x:Name="tb_right2" Grid.Column="4" Grid.Row="3" Margin="8"  Style="{StaticResource DefaultTextBox}"/>-->
                        <!--<TextBox x:Name="tb_bottom" Grid.Column="2" Grid.Row="5" Margin="8"  Style="{StaticResource DefaultTextBox}"/>-->
                    </Grid>
                    <Line Grid.Row="3" StrokeThickness="1"/>


                    <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2.5*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Selected Processing Point (Except Registration Wafer Alignment)" Foreground="Black" FontWeight="DemiBold"/>
                            <ComboBox AutomationProperties.AutomationId="cmbProcessingPoint" Grid.Column="1" HorizontalAlignment="Right" x:Name="combo_ProcessingPoint"  Width="200" FontSize="15"
                                        ItemsSource="{Binding EnumProcessingPoints}" 
                                        SelectedItem="{Binding Low_ProcessingPoint}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConv}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                    <!--<Label Grid.Row="4" Content="Selected Processing Point" Foreground="Black" FontWeight="DemiBold"/>-->

                    <Label Grid.Row="5" Content="Manual Input PatternMatching Parameter" Foreground="Black" FontWeight="DemiBold"/>
                    <Grid  Grid.Row="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <!--<CheckBox Margin="2" Grid.Row="1" Grid.Column="1" Content="initialization" VerticalAlignment="Center"
                          HorizontalAlignment="Right" FontSize="12"
                          Command="{Binding CmdInitPMParam}" IsChecked="{Binding CheckInitPMParam}"/>-->
                        <Label Grid.Row="0" Content="Acceptance : " HorizontalAlignment="Right"/>
                        <TextBox AutomationProperties.AutomationId="txtPatternMatchingAcceptance"
                                 Grid.Row="0" Grid.Column="1"  Style="{DynamicResource ErrorInfoTextBoxStyle}"
                                 Text="{Binding PMAcceptance, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown" >
                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </Grid>

                </StackPanel>
            </TabItem>
            <TabItem Header="FOCUSING">
                <focusingcontrol:FocusingViewControl 
                    FocusParam="{Binding DataContext.FocusParam, Mode=TwoWay, ElementName=ucdialog}"/>
            </TabItem>
        </TabControl>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" >
            <Button AutomationProperties.AutomationId="btnOK"
                    Content="OK" Margin="4" FontSize="15" Command="{Binding CmdOKClick}" Width="80" HorizontalAlignment="Right" />
            <Button AutomationProperties.AutomationId="btnCancel"
                    Content="CANCEL" Margin="4" FontSize="15" Command="{Binding CmdCancelClick}" Width="80" HorizontalAlignment="Right" />
        </StackPanel>
    </Grid>
</dialogs:CustomDialog>
